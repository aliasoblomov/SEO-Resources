"Address","Status Code","Status","content 1"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/who-can-edit-a-data-source","200","OK","LevelIntermediateThose with Edit permission to to your Data Sources can change the connection (e.g. connect the data source to another Google Analytics view, another Google Ads account, or another Google Sheet), refresh fields, and most importantly update credentials of the data sources to their own?One implication is that if a person leaves your organization and they no more have access to the underlying dataset, and the data source was set to use Owner's Credentials, the report will break until another editor re-connects the data source using their own credentials.Also, this gives report editors more control over embedded data sources, because report editors, by default, also have edit permission to the data sources that are embedded into the report.So, depending on how you manage access to your reports and data sources, it might be a good idea to review who has Edit access to your data sources, or decide if you need to swap an embedded data source with a reusable one to have a tighter control on who has Edit access to it and what other users can do with it.Here's the official Google documentation:Who can edit a data source?Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/track-your-report-in-ga","200","OK","LevelIntermediateHow to Track Your Looker Studio Dashboards in GAAre your client's actually using their dashboards?You spend many sleepless nights to create a beautiful report and then you finally share it with your team, client, or your boss...And then you start wondering:Are they even looking at it?If so, which pages are they using more often?In today's tip I'll show you how to track the usage of your Looker Studio dashboards using Google Analytics.This way, you can get insight on:How frequently your report is being viewed,What pages are the most popular,From which cities or countries your report is being accessed,and so on...Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/time-series-intervals","200","OK","LevelIntermediateI've got something really cool to share with you today: Time Series Intervals in Looker Studio.Here's the rundown:I'll break down what time series intervals are (Spoiler: They're awesome).We'll play around with creating a shaded area on your time series chart - think of it like a dynamic boundary line.We’ll check out all the different types of intervals - area, bar, box...you name it!I'll show you some neat interval modes like center and width mode.And just when you thought that was it, I'll teach you how to add multiple intervals on your chart.Ready to dive in? Check out the video here: Once you've had a look at the tutorial, why not give it a go in your own dashboards or reports? These intervals can add some serious depth and context to your visualizations.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/stylish-drop-down-menu-with-icon","200","OK","LevelBeginnerThe default drop-down menus in Looker Studio are boring.Today we want to make them more attractive to keep our dashboard audience engaged. It’s quite easy and quick.All you need is your icon in PNG format (I use Flaticon) and some extra space to the left of the drop-down menu's title.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/scheduled-email-failure-notification","200","OK","LevelBeginnerDid you know that you will receive an email from Looker Studio if your scheduled email reports fail to go out?I find this very handy because there were times in the past that my scheduled email reports were failing and I didn't notice until the client started complaining about not receiving the emails.The good news is, this feature is now enabled by default, helping us monitor and fix these issues quickly to ensure the clients' experience aren't negatively impacted.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/row-level-security-with-google-sheets","200","OK","LevelAdvancedImagine this scenario:Your client has 50 sales managers (or departments, offices, stores etc.) and they’ve got a single dataset containing all data related to their activities.They want a report that shows performance.But they want each viewer to only be able to see their own performance, and not those of others…For example, they want to allow me to see my own sales (green rows), but not those of others:How would you approach this in Looker Studio?Let’s look at a few solutions:Solution #1: Copy & PasteYou create one main report, finalize it, get it approved. Then you duplicate it 50 times, filter each report to show only a segment of data and share each filtered report with the appropriate person.It ensures security, but what if the client request tweaks, updates, or changes to the report? How are you going to maintain 50 instances?Solution #2: URL FiltersYou create one main report and you share custom links with personalized URL parameters with each person, effectively applying the filter through the URL.But what happens if someone removes the URL parameters*?Will they see all data?For those of you who are thinking of ""that"" other workaround to make sure removing the URL parameter doesn’t work: I get your point, it works. But still, it’s not an elegant solution.Solution #3: Row Level SecurityYou create and maintain a single report, using email-based row level security (RLS) and you let Google manage who sees what row based on the email address that they use to access the report.In today’s short and silent video (2mins), I will show you how to set up email-based row level security using Google Sheet data.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/named-versions","200","OK","LevelIntermediateAs you might already know, or have seen the earlier tip on ""Reverting your report to an earlier version"", Looker Studio keeps a history of the changes we make to a report in real time.But did you know that we can also manually save a named version of a report or a data source at any time?We can then quickly view or restore it in the version history panel.On top of that, we can also see who has created a version and when.This allows us to better correlate version control in Looker Studio with the rest of our workflows.For example, we can label before and after versions based on changes we make in other tools, like GTM and BigQuery, so that we can quickly revert back the report if we also revert the changes in the other tool.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/metric-sparkline-combo","200","OK","LevelBeginnerHave you ever wanted to show a metric on your dashboard and at the same time show how it's been trending over time?To do this, we can use a simple chart called Sparkline which is a  small line chart without axes or labels.In today's quick tip I'm going to show you how to quickly create a simple and elegant metric + sparkline combo charts.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/looker-studio-tips/the-curious-case-of-google-search-console","200","OK","LevelIntermediateIn today's Looker Studio tip I'm going to walk you through the process of troubleshooting a weird case about reporting on Google Search Console data in Looker Studio. It took me some digging to figure it out the cause, and I want to share what I learned with you.Even if you don't use Search Console, you may face similar issues with other data sources, so I encourage you to watch this video - you're sure to pick up some helpful troubleshooting techniques!The key takeaway is learning a systematic approach to troubleshooting the unexpected in Looker Studio by examining the raw data to reveal what's really going on under the hood.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/looker-studio-tips/blending-and-filtering-multiple-ad-accounts","200","OK","LevelAdvancedThe keyword is ""Filtering"". It sounds trivial, but is absolutely isn't!Filtering Blended Data sources based on a custom field is one of the most challenging and confusing tasks to be done in Looker Studio.At least, until blended data sources are entities of their own and can have custom fields created at Data source level.Until then, we need a workaround!In today's ~30min video, we blend two Ad accounts (Microsoft Ads and Google Ads) and then we will try figure out how to create a filter that only keeps the sources we need.And finally, we'll try to understand WHY the workaround works, and in the process will learn a lot about how data blending, join types, and filters work in the background of Looker Studio.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/looker-studio-tips/adjusting-the-range-for-y-axis","200","OK","LevelBeginnerHave you ever noticed that on some charts your X-Axis is missing, and was wondering why on earth is this happening?This is caused by automatic adjustment of min/max values on the Y-Axis.Here's how to fix it in 48 seconds:Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/looker-studio-tips/adjusting-date-range-granularity","200","OK","LevelIntermediateJust because your date field is in YYYY-MM-DD format or even in Date-Time format (YYYY-MM-DD HH:MM), it doesn't mean that you can't show your metrics on a weekly, monthly, or quarterly basis!You can use the same Date field, and change its Granularity.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/looker-studio-tips/adding-dynamic-chart-titles-with-templrpro","200","OK","LevelAdvancedLet's see how to use templr.pro community visualization, the one I introduced last week, to create a dynamic chart title:
One that automatically changes based on the dimensions and metrics applied at the DATA tab on the sidebar panel.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/extract-theme-from-an-image","200","OK","LevelBeginnerDo you have a dashboard that needs to be finished yesterday?You're not alone. We all have those days where we feel overwhelmed and just want everything done right now.Sadly, there's no shortcut for creating quality dashboards.But what if I told you there's an easy way to speed up customizing the colors and the visual theme of your whole dashboard, in just a few seconds, and without sacrificing quality?It's called Theme Extraction.In today's tip, I'll show you how to quickly extract a theme from an image and save time, so that your work doesn't get put off until later.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/extract-a-field-from-url-query-parameter","200","OK","LevelAdvancedSometimes data points that we are looking for aren't directly included in the data source, but can be found somewhere else within the values of other dimensions.For example, let's imagine we'd like to report on Sessions per Affiliate ID, but we don't have the affiliate ID as a separate field in our data source.This could be any field, of course. I'm using Affiliate ID as an example.However, we notice that there's an ?affid=1234 query parameter attached to the Landing Page URLs whenever the session was initiated by an affiliate. For example:www.website.com/?affid=1234In today's video, I'm going to show how to use Regular Expressions, or RegEx, to extract the Affiliate ID from the URL query parameter and store it in its own separate field in Looker Studio.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/dynamic-chart-reference-lines","200","OK","LevelIntermediateReference lines help us add context to the charts, we can set ones that are fixed, e.g. when we know the target for a KPI, or calculated ones like the average, minimum, or maximum value of a metric.But what if we don't know the KPI target beforehand and want to allow the viewer to decide where to put the reference line?We can achieve this by using a Parameter as the value for the reference line.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/currency-conversion-in-google-ads","200","OK","LevelIntermediateWorking with multiple currencies in Google Ads?The Shortest Looker Studio Tip Award 🏆 goes to...If you connect to a Google Ads manager account and select All Currencies for accounts that use different currencies... Looker Studio will convert all revenue fields into a single currency: That of the top level MCC account.That was a quick one, wasn't it?Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/continuous-reporting-universal-ga4-piwik-pro-etc","200","OK","LevelAdvancedContinuous Reporting: Universal + GA4 / Piwik PRO, etc.After the sunset of Universal Analytics, you will have two web analytics datasets: Historical (UA) and current which is likely GA4 or another solution such as Piwik PRO etc.This will introduce the need in some visualizations to show a continuous graph which spans from an earlier date (historical) and follows into the current date range for which we have data in another data source. Something similar to this:In today's tip, I'm gonna show you how to use Data Blending in Looker Studio to create such a chart:Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/conditional-visibility","200","OK","LevelAdvancedHave you ever wanted to hide a chart, component, or annotation based on certain criteria? or... make something invisible by default, and have it only show up if certain conditions are met?Well... it might seem impossible at first, but after watching this short silent video, you’ll see how easy it is! Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/calculate-percent-of-total","200","OK","LevelBeginnerWhen a metric is added to a table, by default it appears in its original form (e.g. as a number or currency).But there are times that we're interested to see each metric as a percentage of total, to quickly compare the share of different categories towards the total value of that metric.Fortunately, it's easy to achieve in Looker Studio by assigning a Comparison Calculation to the metric.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/blending-facebook-google-ads-cost-data","200","OK","LevelIntermediateOur data rarely sits in a single tool or platform. Usually we need to take a look at numbers from different sources to see a useful version of what's happening in our business or those of our clients.There are times that it makes sense to visualize data from multiple platforms side by side, but there are also times that we need to show similar or closely related metrics from different platforms on a single chart or graph.Cost (Ad Spend) is one of the metrics that occurs across multiple ad platforms and thus, we usually want to see a breakdown, or trend, of our expenditure over different channels in a single chart.Today, we're going to see how to show Cost data, per day, from Facebook Ads and Google Ads in a single time-series chart.I this example, I use the built-in data connector for Google Ads, and Supermetrics for Facebook Ads data.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/bands-and-vertical-reference-lines","200","OK","LevelAdvancedToday, I have an exciting update for you, we’re delving into bands and vertical reference lines in Looker Studio: new feature that were released just last week.If you’ve been working with time series charts in Looker Studio, this feature will be a game-changer for you.Previously, we could only add horizontal reference lines to our charts. Now, with the introduction of vertical reference lines and bands, we can highlight specific points or periods of time on our charts:Here’s what I’ll cover in today’s tip:Vertical Reference Lines: This allows us to add vertical lines at specific points on our time series chart. For instance, we can highlight when there was a server crash or when a new campaign was launched. Bands (Horizontal and Vertical): Bands are an extension of reference lines where we can shade the area between two reference lines. This helps in highlighting a range of dates on our chart, for example during a sales campaign or product launch. Watch it here (10mins)Note: Vertical reference lines are best used when the date range of your dashboard is fixed and you don’t anticipate values falling outside this date range.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/advanced-date-range","200","OK","LevelIntermediateHow to use Advanced Date Range to define a dynamic date range: e.g. ""Last 9 Months""Applying fixed date ranges to a chart is easy: you only need to select the start and end date and you're done.Apart from this, there are several dynamic date ranges that can be applied to a chart, ranges like Last 7 days, This month to date, Last quarter, etc.The start and end dates of a dynamic date range will be evaluated automatically at the time the report is accessed by the viewer, ensuring the correct date range is applied.But what if we need a dynamic date range which is not available by default in Looker Studio?In such cases, we can use the powerful Advanced Date Range feature, which allows us to select custom dynamic start date and end dates.In this tip, I'll show you how to use this feature to define a dynamic date range which is not included by default.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/018-descriptive-reporting-using-templrpro","200","OK","LevelAdvancedHave you ever wanted to literally describe data and tell stories, instead of simply showing numbers on a chart or table?Well, with some very basic HTML and CSS, you can actually achieve that and much more, right within Looker Studio!Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/017-using-any-google-font-on-titles","200","OK","LevelIntermediateFonts are one of the most important components of design.Google Fonts has more than 1400 professional web fonts, all can be used for free to immediately add a nice touch to your entire report.But in Looker Studio, we only have access to ~40 fonts, including the usual suspects like Arial, Times New Roman, Tahoma, Comic Sans, etc.This, in my opinion, brings down the number of useful, designer friendly fonts down to maybe around 10, and I haven't yet found a way to use custom Google Fonts inside the charts.But today, I'm going to show you how to use any Google Font in your titles to differentiate the design of your report and make it look professional and on-brand.To do this, we need to use a simple community component, which we initially developed at Siavak to use in our client reports.Note: It’s not currently possible to use custom Google Fonts in built-in charts or tables.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/016-documenting-your-dashboard","200","OK","LevelIntermediateHave you found yourself writing long CASE functions, regex replaces, custom formulas etc. and then coming back to your report in a few weeks, not knowing exactly why it was done that way?This is specially important if you're working in a team and want to keep everyone on the same page, knowing why a function has been written in a specific way, or what exactly each field represents.In this video I'm going to show you:How to add comments to your functionsHow to add notes to your reports which are hidden to the viewers and can only be seen in the Edit mode.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/015-report-generation-timestamp","200","OK","LevelIntermediateWhen you export a report in PDF format or choose a PDF version to be emailed to specific people at pre-scheduled intervals, the generated PDF doesn't indicate the date and time on which the report was generated.This is useful to know for troubleshooting any data discrepancies you might find out later on, specially if the report is being used for sensitive business operations.In this week's quick tip, I'll show you how to add a dynamic timestamp, anywhere on the report canvas:Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/014-applying-filters-to-selected-charts","200","OK","LevelIntermediateSometimes we might want to use a drop-down control to apply a filter to a single chart, or group of charts only and not to the entire report.However, by default, a drop-down or date range control affects all charts on the page.How can we configure a drop-down to only affect certain charts  and not the others?Luckily, it's easy!Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/013-navigation-to-respect-report-theme","200","OK","LevelBeginnerThis might be a small feature for most people, but a HUGE one for me and anyone who takes the aesthetics of their dashboard seriously.By enabling the Respect Report Theme option, we can match the report navigation to the report theme, this applies to both navigation types: Left navigation and Tab navigation.The background color, the font, and the font color of the navigation will match those of the report theme, resulting in a seamless and coherent user interface.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/012-reverting-a-report-to-an-earlier-version","200","OK","LevelBeginnerWhen you change or remove something by mistake, you can hit Ctrl+Z, or use the icons in under the menu bar. You already knew this:But what if you close the tab and come back again, or another user with Edit access makes a change that you want to revert?❌ There's no way to undo your changes after closing the tab.❌ It's not possible to undo the changes that others have made.Luckily, Looker Studio automatically saves the report from time to time and we can use Version History to revert the report to an earlier version.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/011-read-only-date-ranges","200","OK","LevelBeginnerTo show the date range of a report page, we usually add a date range selector somewhere around the top. But what if we just want to show the date range, but not necessarily allowing the viewer to adjust or change it?This is useful for a table or component that is located below the fold, where the date range selector is no longer visible, or for when a chart or component isn't connected to the page level date selector, but has its own dynamic date range applied to it.Other than the function I used in the video above, you can also use these functions:CopyMIN(Date)Which is simpler, and returns Date in Jan 1, 2021 format, orCopyCONCAT(
   ""From "",
   CAST(MIN(Date) AS STRING),
   "" to "",
   CAST(MAX(Date) AS STRING)
)Which returns a string of text like below, within the scorecard:CopyFrom 2021-12-09 to 2022-01-05Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/010-counting-the-number-of-values-in-a-dimension","200","OK","LevelIntermediateThere are two types of fields: Dimensions (strings) and Metrics (numbers).Usually, we use dimensions to breakdown a metric by different categories.E.g. breakdown of Revenue by Countryor Sessions by Source / Medium.Creating such breakdown is easy: Just add a table, add the metric and dimension, and you're done.But what if you want to report the number of values in a dimension, to answer questions like:How many countries did we have traffic from last month?(i.e. number of unique values in the field Country)orHow many closed deals did we have last week?(i.e. Total number of rows where deal type equals: ""Closed"")In this video, I show you a few ways to count the number of values in a field.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/009-horizontal-scroll-in-tables","200","OK","LevelBeginnerDepending on the number of fields you add to a table, it can get very busy and crowded, with truncated headers and even truncated values.Such a busy table isn't very useful, is it?Especially considering that Looker Studio tables can support up to 100 dimensions and metrics when connected to flexible schema data sources like Google Sheets and BigQuery.The solution? Horizontal Scrolling in TablesYou can simply enable it for any table under the STYLE tab. Watch the video to see how it works.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/008-exclude-outliers-from-charts","200","OK","LevelBeginnerThere might be days where we get a surge of spam traffic or a huge wholesale order or several test purchases from our beloved dev team.That skew our metrics: causing data quality issues like bloated totals, skewed averages, and unusual spikes in trend lines.If you're lucky, you can find a way to isolate and filter out these records within the original dataset and clean your data.But what if you can't?One solution, if the outliers happen to be on specific dates, is to exclude those days from your charts.You will also learn how to deal with missing data points on a time series chart!Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/006-grouping-branded-non-branded-keywords","200","OK","LevelIntermediateIf you report on Google or Microsoft Ads, one of the most basic breakdown views that you'd like to report on is the comparison between two categories:Branded and Non-branded search keywords.Looking at the average performance of all keywords, regardless of their category, isn't really that insightful, is it?Let's see how we can group search keywords a using CASE function and some basic RegEx.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/005-decluttering-charts-with-optional-metrics","200","OK","LevelBeginnerYour client, or your boss, is asking for several metrics on a report.They want it all and there's no getting away from it!But you know that having lots of numbers, lines, or bars on a single component will make it cluttered, ugly, and hard to read.One solution is to make metrics optional: To allow the viewer to decide which metrics to show or hide.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/004-creating-dynamic-email-buttons","200","OK","LevelIntermediateI initially recorded this in response to a question posted by a member of the community.They had email addresses in a field and wanted to create clickable buttons to allow the viewers of the report to send an email to that address.It might sound complicated but in fact, it's straightforward using IMAGE() and HYPERLINK() Functions.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/003-excluding-values-from-charts","200","OK","LevelIntermediateYou probably know how to add drop-down menus to filter the report based on different values of a field.But what if you want a checkbox to exclude records of one particular value from your charts?This can be excluding users from a certain country, a specific audience segment, or sessions from one particular Source/Medium...It's not straightforward, but it's easy to achieve using the Boolean custom field type.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/002-alternatives-to-pie-charts-ii","200","OK","LevelBeginnerIf you create reports frequently, I bet you've used Pie Charts at some point.Pie Charts aren't the best when it comes to data visualization, mainly because the human brain is not efficient at comparing the length of curved lines or internal angles of pies. Plus, it's tasking for the eye to jump quickly from the pie to the legend to connect each pie to its category.When you need to compare the % share of different categories in a field, you might feel there's no other way than using a pie chart.In the previous tip, I shared one alternative to using Pie Charts, and here is a second, probably even better, alternative:A 100% Stacked Single Horizontal BarThis single bar chart is very useful when you don't have much vertical space on your report canvas.Believe it or not, the trickiest part is adding the Dimension title on the left!Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-tips-website/001-alternatives-to-pie-charts-i","200","OK","LevelBeginnerIf you create reports frequently, I bet you've used Pie Charts at some point.Pie Charts aren't the best when it comes to data visualization, mainly because the human brain is not efficient at comparing the length of curved lines or internal angles of pies.Plus, it's tasking for the eye to jump quickly from the pie to the legend to connect each pie to its category.When you need to compare the % share of different categories in a field, you might feel there's no other way than using a pie chart, but here, I'm going to show you one of my favorite alternatives:A Horizontal Bar ChartCreating a horizontal bar chart is easy, and it's better than a pie chart because it's easier to interpret.The trick is getting each bar to appear in a different color, and to show the percentage of total rather than the actual metric on each bar.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/looker-studio-custom-charts","200","OK","Google Fonts ProGoogle Fonts ProMaterial Symbols ProMaterial Symbols Pro"
"https://lookerstudiomasterclass.com/chapter-8-data-visualization-styling-like-a-pro","200","OK","Chapter 8: Data Visualization: Styling Like a Pro In the previous lessons we tackled best practices when it comes to interactive data visualization: storytelling, adding context, communicating status, using colors, avoiding distraction, and how to tell not show.In this chapter we will learn the ways to style like a pro. We will see what tools we have at our disposal to efficiently implement and complete our vision when visualizing data.8.1. Mastering Your Style in Looker StudioIn the last chapter, we covered best practices in data visualization, the art of storytelling, and how to choose the right chart. Here are some takeaways from the last chapter:Tell, don't just show.Remember that the goal of data visualization is to communicate information clearly and effectively. Ensure that your visualizations convey the message you want to present. Guiding your viewer through the story helps them understand the data and derive insights more easily.Color with intention.Colors play a significant role in data visualization. Use them wisely and consistently to enhance your viewer's understanding. For example, apply conditional formatting with red, green, and yellow to indicate negative, positive, and warning statuses, respectively. By doing so, you can draw attention to the most important aspects of your data.Increase Data-Ink Ratio: Less is more.Keep your visualizations clean and straightforward by reducing visual clutter. Focus on increasing the data-ink ratio – the proportion of ink used to display the data compared to the total ink used in the graphic. Simplify your charts by removing unnecessary elements and highlighting the most important information.Now that we know how do we want to visualize data, let’s actually put it in action by mastering the tools at our disposal.To make your visualizations stand out, it's crucial to become proficient with the tools you have at hand: to familiarize yourself with the features and functionalities of Looker Studio. The more comfortable you are with the tools, the more efficient and creative you can be in bringing your vision to life.We have four main sections today:Styling like a pro Time saving techniquesEffective communication Community visualizationsLet’s begin!→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn8.1. Mastering Your Style8.2. Report Layout Customization8.3. Theme Customization8.4. Dimension Color Management8.5. Page Level Theme & Layout Settings8.6. Time Saving Techniques8.7. Effective Communication8.8. Community Visualizations"
"https://lookerstudiomasterclass.com/chapter-7-data-visualization-best-practices","200","OK","Chapter 7: Data Visualization: Best Practices In this chapter we will cover the best practices in data visualization and will learn how we can be more effective when it comes to data storytelling in Looker Studio (formerly Google Data Studio). 7.1. Data Visualization Best PracticesIn previous lessons, we've explored the importance of data aggregation, numerical analysis, and the categorization of data. We've covered techniques to process, clean, and reshape data into various groupings, such as channel groups, and have employed regular expressions to refine text. So far, our results have been presented in tables, but we haven't yet delved into the world of data visualization.This week, we will shift our focus to visualizing data. Our goal is to effectively communicate insights and tell stories with data, empowering people to find answers in the information we've prepared for them. This lesson will be divided into two parts: the first focusing on best practices, and the second on ""styling like a pro."" In this first part, we will explore the principles of data visualization, while in the second part, we will learn how to apply these principles in practice.Today's lesson will cover:Storytelling: Harnessing the power of data visualization to convey meaningful stories.Chart Selection: Choosing the right chart type to communicate your message effectively.Contextualization: Enhancing your charts with reference lines and other contextual elements.Conditional Formatting: Communicating data status by applying visual cues based on specific conditions.Color Consistency: Using colors purposefully and consistently to improve comprehension.Distraction Avoidance: Removing unnecessary clutter to increase the value and impact of your visualizations.→ 7.2. Visualizing KPIs & Metrics→ 7.3. Visualizing Distribution→ 7.4. Visualizing Trend over Time→ 7.5. Comparison Across Categories→ 7.6. Visualizing Relationship→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn7.1. Data Visualization Best Practices7.2. Visualizing KPIs & Metrics7.3. Visualizing Distribution7.4. Visualizing Trend over Time7.5. Comparison Across Categories7.6. Visualizing Relationship7.7. Adding Context7.8. Communicating Status7.9.Eliminating Distractions: Data-ink Ratio7.10. Using Colors in Data Visualization7.11. Clarity: Tell, Don’t Show!7.12. Report  Examples: Good, Bad, and Great"
"https://lookerstudiomasterclass.com/chapter-6-grouping-categorizing-data","200","OK","Chapter 6: Grouping & Categorizing Data We’ve already talked about data sources, aggregation, working with numbers, scope of custom fields, and working with text.6.1. Grouping Data with IF() in Looker StudioIn this chapter we will discuss how we can use the CASE() and IF() conditional functions to group and categorize data so we can attain how we want to present and visualize our data in our reports.We will discuss the most common and useful applications of the CASE() function especially when working with web tracking data.In this first lesson we will tackle how we can nest the IF() function to text functions to categorize metrics or dimensions into two categories.Grouping Data with IF()In our data modeling journey, we've covered data sources, aggregation methods, mathematical formulas, custom field scopes, text processing, and regular expressions. Now, it's time to dive into grouping and categorizing data using conditional functions.In this lesson, we'll explore how to group data similarly to how Google Analytics groups channels, breaking them down into categories we understand based on our business logic. We'll be using the IF() function to achieve this.Tables and Calculated FieldsRemember that everything in Looker Studio is a table. We're always working with tables, and when we're happy with the results, we connect them to charts. While grouping and categorizing data, we'll be creating custom fields or groups.There are two main conditional functions in Looker Studio to help us group and categorize data: the IF() function and the CASE function. We'll use the IF() function for simple use cases with only two options or groups, while the CASE function will be used for more complex scenarios.The IF() FunctionLet's say we previously used the REPLACE function to replace the top-level domain in a hostname and extract the subdomain. Instead of just returning the value of the subdomain, such as ""shop"" or ""www,"" we want to report the actual value in the reporting interface.For example, if the website uses ""s"" for ""shop"" or ""a,"" ""b,"" ""c"" for departments, we want to report the actual names. In this case, we can use the IF() function to return the desired result based on a condition.The IF() function takes three parameters:Condition: Any expression that returns true or falseResult if trueResult if falseHere's an example of how to use the IF() function:CopyIF(LEFT(x,4) = ""shop"", ""Shop Section"", ""Main Website"")In this example, we check if the first five characters of the hostname are ""shop."" If they are, we return ""Shop Section""; otherwise, we return ""Main Website.""The IF() function is most effective when we only have two categories and want to group all our dimension categories into just two different categories.Note: It's important to note that the IF() function in Looker Studio is case-sensitive.→ 6.2. The CASE Function→ 6.3. Grouping 404 Pages with CASE Function→ 6.4. CASE Functions with Multiple Clauses→ 6.5. Tips for Editing Formulas in Looker Studio→ 6.6. Using CASE Function for Cleaning Data→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn6.1. Grouping Data with IF()6.2. The CASE Function6.3. Grouping 404 Pages with CASE Function 6.4. CASE Functions with Multiple Clauses6.5. Tips for Editing Formulas in Looker Studio6.6. Using CASE Function for Cleaning Data 6.7. Order of WHEN Clauses in CASE Function6.8. Returning Expressions in CASE Functions6.9. Using CASE to Extract URL Query Parameters6.10. Mixing Dimension & Metrics in CASE6.11. CASE Function: Aggregating Results6.12. Misc Functions: IMAGE() & HYPERLINK()"
"https://lookerstudiomasterclass.com/chapter-5-working-with-text","200","OK","Chapter 5: Working with TextIn this chapter we will study another data modeling fundamental: Working with Text.This is useful especially since half of the data we’re going to deal with are in text format, the other half being numbers.5.1. Cleaning & Normalizing Data with Text FunctionsA prerequisite to visualizing fields in text format inside Looker Studio is cleaning and normalizing text.In the following lessons we will go over the basic functions and formulas we can use to clean and normalize our text data.These functions are:CONCAT()LOWER() & UPPER()LENGTH()CONTAINS_TEXT()STARTS_WITH() & ENDS_WITH()LEFT_TEXT() & RIGHT_TEXT()REPLACE()RegEx Functions→ 5.2. Text Functions: CONCAT()→ 5.3. Text Functions: LOWER() & UPPER()→ 5.4. Text Functions: LENGTH()→ 5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()→ 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn5.1. Clean & Normalize Data: Text Functions5.2. Text Functions: CONCAT()5.3. Text Functions: LOWER() & UPPER()5.4. Text Functions: LENGTH()5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()5.7. Text Functions: REPLACE() and REGEXP_REPLACE()5.8. REGEXP_EXTRACT()5.9. REGEXP_MATCH()5.10. Every Chart is a Table5.11. Additional Resources"
"https://lookerstudiomasterclass.com/chapter-4-aggregation-working-with-numbers","200","OK","Chapter 4: Aggregation & Working with Numbers After learning the dashboard planning framework and understanding data connectors and data sources, we can now model (or transform) our data before visualization.In this chapter we will cover Data Modeling: how to shape, process, and clean data in data sources before visualizing and sharing it with your team, clients, or other users.4.1. Introduction to AggregationSpecifically, in this chapter we will discuss:Data SourcesAggregationWorking with NumbersScope of Custom FieldsData Modeling within Data Sources We learned in the previous lessons that the first place we can perform data modeling is at the source, such as setting a goal in Google Analytics or labeling campaigns in an Ad platform. And the second place we can perform data modeling on is at the Data Connector level.Modeling data at the source (the tool) and within the data connector (such as how it can be done in Dataddo, Supermetrics, or Funnel.io) are out of the scope of this course. Mainly because those are specific to the tool being used, and not the core functionalities of Looker Studio.In this chapter we will cover the third place where we can transform data to make it ready for visualization in Looker Studio, which is at the Data Source level.Every Chart is a TableIt’s fundamental to understand this concept: At its core, every chart or visualization is a table, with rows, and columns.When we perform data modeling, we do it while presenting data as a table. We will cover why in the next lessons.→ 4.2. All About Data Sources→ 4.3. Aggregation→ 4.4. Aggregating Ratios: The Correct Method→ 4.5. Auto Aggregation→ 4.6. Data Modeling: Working with Numbers→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn4.1. Introduction 4.2. All About Data Sources4.3. Aggregation4.4. Aggregating Ratios: The Correct Method4.5. Auto Aggregation4.6. Data Modeling: Working with Numbers4.7. Scope of Custom Fields: Chart vs Data Source"
"https://lookerstudiomasterclass.com/chapter-3-dashboard-planning-bringing-in-your-data","200","OK","Chapter 3: Dashboard Planning & Bringing in Your DataTo create a useful reporting dashboard for our report viewers, we must plan its structure beforehand. Dashboard planning is thus essential for successful and efficient implementation.In this chapter, we will discuss how information hierarchy applicable to any business can be mapped to our dashboard’s hierarchy. This will enable us to plan and structure our dashboards more effectively.In the 2nd part of this chapter, we’ll take a look at different ways of bringing in metrics and dimensions from different sources (Google Ads, Google Analytics, GA4, Google Sheets, Google Cloud BigQuery, 3rd Party marketing & analytics softwares, SQL databases, etc.).3.1. Intro to Dashboard Planning - STQA FrameworkAs an example we will go through a dashboard planning scenario following the information and dashboard hierarchy discussed in the lesson. Particularly, we will see the process of outlining and constructing a Website Usability & Engagement Report and a section that shows data about 404 Pages.In previous lessons, we created an e-commerce report and explored various built-in chart types. Today, let's talk about dashboard planning and data connectors. Later, we'll discuss data modeling, visualization, report interactions, sharing, security, and more.Planning Your DashboardWhen creating a dashboard, it's tempting to dive right in and start building. But if you want a truly useful and valuable dashboard, you should plan it in advance.To plan a dashboard, you need to understand two concepts: information hierarchy and dashboard hierarchy. We'll look at how information is structured in a client's business and how a dashboard in Looker Studio is organized.Information HierarchyWhen creating a dashboard, you usually have a main subject in mind, like website engagement. Within this subject, you have different topics, such as video engagement, scroll depth, and page visits. For each topic, you'll want to present data that answers specific questions. For example, for video engagement, you might ask:What was the percentage of video views?What were the top three videos viewed on our website?How many video views led to finishing the videos on the website?The information hierarchy consists of Subject, Topic, Question, and Answer (STQA).Dashboard HierarchyNow, let's map this information hierarchy to a Looker Studio dashboard.Subject maps to a ReportTopic maps to Pages within the reportQuestion maps to Sections on a pageAnswer maps to Charts within sectionsUse pages to declutter your dashboard and present one topic at a time. Create sections within pages to answer different types of questions about that topic. Finally, use charts within sections to answer specific questions.Example: Website Usability and Engagement ReportLet's say we're asked to create a Website Usability and Engagement Report. We can divide this subject into three topics: Engagement, Engagement by Source, and 404 Pages.Under Engagement, we'll have sections for Video Engagement and Scroll Engagement. Under Engagement by Source, we'll have a section for Micro Goals (engagement by traffic source). Under 404 Pages, we'll have sections for Total and Trend, and By URL.For each section, design charts to answer the questions you've identified. For example, in the 404 Pages topic, we could have a scorecard with conditional formatting to show the number of broken pages and how bad the situation is, and a time series chart to show the trend.Data and ChartsTo create charts, you need data. In the next part of this lesson, we'll talk about providing data to charts using data connectors.→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn3.1. Dashboard Planning: STQA Framework3.2. Bringing in Your Data3.3. Data Connectors3.4. Live vs Warehoused Connectors3.5. Google Connectors3.6. Partner Connectors3.7. Data Sources3.8. Data Source Scope: Embedded vs Reusable3.9. Caching & Data Freshness3.10. Managing your Data Sources3.11. Assignment"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/29-bar-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.9. Bar Charts in Looker StudioWhy Bar Charts?Bar charts are a favorite among data visualization experts because of their simplicity and effectiveness. They don't show relationships or trends where none exist and are perfect for comparing numeric values across different categories.Basic Bar ChartsA bar chart uses bars to display and compare metric values across different categories within a dimension. You can easily customize the styling, show or hide numbers, and choose between compact or actual numbers.Example: A bar chart displaying the number of users per country, with the dimension being the country name.Multiple Metrics and DimensionsBar charts can accommodate multiple metrics, displaying them side by side for each category within a dimension. If you're using a single metric, you can also break it down by another dimension.Example: A bar chart with the dimensions country and user type (returning vs. new visitors), displaying the number of users for each combination.Stacked Bar ChartsTo display the total value as well as the breakdown, you can use a stacked bar chart. This combines the bars into a single stack, making it easier to see the trend in totals across different categories.Horizontal Bar ChartsWhen you have a large number of categories or long category names, a horizontal bar chart is an excellent choice. It uses the horizontal space effectively, allowing for clear display of more categories or long text values without truncation or wrapping.Sorting and AxesThe default sorting for bar charts places the highest value at the top, in line with typical reading patterns (from top to bottom and left to right). However, you can reverse the sort order or modify the y-axis if needed.Percentage Stacked Bar ChartsFor cases where you're interested in distribution rather than actual values, you can use a 100% stacked bar chart. This type of chart focuses on the differences and trends in distribution, regardless of the total value.Bar charts in Looker Studio offer effective ways to visualize and compare data across different categories. With options for stacking, horizontal display, and multiple dimensions, you can create insightful and visually appealing charts to suit various scenarios.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/28-combo-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.8. Combo Charts in Looker StudioIntroducing Combo ChartsCombo charts allow you to display multiple metrics in a single visualization, using different chart types (lines or bars) and different y-axes. These charts can be particularly useful when you have related metrics with distinct value ranges that you want to display together.Setting up Combo ChartsTo create a combo chart, simply add the desired metrics and select how you want each to be represented (line or bar). You can also choose whether to plot each metric against the left y-axis or the right y-axis, depending on their value ranges.Example: Suppose you want to compare users and sessions, which have similar value ranges, alongside revenue, which has a very different range. You could plot users and sessions against the left y-axis, while plotting revenue against the right y-axis.Using Log ScaleWhen dealing with diverse numbers, you can use a log scale to improve the chart's readability. In the example above, without a log scale, the revenue might drop sharply between countries, making the chart difficult to interpret. By applying a log scale, you can create a more visually appealing and informative chart.Choosing the Right Chart TypeCombo charts are a more appropriate choice than line charts when dealing with categorical x-values, such as country names. While line charts can be useful for displaying trends or relationships between numeric categories (e.g., buckets of 10, 20, 30, 40), they may not accurately represent relationships between categorical values.Combo charts in Looker Studio are great for visualizing multiple related metrics with distinct value ranges. By carefully selecting the appropriate chart types and y-axes, you can create informative and visually appealing charts that help you analyze and understand your data.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/27-line-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.7. Line Charts in Looker StudioLine Charts vs. Time Series ChartsLine charts may appear similar to time series charts, but they have a key difference: line charts can accept any kind of dimension as their dimension, not just dates. This distinction makes them versatile but also potentially misleading.Understanding Line ChartsUnlike time series charts, which display trends over time, line charts plot numbers for different categories and connect them together. This connection, however, suggests continuity between the values, which may not actually exist.For example, consider a line chart showing the number of users and revenue for two countries, the US and the UK. The chart might appear to show a downward trend, but this is merely a difference in values between the two countries, not an actual trend.Potential PitfallsThe flexibility of line charts can lead to confusion or misinterpretation. For instance, if you start with a line chart and attempt to plot values over time, the months might appear in a random order (e.g., February, January, December, May). This issue occurs because line charts do not automatically sort data values in the proper sequence.Choosing the Right Chart TypeWhen you need to display data over time, use a time series chart to ensure the data is sorted and presented correctly. Reserve line charts for situations where you want to show connections or relationships between different categories, keeping in mind that the implied continuity may not always be accurate.Line charts are useful for displaying relationships between different categories. However, it's essential to be aware of their potential pitfalls and choose the appropriate chart type for your data to avoid misinterpretation.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/26-area-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.6. Area Charts in Looker StudioUnderstanding Area ChartsArea charts are similar to time series charts, but with a few key differences. These charts are particularly useful for visualizing the distribution of a metric across different categories of a dimension over time.Creating Area ChartsAn area chart requires a metric and a breakdown dimension. In Looker Studio, apply the metric and breakdown dimension to create an area chart that shades the area under each line. The lines stack on top of each other, showing the distribution and trend of the metric across the categories.Stacking OptionsArea charts offer several stacking options:Regular stacking: Categories are stacked on top of each other, displaying the trend in total as well as the distribution of the metric across categories.No stacking: Categories are not stacked, which may look visually appealing but sacrifices the ability to analyze trends in total and distribution.100% stacking: Categories are stacked to represent 100% of the metric, making it easier to analyze distribution but impossible to assess the total trend.Adjusting GranularityLike other charts displaying values over time, area charts in Looker Studio allow you to apply different date range granularities, such as day, month, or quarter.Changing Chart TypesTo change an area chart to another visualization type, click on the chart settings icon and select a different chart type. Looker Studio will attempt to apply the existing data, dimensions, and metrics to the new chart type.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/25-time-series","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.5. Time Series Charts in Looker StudioUnderstanding Time Series ChartsTime series charts are powerful visualization tools for displaying data over time. Although they may appear similar to line charts, they are distinct and serve different purposes. Understanding these differences is crucial for creating effective visualizations.Basic Time Series Chart StructureA time series chart requires a date field as its dimension for the x-axis. It can display a single value over time or break down the value across different categories of a dimension, such as user type or device category. This breakdown can reveal hidden insights and trends in the data.Creating Time Series ChartsTo create a time series chart in Looker Studio, select the chart type from the available options, and apply the date field and metric. You can then apply any breakdown dimension to further segment the data.Comparing Time PeriodsLooker Studio enables you to compare values across different time periods using lighter shades of color for previous periods. This feature helps you assess changes and trends over time.Changing Date GranularityDespite using a date field in day format, Looker Studio allows you to display data using different date range granularities, such as week, month, or quarter. You can adjust the granularity by selecting the desired option from the chart's settings.Time Series vs. Line ChartsTime series charts are NOT the same as line charts. In Looker Studio, you can choose to display a time series chart with either lines or bars by adjusting the chart's settings. Bars may be more suitable for displaying data with fewer categories or longer date range granularities, making it easier to compare values.Time series charts in Looker Studio offer a flexible and insightful way to visualize data over time. By understanding their differences from line charts and utilizing the available features, you can create powerful and informative visualizations for your data.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/24-pivot-tables","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.4. Looker Studio Pivot TablesIntroduction to Pivot TablesPivot tables are an exciting way to display data with enhanced functionality compared to regular tables. They offer features like subtotals, cleaner interfaces, and improved focus on specific data points.Basic Pivot Table StructureA simple pivot table has dimensions in rows and metrics in columns. It includes subtotals for each group of values and grand totals for the entire table. When hovering over a cell, the row and column get highlighted for easier reading.Advanced Pivot TablesIn more advanced pivot tables, you can place dimensions in both rows and columns with metrics at their intersections. This allows for a more comprehensive view of your data. Looker Studio also lets you display grand totals and subtotals for both rows and columns.Visualizing NumbersYou can apply bars to your pivot table to make it easier to read and compare values, just like in regular tables.Expandable Pivot TablesLooker Studio offers expandable pivot tables, allowing you to hide detailed data under higher-level categories. Users can click on the plus icon to expand the table and view additional details.Heat maps & Multiple MetricsHeatmaps can also be applied to pivot tables for quick identification of high and low values. You can display multiple metrics at the intersection of categories, making the pivot table more versatile and informative. This also allows for side-by-side grand totals and easy scrolling through columns.Customization and FlexibilityPivot tables in Looker Studio are highly customizable and flexible, adapting to different data structures and visualization preferences. By utilizing various dimensions, metrics, and formatting options, you can create powerful and insightful data displays.Pivot tables in Looker Studio offer advanced features and improved visualization capabilities compared to regular tables. They allow for greater customization, flexibility, and user interactivity, making them an invaluable tool for data analysis and storytelling.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/23-tables","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.3. Tables in Looker StudioWhy Use Tables?While visualizations are great, sometimes a table is the perfect way to communicate data and tell a story. Tables can provide a more detailed view, complementing other visualizations such as time series charts.Understanding TablesIn Looker Studio, tables display dimensions in rows and metrics in columns. Dimensions describe properties of entities, while metrics are numerical values that count or measure entities.Looker Studio Table FeaturesTables can include grand totals, pagination, row numbers, and optional metrics. With Looker Studio's recent update, you can now have up to 100 metrics in a table and enable horizontal scrolling for easier viewing.Highlighting ValuesTo make tables easier to read, Looker Studio offers several ways to highlight values:Heat maps - Display the highest and lowest values with different shades of color. This helps quickly identify high and low values, but isn't ideal for comparing different values.Bars - Show bars along with numbers in each column for easy comparison of values and identification of trends and patterns.Targets - Set a target value for a metric, which can be configured under the style tab when a table is selected.Conditional FormattingConditional formatting can be applied to tables to highlight rows or values based on specific criteria. For example, you can change the background color for new visitors or highlight transactions above or below a certain value.To access conditional formatting settings, select a table and go to the style tab at the top. You can define multiple conditional formatting rules and choose whether to change the background color, font color, entire row, or just the matching column.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/22-scorecards","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.2. Scorecards in Looker StudioIntroducing ScorecardsScorecards are a fantastic way to present key performance indicators (KPIs) and other important metrics on your dashboard. They can show a single number, percentage, ratio, or currency value to the viewer, while other charts can help illustrate trends and patterns over time or the breakdown of the KPIs across different categories and segments.Compact Numbers and MoreScorecards can display compact numbers (e.g., 200k instead of 200,000), and you can also adjust decimal precision. They support various formats, such as numbers, ratios, and currencies.Comparing Time PeriodsScorecards can show the comparison for the metric for a selected date range with another time period. The comparison period could be the previous period, previous year, or even a fixed or dynamic date range. Looker Studio handles these comparisons automatically, without needing extra data preparation.Date Range SettingsTo set up date range comparisons, access the settings for any chart that supports it. Under the date range options, you can choose the default date range, comparison date range, and more advanced settings.Conditional FormattingScorecards can display conditional formatting by changing the font or background color based on specific criteria. This helps communicate the status of a metric or KPI quickly to viewers. You can apply multiple conditional formatting rules to a single scorecard and they’ll be applied in order.Accessing Conditional Formatting SettingsTo access the settings for conditional formatting, select a scorecard or other component that supports it. Go to the style tab, where you can add different conditional formatting groups and choose colors for the font and background.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/215-gauge-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.15. Gauge Charts in Looker StudioIn this lesson, we'll introduce the gauge chart in Looker Studio, and provide a quick recap of the different chart types covered in this chapter.A Gauge Chart is a curved bullet chart that helps us see a metric value vs. preset ranges and a target.Aside from seeing gauge chart samples, we will also discuss in this lesson the most important thing to consider when choosing the right visualization for your dataset.Gauge ChartA gauge chart is similar to a bullet chart but displayed on a curve. It shows a single value, defined ranges, and the target. However, unlike bullet charts, gauge charts don't have a comparison feature.Like bullet charts, gauge charts are useful for visualizing data and understanding where your metric falls within defined ranges. The choice between a gauge chart, bullet chart, or scorecard depends on the viewer's preferences and how they consume data.Remember: There's no one-size-fits-all way of telling a story with data, so it's essential to consider your audience when choosing the right visualization.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/214-bullet-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.14. Bullet Charts in Looker StudioLearning ObjectivesBy the end of this lesson, you should be able to:Understand the purpose and benefits of using bullet charts in Looker Studio.Compare bullet charts to scorecards and explain their differences.Create and customize bullet charts to display a single value, target, and defined ranges.Interpret bullet charts to draw insights from the data.Effectively communicate the information in a bullet chart to others.In this lesson we will learn how a Looker Studio Bullet Chart is different from a scorecard or a bar chart and when you can best use this visualization. We will also cover how a bullet chart can show the value of a metric against up to 3 preset ranges and a target number. We will also go through how we can use a bullet chart to visualize data vs. the previous period.Bullet charts are a powerful way to visualize data compared to scorecards: while scorecards display a single number, they don't provide a comparison to a target or different ranges of expectations. Bullet charts address this limitation by allowing you to display a single value alongside defined ranges and a target.💡Note: After the most recent update in Looker Studio (April 2023), now scorecards can show performance against a target, too. But in some cases, like when showing different performance ranges is desired, bullet charts are still a preferred solution.Comparing to Targets and RangesLet's say a business expects to see $250,000 of revenue for the last month. With a bullet chart, you can define three ranges:$100,000 - considered really low, and someone might get fired.$200,000 - an okay-ish threshold; it's still not ideal.$300,000 - an ambitious target that the business is shooting for.A bullet chart can display the actual revenue of $200,000 alongside these ranges, making it easy to see where the actual number falls versus ranges. Additionally, you can create a target line to show the goal of $250,000.In Looker Studio, you can adjust the target and ranges under the Style and Data tabs, the actual value comes from the field in the data source.Interpreting Bullet ChartsOnce you know how to read a bullet chart, it's simple to draw insights from it. For example, consider an e-commerce conversion rate of 2.2%. This bullet chart can show that it's not only better than the target but also within the highest range we defined.However, the chart may also indicate that the conversion rate is still lower than the previous date period. This information helps you understand that while the business is doing well, there's room for improvement.In the example above, we're doing well with revenue, hitting the target, and performing better than the previous period. However, the e-commerce conversion rate, though good, is going down compared to the last period.Bullet charts are an excellent way to convey lots of information in a clean and compact visualization. The key is to ensure that viewers know how to read them. With the right guidance, bullet charts can be a valuable addition to your data visualization toolkit in Looker Studio.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/213-tree-maps","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.13. Tree Maps in Looker StudioIntroduction to Tree MapsTree maps are a useful visualization for displaying values across a large number of categories. They're particularly handy when you want to identify the highest volumes without using much screen real estate. In contrast, tables might require pagination and scrolling to display the same information.Tree maps can be an efficient way to visualize data when you need to analyze a multitude of categories and identify the highest or lowest volumes quickly.Simple Tree MapsFor a cleaner and more straightforward example, consider using a tree map to display data by product category. This can help you easily identify the top revenue-generating categories, such as apparel and new products.Nested Tree MapsNested tree maps are a more complex yet potentially exciting visualization. In this case, you have a tree map within a tree map. For example, you might display product categories like apparel, new collections, and others, with each category containing its own tree map of individual products.Nested tree maps can provide valuable insights by showing hierarchical relationships within your data. However, be cautious as they can become cluttered and difficult to read when too many categories or subcategories are included.When to Use Tree MapsTree maps can be a valuable tool in your data visualization arsenal when you want to present a large amount of information in a compact and easily digestible format. Keep in mind that tree maps work best when the focus is on identifying high or low volumes across many categories. Be careful not to overcrowd your visualization, as doing so can make it challenging to understand and interpret.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/212-scatter-bubble-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.12. Scatter Plots & Bubble ChartsScatter ChartsScatter charts are a great way to show the relationship between two different metrics and identify outliers. For example, you might plot transactions and average order value, broken down by US state. This can help you quickly spot states with high transactions and average order values or those with few transactions and high order values.Scatter charts can be particularly useful when you want to focus your analysis on specific data points or clusters of outliers.Bubble ChartsBubble charts are similar to scatter charts, but they incorporate a third metric. This additional metric is represented by the size of the bubbles on the chart. For example, you might use a bubble chart to display transactions, average order value, and e-commerce conversion rate, broken down by device category.Bubble charts can provide valuable insights by allowing you to view the relationships between three different metrics at once. This can be helpful for identifying patterns or trends in your data.Log ScalesWhen there's a significant diversity in values across an axis, you might consider using a log scale. Log scales can help you better visualize the differences between data points, especially when one or more points are much larger than the others.However, it's important to note that log scales can be more difficult to read for those not familiar with them. Be sure to consider your audience's familiarity with log scales when deciding whether to use this type of visualization.Examples of Scatter and Bubble ChartsE-commerce conversion rate, transactions, and average order value broken down by device category: This chart can verify your expectations about which devices have higher conversion rates and transactions.Product revenue and quantity sold across different product categories: This chart can help you see which products are selling well and generating the most revenue, allowing you to prioritize marketing efforts and inventory management.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/211-pie-charts-donuts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.11. Pie Charts & DonutsWhy Pie Charts Are Not IdealPie charts are often discouraged in data visualization. They can be difficult to read and interpret, as our brains struggle to compare angles and curved lines. Determining which slice is larger or smaller can be a challenge without hovering over the data points.Best Practices for Pie ChartsIf you must use pie charts, follow these guidelines to make them more bearable:Limit the number of categories: Use pie charts only when you have a few categories. The fewer slices, the easier it is to read and interpret the chart.Display actual numbers: Including the data values or percentages on the chart can make it easier for your audience to understand the information.Stick to two or three values: Pie charts are more effective when you have a limited number of categories, such as male vs. female or new vs. returning visitors.Donut ChartsDonut charts are a variation of pie charts, with a hollow center. The same rules apply—avoid using them if possible, and use them only for a few categories when necessary. Including the actual numbers can make them more readable.Pie Chart AlternativesOne alternative to pie charts is the vertical bar chart, which displays the same data but with straight bars that are easier to compare. Color-coding the bars can help distinguish categories at a glance.Another option is the single horizontal stacked bar chart, which shows distribution on a straight line instead of a curved one. This format is more space-efficient and easier to read than a traditional pie chart.While pie charts can sometimes be useful for visualizing limited categories, they are generally less effective than other chart types like vertical bar charts and horizontal stacked bar charts. Always consider the most appropriate visualization type for your data to ensure clear and effective communication.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/210-geo-charts-google-maps","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.10. Geo Charts & Google Maps in Looker StudioIntroducing Geo Charts & Google MapsLet's talk about maps, specifically geo charts in Looker Studio. The legacy geo chart is basic but quick, clean, and sometimes exactly what you need. It shades regions based on the values you assign. Darker shades represent higher values.With this chart, you can display data by city, country, or region. For instance, if you want to focus on one country or continent, you can select a specific zone like the United States.Configuring Geo ChartsTo configure these charts, you can choose the dimension (region, country, continent, or city) and the metric (e.g., number of users). The zoom area can be set to a country, continent, or sub-continent.Google Maps IntegrationFor more advanced mapping, Looker Studio integrates with Google Maps, allowing you to overlay data on an interactive and customizable map. It's not as clean as a geo chart, but it's versatile. You can display data using bubbles, filled areas, heat maps, lines, or even custom polygons from Google Cloud BigQuery.Interactive and Customizable MapsThe real magic of using Google Maps lies in its interactivity. You can zoom in and out, reset the view, and even customize the map's appearance with different themes or a custom JSON object.Additionally, you can enable heat map functionality, which is particularly useful when dealing with large datasets. As you zoom in, the heat map becomes more granular, showing data in greater detail.Responsive and Filterable MapsAnother great feature is the map's responsiveness to applied filters. When you filter data on the map, it automatically zooms in on the selected area. This makes it easy to focus on specific regions or locations.Street View IntegrationSurprisingly, Google Maps' Street View integration can be helpful in certain scenarios. For example, a client looking to open new stores might use Street View to explore potential locations and their surroundings.Looker Studio's map integration offers a range of options, from basic geo charts to highly customizable and interactive maps using Google Maps. Choose the one that best fits your needs and make your data visually engaging.In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1/21-chart-types-overview","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 2.1. Overview of Chart Types in Looker StudioWelcome to Looker Studio Essentials Course!Today, we dive into the second part of our Looker Studio Masterclass: Chart Types Overview. Earlier in this chapter, we created an e-commerce dashboard from scratch in just an hour. We quickly explored almost all of Looker Studio's features. Today, we'll take a closer look at the available chart types and visualizations.What's Coming UpIn the following chapters we'll cover dashboard planning, data connectors, data modeling, in-depth data visualization, reports, interactions, sharing security, managing reports with clients, and BigQuery. Stay tuned!Today's Objective: Explore Built-In ChartsWe'll discover Looker Studio's built-in charts, their capabilities, and key features. We'll also learn when to use each chart type for data visualization.Your Visualization ToolboxWe'll cover the following chart types in Looker Studio:ScorecardTablePivot TableTime SeriesArea ChartLine ChartCombo ChartBar ChartGeo Maps (including Google Maps)Pie Charts (and when not to use them)Scatter and Bubble ChartsTree MapBullet ChartGauge ChartGet ready to expand your visualization toolbox and make the most of Looker Studio!In this chapter:→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter Plots & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-2-chart-types-overview-1","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. Chapter 2: Chart Types OverviewIn this chapter, we will learn Looker Studio’s chart toolbox to see what options we have available to us to visualize data.→ 2.1. Chart Types Overview→ 2.2. Scorecards→ 2.3. Tables→ 2.4. Pivot Tables→ 2.5. Time Series→ 2.6. Area Charts→ 2.7. Line Charts→ 2.8. Combo Charts→ 2.9. Bar Charts→ 2.10. Geo Charts & Google Maps→ 2.11. Pie Charts & Donuts→ 2.12. Scatter & Bubble Charts→ 2.13. Tree Maps→ 2.14. Bullet Charts→ 2.15. Gauge ChartsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn2.1. Chart Types Overview2.2. Scorecards2.3. Tables2.4. Pivot Tables2.5. Time Series2.6. Area Charts2.7. Line Charts2.8. Combo Charts2.9. Bar Charts2.10. Geo Charts & Google Maps2.11. Pie Charts & Donuts2.12. Scatter & Bubble Charts2.13. Tree Maps2.14. Bullet Charts2.15. Gauge Charts"
"https://lookerstudiomasterclass.com/chapter-17-bigquery-hands-on-workshop","200","OK","17.1. BigQuery & Looker Studio: A Hands-on WorkshopIn our last session, we explored BigQuery and its various applications. Today, we're diving in headfirst and creating an end-to-end data pipeline for analysis, data extraction, and reporting from scratch in under 90 minutes.Our goal is to perform search query analysis using data from both Google Search Console and Google Analytics. We will then combine this information to assess the impact of search queries on conversions and value creation on our website.Search Query DataWhile Google doesn't provide us with keyword-based traffic information for each session in Google Analytics, we can obtain search query data from Google Search Console. This includes metrics like the number of impressions and clicks for each query.Combining Data PointsTo gain more insights from this search query data, we need to combine it with landing page sessions, conversions, and goal conversion values from Google Analytics. By doing so, we'll be able to see how much each search query contributes to traffic acquisition, goal conversion, and goal value.Calculating Performance RankOnce we have all the necessary data points combined, it's time to calculate a performance rank for each search query. To do this, we'll create a metric called ""value per thousand impressions."" This metric will show us how much value (as defined by goal values in Google Analytics) is generated by every 1000 impressions of a particular search query in the search result pages.The final result within Looker Studio should display:Search QueryNumber of Impressions (from Google Search Console)Number of Clicks (from Google Search Console)SessionsGoal CompletionsGoal Value (from Google Analytics)We will also calculate the ""value created per thousand impressions"" by dividing the goal value for each search query by the number of impressions.Setting Values & Goals in Google AnalyticsFor this exercise, we'll be using a personal website account with three goals and no transactions. Here's a brief overview of the goals and their values:Page Views Goal: 3 or more pages viewed per session, valued at $0.10.Affiliate Link Click Goal: Clicking on an affiliate outbound link, valued at $1 per click (due to expected conversions and commissions).Session Duration Goal: Staying on the site for more than 5 minutes during a session, valued at $0.10.With these values in place, we can better understand the performance of different search queries and improve our overall strategy accordingly.17.2. Planning the Data PipelineIn this lesson, we'll create a data pipeline from scratch to extract data from Google Analytics and Google Search Console, process it in BigQuery, and visualize it in Looker Studio.Extracting DataFirst, we want to grab data such as session, landing page, number of sessions, and poll completions from Google Analytics. We also want to extract search query, landing page, impressions, and clicks data from Google Search Console. To do this, we'll use Supermetrics for Sheets to connect to both APIs and pull the data into separate Google Sheets.Moving Data to BigQueryInstead of performing all the data modeling in Sheets like we used to do traditionally, we will bring each Google Sheet into BigQuery as separate tables. So we will have two BigQuery tables representing the extracted data from both sources.Processing Data in BigQueryOnce our tables are created in BigQuery, we'll perform all necessary operations like cleaning up, processing, joining, merging and calculations there.Connecting Looker StudioFinally, after processing our data in BigQuery, we'll connect it directly to Looker Studio for visualization purposes.Understanding The Data RelationshipIt's important to note that multiple search queries can point to one landing page. There isn't a one-to-one relationship between queries and landing pages. All these queries with their impressions and clicks are creating sessions in Google Analytics.We need a way to calculate the share that each query has in creating these sessions based on their clicks' contribution because the value generated cannot be directly attributed entirely to each query.Calculating Attribution SharesTo calculate attribution shares for each query:Calculate the share of total depending on clicks.Multiply the total number of sessions by that share of total.This calculation will give us an accurate distribution of attribution for each query in terms of sessions, conversions, and value.Final OutputAfter all the calculations and data analysis are done in BigQuery, we'll have a comprehensive view of the data in Looker Studio, making it easier to understand and visualize the relationship between queries, clicks, sessions, conversions, and generated value.17.3. Getting Data into BigQueryIn this lesson, we'll go over how to create a data pipeline, review raw data from Google Sheets, and import that data into BigQuery. Although we won't have time to cover everything in depth, this example is designed to demonstrate as many features in BigQuery as possible that you'll likely use when working with Looker Studio.Reviewing Data from Google SheetsWe have two sets of data in Google Sheets obtained using Supermetrics:Google Search Console Data: Search queries, landing pages, impressions, and clicks.Google Analytics Data: Landing page data source medium with sessions, goal completions, and total goal value.Our goal is to import these datasets into BigQuery.Setting up a BigQuery ProjectFirst things first - navigate to the BigQuery console. If you don't have an account yet, follow the prompts to create one and enter your billing information.Once you're logged in, you'll notice that BigQuery is structured around projects. Each project governs access to different resources within Google Cloud (including BigQuery) and handles billing.To create a new project:Click on the project dropdown at the top of the page.Select New Project.Give your project a name (e.g., Profitable Dashboard BQ).Choose your organization (this will inherit billing settings from it).Wait for a moment while BigQuery creates your new project.Accessing BigQuery within Your ProjectNow that your project has been created:Select it from the list of projects.On the right-hand side of the screen, find BigQuery under one of the tools available in Google Cloud Platform.Pin it at the top for quick access.Most of your time in BigQuery will be spent within the SQL Workspace.Exploring the SQL WorkspaceNow that we're in the SQL Workspace, we can start building our data pipeline and importing the data from Google Sheets. In future lessons, we'll dive deeper into using BigQuery and Looker Studio to manipulate and visualize this data.17.4. SQL Workspace in BigQueryWelcome to the SQL Workspace in BigQuery, where we'll explore how to create projects, datasets, and tables within Looker Studio.Hierarchy in BigQueryBigQuery has a hierarchy similar to Google Sheets. In Google Sheets, you have an account with multiple spreadsheets nested inside. Similarly, in BigQuery:Projects act like your accountDatasets are contained within projectsTables and views are housed within datasetsCreating a DatasetSince our project is currently empty, let's create a dataset:Click on your project name (e.g., profitable_dashboards_bq)Click the + icon to create a new datasetGive your dataset an ID (e.g., query_analysis)Choose the data location (US or EU servers)Now you have both a project and a dataset.Naming ConventionsThere are various naming conventions for datasets, tables, and fields in BigQuery and SQL:Snake case: all lowercase characters with underscores separating words (e.g., query_analysis)Camel case: starts with lowercase; each new word begins with an uppercase letter (e.g., queryAnalysis)Pascal case: every word starts with an uppercase letter (e.g., QueryAnalysis)I recommend using snake case since it's widely used by Google and others in advanced data processing scenarios like GA4 to BigQuery data transfer.Importing DataNow that we have our dataset created, it's time to bring some data into it!17.5. Bringing a Google Sheet into BigQueryIn this lesson, we're going to explore how to import your Google Sheet data into BigQuery as a table. We will cover two different methods, starting with the simplest one: importing a CSV file.Importing GA Data as a CSVFirst, let's export the GA data in CSV format:Go to your Google sheet.Click on File > Download > Comma-separated values (CSV).Save the file to your desired location.Now that you have downloaded the GA data as a CSV file, let's bring it into BigQuery.Creating a Table in BigQueryFollow these steps to create a table from the downloaded CSV file:Go to BigQuery and navigate to your dataset (make sure it's empty).Right-click on the dataset and click Create Table.You will be presented with options for creating your table.Selecting File SourceChoose these options:Create table from: Select ""File"".Click Browse and select the previously downloaded CSV file (sample_data_ga_data.csv).Setting DestinationNow you need to set up where this new table should be created:Choose your project and dataset.Name your new table (e.g., ""ga"" for GA data).For Table type, choose ""Native Table"".Configuring SchemaNext, you'll decide on the schema for the new table:Choose either ""Auto detect"" or ""Define schema manually"".If defining manually, input each field name and its corresponding data type.Once you've set up your schema, click on Create Table.Your Google Sheet data has now been imported into Looker Studio as a native table within BigQuery!17.6. Table Schema in BigQueryUnderstanding schema is essential when working with data in Looker Studio and BigQuery. In this lesson, we will explore what a schema is and how to define it when importing data.What is Schema?A schema represents the structure of your data, including column names and their respective data types. For example, a table might have five columns: landing_page_path, source_medium, sessions, goal_completions, and total_value. These columns could have different data types such as strings, integers, or floats.Defining Schema in BigQueryWhen importing data into BigQuery, you can either define the schema manually or rely on BigQuery to auto-detect it for you. Auto-detection can save time by analyzing the columns and determining their appropriate data types.Advanced OptionsUnder advanced options during import, you can specify whether an existing table should be overwritten or appended to if it already exists. Additionally, you can specify the number of header rows to skip during import; this ensures that column names are not mistakenly imported as row values.Verifying Your Table SchemaOnce your table has been created in BigQuery, you can check its schema by clicking on the table within its dataset. You'll see three tabs: Schema, Details, and Preview.The Schema tab displays your table's fields (columns), including their names and data types.The Details tab provides information about the table ID, path to the table, size of stored data, creation time, etc.The Preview tab allows you to view a sample of your imported rows without loading all available rows since tables in BigQuery can contain millions or even billions of records.In conclusion, understanding and defining schemas in Looker Studio and BigQuery are crucial aspects of managing your data. By using the auto-detection feature and verifying your table schema, you can ensure that your data is correctly structured and ready for analysis.17.7. External Tables in BigQueryIn this lesson, we'll explore how to create an external table in BigQuery that reads data directly from a Google Sheet.Connecting Google Sheets with BigQueryBigQuery can read data directly from a Google Sheet without having to download it. This is because both products are part of the Google ecosystem, making it easy to integrate them. By connecting the sheet as an external table, we can ensure that any changes made in the sheet will be reflected in our queries.First, copy the URL of your Google Sheet as you'll need it later. Then, follow these steps:Click on the ellipses (three dots) next to your dataset.Select ""Create table"".Choose ""Google Drive"" as the source of your data.Paste the URL of your Google Sheet.Select ""Google Sheets"" as the file format.Define your sheet's range (e.g., GSC_data!A1:D).Defining Destination and SchemaAfter defining your source, you'll need to specify your destination and schema:Choose the same project and dataset as before.Name your table (e.g., ""Google_Search_Console"").Set the table type to ""External Table"".Allow BigQuery to auto-detect the schema by selecting ""Auto detect"".Before creating the table, ensure that you've set up header skipping correctly by specifying how many rows should be skipped (usually one row for headers). If not done correctly, field names may not be properly detected.Deleting and Recreating TablesIf you've made a mistake while creating your external table, you can delete it and create another one:Click on the ellipses next to your table.Select ""Delete"".Type ""DELETE"" when prompted.Remember that deleting a table is a permanent action and cannot be undone.Working with External TablesOnce your external table is created, you'll notice some differences compared to native tables:The ""Details"" tab will show zero bytes, as the data is still stored in the Google Sheet, not in BigQuery.There's no ""Preview"" tab available for external tables.To access the data within an external table, you need to run a query. Keep in mind that every time you want to view the data, you'll have to query it since BigQuery doesn't store the actual data from Google Sheets.17.8. Writing SQL in BigQueryIn this lesson, we will explore writing SQL in BigQuery and understand the differences between native and external tables when working with Looker Studio.Split Tab View in BigQueryWhen working with BigQuery, you can use the split tab view to see the schema of a table or details of a table as you write queries on the side. This allows you to work with different queries side by side and see how they interact.For example, we can select everything from a table within our project:CopySELECT * FROM `project_name.dataset_name.table_name`Comparing Native and External TablesTo demonstrate the differences between native and external tables, we will run simple queries on both types of tables. One table is from Google Search Console (external), while the other is from Google Analytics (native).After running both queries, we can compare their execution details to see how long it took for BigQuery to perform each calculation. The native table query is significantly faster than the external one.Native TableData is stored within BigQueryFaster query executionStatic data (not live)External TableData accessed through an API (e.g., Google Sheets)Slower query execution due to API requestsLive data that can changeWorking with Live DataWith external tables like Google Search Console data, changes made in the source (e.g., Google Sheets) are reflected immediately when running queries in BigQuery. This makes it ideal for scenarios where live data updates are crucial.However, if you change the name or range of your source data sheet, it might cause errors when querying that table in BigQuery because it relies on specific references.In Practice: Data Modeling with Native and External TablesNow that we have an understanding of native and external tables' key differences, we can begin working with our Google Search Console and Google Analytics data to perform more advanced data modeling in Looker Studio.17.9. Data Modeling in BigQueryIn this lesson, we'll walk through data modeling in BigQuery using Google Search Console and Google Analytics data as examples.Preparing the DataFirst, let's prepare our data. We have two datasets: Google Search Console and Google Analytics. We'll start by removing rows with zero clicks from the Google Search Console dataset, as they don't provide any valuable insights for our analysis.CopySELECT *
FROM search_console_data
WHERE clicks > 0Next, we need to filter the Google Analytics dataset to only include traffic from Google Organic:CopySELECT *
FROM google_analytics_data
WHERE source_medium = 'google/organic'Standardizing Landing PagesIn order to join these two tables together, we need to standardize the format of the landing pages. For example, we need to remove https:// and ensure that both formats have a trailing slash at the end.For Google Search Console data:CopySELECT
  search_query AS search_query,
  REPLACE(landing_page, 'https://', '') AS landing_page,
  impressions AS impressions,
  clicks AS clicks
FROM search_console_data
WHERE clicks > 0For Google Analytics data:CopySELECT
  REGEXP_EXTRACT(landing_page_path, r'^[^?]*') AS landing_page,
  source_medium AS source_medium,
  sessions AS sessions,
  goal_completions_all_goals AS goal_completions,
  total_goal_value_all_goals AS goal_value
FROM google_analytics_data_cleaned_up
WHERE source_medium = 'google/organic'Now that we've standardized the landing pages in both datasets, we can proceed with joining them.Joining TablesWe want to join these tables using a left join, with the Google Search Console dataset as the left table and the Google Analytics dataset as the right. We'll use the landing_page field as our join key.CopySELECT
  search_query,
  landing_page,
  impressions,
  clicks,
  sessions,
  goal_completions,
  goal_value
FROM search_console_data_cleaned_up
LEFT JOIN google_analytics_data_cleaned_up
ON search_console_data_cleaned_up.landing_page = google_analytics_data_cleaned_up.landing_pageWith this data, we can now analyze the impact of search queries on site traffic and conversions. Remember to save your queries so you can easily access them later!17.10. SQL Join in BigQuerySetting Up the QueryWe're going to join two tables: Google Search Console as the left table and Google Analytics data as the right table. First, we'll create clean versions of both tables using common table expressions (CTE). CTEs, which start with WITH, help us define subqueries that we can use later in our main query.CopyWITH
  GA AS (
    SELECT ...
  ),
  GoogleSearchConsole AS (
    SELECT ...
  )Now we'll join these two tables based on their landing pages:CopySELECT *
FROM GoogleSearchConsole
LEFT JOIN GA
ON GoogleSearchConsole.landing_page = GA.landing_page;Before running the join, let's see how many rows we have in our initial dataset - it should be 266.Troubleshooting the JoinAfter running the join, we get 488 rows instead of 266. Let's figure out why this is happening. It turns out that there are more search queries for each landing page in our dataset.To fix this issue, we need to create another intermediary table called GA_agg to aggregate sessions, goal completions, and goal values by landing page:CopyWITH
  GA_agg AS (
    SELECT
      landing_page,
      SUM(sessions) AS sessions,
      SUM(goal_completions) AS goal_completions,
      SUM(goal_value) AS goal_value
    FROM GA
    GROUP BY landing_page
  )Now let's update our main query to use GA_agg instead of GA:CopySELECT *
FROM GoogleSearchConsole
LEFT JOIN GA_agg
ON GoogleSearchConsole.landing_page = GA_agg.landing_page;After running this updated query, we get 266 rows as expected.Selecting Specific ColumnsOur current query selects all columns from both tables, but we only want specific columns from the Google Analytics table. We can update our SELECT statement to include only the desired columns:CopySELECT
  GoogleSearchConsole.*,
  GA_agg.sessions,
  GA_agg.goal_completions,
  GA_agg.goal_value
FROM GoogleSearchConsole
LEFT JOIN GA_agg
ON GoogleSearchConsole.landing_page = GA_agg.landing_page;Now our query returns a cleaner table with landing page impressions, clicks, sessions, goal completions, and goal value for each search query - just what we wanted!17.11. Calculating % Share of Total using SQLScenario: Multiple queries sending traffic to a single landing pageIn this lesson, we have a scenario where multiple queries send traffic to a single landing page. Let's see if it's the case in our dataset and figure out how we can calculate the share of each keyword. To do this, we need to sort by landing page and order the results accordingly.Adding a new column for sum of clicksWe want to calculate the sum of clicks for each cluster of landing pages. To do this, we can use the SUM function in SQL and partition our table by landing page:CopySUM(clicks) OVER (PARTITION BY GSC_landing_page) AS sum_LP_clicksThis will create a new column with the sum of clicks for each landing page group.Calculating query share of total clicksNext, we want to calculate the share of total clicks for each query. We can do this by dividing the number of clicks by the sum_LP_clicks calculation:Copyclicks / sum_LP_clicks AS query_share_of_totalNow that we have calculated the query share of total clicks, let's check if there are any duplicate search queries or queries sending data to multiple landing pages.Checking for duplicate search queriesTo check for duplicate search queries, we can use SELECT DISTINCT:CopySELECT DISTINCT search_query FROM shares;If there are duplicate search queries, their count will be less than 266 (the number of rows in our dataset).Aggregating results for unique search queriesNow that we have identified duplicate search queries, let's aggregate their results together so that they're combined into one row:CopySELECT
    search_query,
    SUM(impressions) AS impressions,
    SUM(clicks) AS clicks,
    SUM(sessions * query_share_of_total) AS sessions,
    SUM(goal_completions * query_share_of_total) AS goal_completions,
    SUM(goal_value * query_share_of_total) AS goal_value
FROM shares
GROUP BY search_query;This will sum the number of impressions, clicks, sessions, goal completions, and goal value for each unique search query.Final thoughtsWe have successfully calculated the share of each keyword in sending traffic to a landing page and aggregated results for unique search queries. This information can be used to calculate our final rank for a keyword based on its value per thousand impressions.17.12. Calculating Keyword Ranking in BigQuery SQLIn this advanced Looker Studio lesson, you'll learn how to calculate the value each keyword brings to your website per thousand impressions, using BigQuery SQL.Creating the CalculationFirst, let's create a new calculation by dividing the value by the number of impressions. To get the value per thousand impressions, multiply the entire calculation by 1000:Copy(value / impressions) * 1000 AS valueThis calculation gives you the value each query brings for a thousand impressions from sales.Sorting by ValueTo make your analysis more interesting and relevant, sort your data by value in descending order. This way, the highest values will appear at the top of your results.For example:CopyORDER BY value DESCYou might notice some outliers with high values per thousand impressions. These could be due to implementation issues, session timeouts, or even bots.Saving and Analyzing Your QueryOnce you're satisfied with your query and calculations, save it for future reference. Keep in mind that this example is designed to demonstrate an end-to-end data pipeline rather than provide specific optimization advice for SEO or website improvements.Remember that results may be temporary and subject to change as you refine your calculations or update your data sources over time.17.13. Saving Queries in BigQuery and Connecting to Looker StudioSave Query ResultsWhen running a query in BigQuery, you might want to save the results for visualization or later use. You have several options for saving your query results, such as:CSV to Google DriveCSV to your computerGoogle Sheets (static)Copying to clipboardBigQuery TableThe most effective approach in this case is defining a BigQuery table within your project's dataset.Create a New TableRun your query.Choose the option to save the result.Select ""BigQuery table.""Choose your project and dataset.Name your table (e.g., ""query_analysis_underlying_table"").Now you have a new table in your dataset.Connect Looker Studio with BigQueryGo to Looker Studio and create a blank report.Connect it to a data source.Choose BigQuery as the data source.Select the project and dataset containing your newly created table.After connecting, you can visualize and analyze your data in Looker Studio using various dimensions and metrics.Acceleration with BigQuery BI EngineYour report will benefit from the BigQuery BI Engine, which caches queries, tables, and data in RAM for sub-second querying and analysis capabilities.However, there's an issue with this setup: if data changes in Google Search Console or Google Sheets, this method won't update the analysis every hour or day as needed.Creating Live ConnectionsTo address this issue:Ensure both tables are external and connected live to Google Sheets so that any changes in Google Sheets will be reflected instantly in BigQuery tables.Schedule Supermetrics queries (if possible) to run every hour so that live data is accessed more frequently.This way, even though your final result isn't live, you'll be able to access updated data more frequently and have more accurate insights in Looker Studio.17.14. Creating Views in BigQueryIn this lesson, we'll explore how to save a query as a view in BigQuery and understand the differences between views and tables. Then, we'll see how to use these views in Looker Studio.Saving a Query as a ViewWhen working with queries in BigQuery, you have the option to save your query as a view instead of just saving the result or the query itself. A view is different from a table and will be represented by a different icon within your dataset.To create a view, simply choose your data center project dataset and use the same name for both the query analysis and underlying table. After saving it, you'll notice that another entity with a distinct icon is added to your dataset.Understanding ViewsClicking on the new view will show you its schema but not its preview. This indicates that it's not an ordinary dataset but rather a definition of data - essentially, it's that specific query running. In Looker Studio, you can connect to both tables and views.To identify whether you're connecting to a view or table in Looker Studio, it's helpful to add ""underlying table"" or ""underlying view"" when naming them since there's no icon available for differentiation at this stage.Using Views in Looker StudioWhen adding your new view to Looker Studio, it will behave similarly to any other dataset. However, keep in mind that unlike tables, views cannot be previewed like extended tables; they must be queried.If external tables are involved, BigQuery will request live data from sources such as Google Sheets when executing the view query. The result is live data calculated on-the-fly at the time of request.In Looker Studio, if you duplicate your existing table and connect it to your new view dataset instead of using an actual table source, you should see the same information – with the exception that it's not accelerated by BigQuery. This is because there's no hard data stored in BigQuery for views, only a set of different definitions.Comparing Views and TablesThe main difference between views and tables is that views provide live data, while tables do not. However, tables can be accelerated by BigQuery Engine, while views cannot. This results in faster execution times for tables compared to views.If you wish to have live or near-live data with acceleration, one solution is to use scheduled queries in BigQuery. This feature allows you to balance the need for updated information with faster performance.17.15. Scheduled Queries in BigQueryIn this lesson, we'll explore how to schedule queries in BigQuery to fetch near-real-time data and cache it for faster access in Looker Studio.Scheduling QueriesScheduled queries allow us to run a query at preset intervals, such as every hour, 30 minutes, daily or weekly, and save the result in a native table. This way, we can cache the results of our views and make them available for faster access with the BI engine.Enabling Scheduled QueriesIf you're using scheduled queries for the first time in your project or account, you need to enable them by clicking Enable API. This is a one-time setup that takes only a few seconds.Creating a New Scheduled QueryTo create a new scheduled query:Start from the BigQuery screen with your desired query already written.Click on Schedule Query.Give your scheduled query a name (e.g., ""query_analysis"") and add ""_sq"" to identify it as a scheduled query.Choose how often you want the query to run (daily, hourly etc.) and set start and end dates if needed.Set a destination table for your query results by selecting the dataset (e.g., ""query_analysis"") and table ID (using the same name as your scheduled query).Configuring Table SettingsWhen configuring your destination table settings:Decide whether you want each run's results appended to existing data or if you want to override existing data with new results.Choose where you want your data stored; however, this is optional.Save your settings and wait for the first run of your scheduled query.Connecting Looker Studio to Your Scheduled QueryOnce your scheduled query has started running:Go back to Looker Studio's edit mode.Edit your data source and rename it to include ""Scheduled Query.""Edit the connection and switch from connecting to the table to connecting to your scheduled query.Reconnect and refresh your data.Now, you should see that your Looker Studio report is fetching data from the scheduled query, which is accelerated by the BI engine and cached on an hourly basis. This provides a faster, more efficient way of accessing near-real-time data in Looker Studio.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-16-bigquery-introduction","200","OK","Chapter 16: BigQuery: IntroductionIn this chapter we’ll cover an Introduction to BigQuery: What BigQuery is, when we should or should not use this tool, and the limitations of the current data-stack in Looker Studio.We’ll also cover how we can bring in and work with data in BigQuery, as well as how to connect it to Looker Studio, and finally, we’ll take a look at some case studies on how BigQuery is used. 16.1. Introduction to BigQueryWelcome to the advanced Looker Studio course, where we'll dive into the world of BigQuery. This lesson will help you understand what BigQuery is, why it's interesting, and how it might fit into your business. By the end of this lesson, you'll be equipped with the knowledge to decide whether or not BigQuery is right for you and your organization.Why Consider BigQuery?Before we jump into the specifics of BigQuery, let's discuss why you might want to consider it in the first place. You may have heard about others using it and wondered if it's worth exploring for your own purposes.Limitations of Your Current Data StackEvery data stack has its limitations. Whether you're currently using Looker Studio or another tool, understanding these limitations can help you determine if BigQuery could be a valuable addition to your arsenal.What is BigQuery?BigQuery is a powerful tool that can help overcome some of these limitations. In this section, we'll explore what makes BigQuery unique and how it can benefit your data analysis process.When Should You Use BigQuery?Not every situation calls for using BigQuery. In this part of the lesson, we'll discuss when incorporating this tool might make sense for your business needs.Bringing Data into BigQueryIf you decide that utilizing BigQuery is a good move for your organization, you'll need to bring your data into it so that you can work with it effectively. We'll cover various methods for importing data into this platform.Working with Data within BigQueryOnce your data is inside BigQuery, there are numerous ways to manipulate and analyze it. We'll go over some key techniques for working with data within this environment.Connecting Looker Studio to BigQueryTo get even more value from using both tools together, we'll discuss how to connect Looker Studio to BigQuery. This connection will enable you to take full advantage of the capabilities offered by both platforms.Case StudiesFinally, we'll explore some real-life case studies that demonstrate the power and potential of combining Looker Studio and BigQuery. By examining these examples, you'll gain a better understanding of how these tools can work together to create valuable insights for your business.16.2. Why Do We Need BigQuery?16.3. What is BigQuery?16.4. BigQuery Pricing Explained16.5. How Fast is BigQuery?16.6. When Should we Consider BigQuery?16.7. Google Sheet vs BigQuery Data Pipeline16.8 Importing Data into BigQuery16.9. Importing Google Analytics Data to BigQuery16.10 Importing Data from Marketing Tools into BigQuery16.11. Working with Data in BigQuery with SQL16.12. Connecting Looker Studio to BigQuery16.13. BigQuery & Looker Studio Case Study: Affiliate Performance Dashboard16.14. BigQuery & Looker Studio Case Study: Labor Performance16.15. Shopify, Klavyio RFM Segmentation with BigQuery ML16.16. Store Inventory Capacity Outlook: BigQuery and Looker Studio Case Study16.17. Location Exploration Case Study with BigQuery and Looker Studio16.18. Discussion: BigQuery and BigQuery ML Use CasesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn16.1. Introduction to BigQuery16.2. Why Do We Need BigQuery?16.3. What is BigQuery?16.4. BigQuery Pricing Explained16.5. How Fast is BigQuery?16.6. When Should we Consider BigQuery?16.7. Google Sheet vs BigQuery Data Pipeline16.8 Importing Data into BigQuery16.9. Importing Google Analytics Data to BigQuery16.10 Importing Data from Marketing Tools into BigQuery16.11. Working with Data in BigQuery with SQL16.12. Connecting Looker Studio to BigQuery16.13. BigQuery & Looker Studio Case Study: Affiliate Performance Dashboard16.14. BigQuery & Looker Studio Case Study: Labor Performance16.15. Shopify, Klavyio RFM Segmentation with BigQuery ML16.16. Store Inventory Capacity Outlook: BigQuery and Looker Studio Case Study16.17. Location Exploration Case Study with BigQuery and Looker Studio16.18. Discussion: BigQuery and BigQuery ML Use Cases"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/149-embedding-forms-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.9. Embedding Forms in Looker StudioOne valuable way to enhance your Looker Studio reports is by embedding feedback forms directly into the report itself. This approach allows users to provide feedback, request specific metrics, or ask questions about the report's content. It can be particularly helpful when working with clients and a limited number of reports.How to Embed Forms in Looker StudioIn order to embed forms, follow these steps:Choose the area on your report canvas where you want to embed the form.Use the URL embed component to insert the form.Input the form URL and configure the styling options.You can successfully embed forms from various platforms like Typeform, Tally, and Google Forms.Considerations for Tracking Report InformationIt is important to note that there is currently no straightforward way to automatically and dynamically track which Looker Studio report the form is loaded on within the form itself. For example, if a report has multiple forms, you would need to create different form instances for each to keep track of the related report feedback.Encouraging User FeedbackBy embedding a feedback form in your Looker Studio reports, you can create an open line of communication with users, encouraging them to voice their concerns, questions, or requests regarding report navigation and functionality. Integrating a feedback form not only makes the report more user-friendly but also allows you to gather valuable insight to optimize your reports and meet user needs.In conclusion, embedding forms in your Looker Studio reports can significantly improve user experience and provide you with essential information for report optimization. It's highly recommended to include a feedback form or link at the bottom or footer of your reports for easy access and a more interactive user experience.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/148-embedding-videos-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.8. Embedding Videos in Looker StudioSometimes, a static report isn't enough to convey all the insights and explanations you want to communicate to your audience. Embedding external content like videos can provide further context, walkthroughs, or analysis in your Looker Studio report. In this lesson, we discuss embedding videos from various sources such as YouTube, Vimeo, and Loom.How to Embed Videos in Looker StudioTo embed videos in Looker Studio, follow these steps:Click on the area of your report's canvas where you want to embed the video.Choose a URL embed component to insert the video.Input the video URL and configure the styling options (e.g., borders).Considerations for Embedding VideosThere are security restrictions when embedding videos from domains like Vimeo or Loom. Be aware of the following:Vimeo: You may need to modify your settings to allow your video to be embedded on any website. Otherwise, the video may not appear due to domain restrictions.Loom: Ensure your video is accessible to anyone before embedding it.When embedding YouTube videos, keep in mind that advertisements may appear at the end, which could be an undesirable feature for Looker Studio reports.By enhancing Looker Studio reports with embedded videos, you can provide a more engaging and informative experience for your audience. This added layer of communication can help them better understand complex data, use filters or drill-down menus effectively, and gain valuable insights from your analysis. Always consider the advantages of including video content to enrich your reports and make them more valuable to your users.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/147-extract-and-date-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.7. EXTRACT() and DATE() in Looker StudioIn this lesson, we'll discuss two functions in Looker Studio, EXTRACT() and DATE(), that help extract specific date parts from a given date time value. Both methods can be useful in various situations where you only need the date portion of a date time field and not the associated time.Using the EXTRACT() FunctionTo extract the date part from a datetime value, use the EXTRACT() function:CopyEXTRACT(date_part FROM datetime_expression)In this formula, date_part should be replaced with the specific part you want to extract from the given datetime expression (e.g., month, week, or date). In our example, we'll extract the date part from the first rebill date calculation:CopyEXTRACT(date FROM first_rebill_date_expression)Where first_rebill_date_expression is the expression used to calculate the first rebill date.Using the DATE() FunctionThe DATE() function is another method that extracts the date from a datetime value:CopyDATE(datetime_expression)This function removes the time from the given datetime expression and only returns the date. In our example, we can apply the DATE() function to the first rebill date calculation:CopyDATE(first_rebill_date_expression)Where first_rebill_date_expression is the expression used to calculate the first rebill date.These two functions, EXTRACT() and DATE(), allow you to isolate specific parts of datetime values in Looker Studio, offering more flexibility in reporting and analysis. They can be especially helpful when you only need the date portion of the datetime value and want to discard the associated time.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/146-datetimediff-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.6. DATETIME_DIFF() in Looker StudioIn this lesson, we'll dive into the DATETIME_DIFF() function in Looker Studio, which can help you determine the difference between two dates. In our previous example, we calculated the first rebill date based on a fixed interval. However, there are cases where you need a more dynamic and flexible method, such as calculating the next billing date based on the difference between the current date and the original paid membership date.Calculating the Next Billing DateTo calculate the next billing date dynamically, use the DATETIME_DIFF() function as follows:Copy1 + DATETIME_DIFF(CURRENT_DATE(), paid_member_date, 'month')This formula calculates the difference between the current date and the date when a user became a paid member (paid_member_date), expressing the result in months. We then add 1 to the result.Integrating DATETIME_ADD() and DATETIME_DIFF()Now, combine this expression with the DATETIME_ADD() function:CopyDATETIME_ADD(paid_member_date, INTERVAL (1 + DATETIME_DIFF(CURRENT_DATE(), paid_member_date, 'month')) month)This formula calculates the closest billing date after the current date. Note that this method might not work precisely when the billing date is the same as the current date. In such cases, additional logic might be required to determine the exact time of billing.Use Case: Operational ReportsUsing DATETIME_DIFF() in conjunction with DATETIME_ADD() is a practical solution for operational reports. For instance, this kind of report could be used to call customers and remind them about their upcoming billing dates, offering both flexibility and adaptability.Remember to leverage Looker Studio functions like DATETIME_ADD() and DATETIME_DIFF() to create more dynamic and flexible date calculations that cater to specific business needs. These functions will help you generate better insights, resulting in more efficient and effective decision-making processes.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/145-datetimeadd-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.5. DATETIME_ADD() in Looker StudioIn this lesson, we'll explore using the DATETIME_ADD() function in Looker Studio to calculate new dates by adding or subtracting a set amount of time with a specified interval. For instance, you may want to determine the next billing date for subscription services based on when someone became a paid member.Calculating First Re-bill DateTo calculate the first rebill date, utilize the DATETIME_ADD() function as follows:CopyDATETIME_ADD(date, INTERVAL num granularity)The parameters you'll need to input are:date: The initial date (in our example, when the user became a paid member)num: The number of units of the specified granularity (e.g., 4 weeks)granularity: The desired granularity of the interval (e.g., week, day)In our example, we could calculate the first rebill date that occurs four weeks after the initial date:CopyDATETIME_ADD(paid_member_date, INTERVAL 4 week)Calculating the Next Billing DateCalculating the next billing date involves a more dynamic and flexible approach. While we can determine the current date, we need to determine how many months to add to the initial paid date. We can use the DATETIME_DIFF() function to find the difference between the current date and the initial paid member date. You'll need to use this information and additional calculations to determine the next billing date.Implementing these methods allows you to handle recurring billing and payment schedules more accurately by exclusively considering each user's membership history. Remember that using Looker Studio functions like DATETIME_ADD(), DATETIME_DIFF(), and CURRENT_DATE() can offer additional layers of flexibility and precision for your data analysis, benefiting your business operations and decision-making processes.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/144-weekday-function","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.4. WEEKDAY() FunctionIn this lesson, we will explore the WEEKDAY() function in Looker Studio, which allows you to extract and display the day of the week from a given date. This can be useful in various analyses such as identifying popular days for a website, planning staff schedules for a call center, or tracking site activity across days of the week.Extracting Day of the WeekTo extract the day of the week from a date, use the WEEKDAY() function:CopyWEEKDAY(date)This function returns a number between 0 and 6, where Sunday is represented by 0 and Saturday by 6.Displaying the Name of the DayBy default, the WEEKDAY() function does not return the name of the day, only its index. To show the actual day name, you must use a CASE statement to map the numerical output to the corresponding day name:CopyCASE WHEN WEEKDAY(date) = 0 THEN ""Sunday""
     WHEN WEEKDAY(date) = 1 THEN ""Monday""
     ...
     WHEN WEEKDAY(date) = 6 THEN ""Saturday""
ENDThis CASE statement checks the output value of the WEEKDAY() function and returns the corresponding name of the day for each value.ConsiderationsAlthough Looker Studio doesn't support lookup tables, you can use functions like WEEKDAY() and CASE to achieve similar objectives. Using these functions, you can create customized analyses and visualizations based on your data, allowing you to extract valuable insights from your data set.Remember to take advantage of the flexibility provided by Looker Studio functions to enhance your data analysis and presentation. Understanding these functions and their applications allows you to provide better insights and optimize your operations based on relevant metrics.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/143-advanced-date-range-selector","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.3. Advanced Date Range SelectorIn this lesson, we're going to explore how to work with a dynamic date range and display different aggregated data, such as a rolling dynamic date range for metrics within Looker Studio.Creating a Dynamic Date RangeTo create a dynamic date range, follow these steps:Add a new data source to your report or use an existing one.Select the metric you want to display (e.g., total events within a specific range).Add a date range control to your report, which allows you to set the date range for your metric.Configure the date range control with advanced options.Here's how to configure the advanced options for a dynamic date range:Select the Advanced Date Range option.Set the start and end dates to dynamic rules, for instance:For the end date, set it to today minus 1 day (yesterday).For the start date, set it to today minus 4 days (four days ago).When you apply these rules, the date range control will always display the most recent data, depending on the specified guidelines.Displaying Multiple Date Ranges in a TableIf you want to display multiple date ranges on the same table, such as yesterday, three days ago, and seven days ago, you'll need to create three separate data sources and apply custom date ranges for each of them. Once each data source reflects the desired date range, blend them together and display them in a single table.However, for a more comprehensive view, it's better to use a visualization that shows data points between the date ranges, such as a line chart that displays a weekly trend. You can select a custom date range, configure days with the actual dates, and display an overview of the entire week, which provides additional insights into the data.Keep in mind that, when possible, opt for a visualization that provides a more comprehensive view of the data instead of isolating specific date ranges in a single table.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/142-calculating-membership-duration-with-currentdate","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.2. Calculating Membership Duration with CURRENT_DATE()In this lesson, we're going to focus on calculating the duration between the time when a user becomes a paid member and today. This can serve as a custom dimension to understand the average age of your paid members or track how long it takes for someone to upgrade from a paid member to another membership level, like a gold member, within your database.Using CURRENT_DATE() FunctionTo calculate membership duration, you need to find the difference between the start date (when the user becomes a paid member) and the end date, which in this case is today. In Looker Studio, we have a function called CURRENT_DATE(), which returns the current date without needing any input.You can, however, provide a time zone input, but it is not necessary for the function to work. This function can return today's date in either a string version of the time zone or the actual difference between UTC and the desired time zone.Calculating Membership Duration in WeeksUsing the CURRENT_DATE() function, we can calculate the difference between today and the start date by dividing the result by 7, which gives us the membership duration in weeks.This calculation offers a more accurate and dynamic method for determining membership durations as opposed to hardcoding the data during the data collection process. Before Looker Studio, some companies would calculate the days using separate scripts, then push the date as a custom session-level dimension in Google Analytics. However, Looker Studio allows for more precise and flexible reporting, and the calculation can be applied retroactively.Take note of these advantages when working with membership durations, as they allow you to better analyze and understand your users' behavior and membership status over time. Keep in mind that it's always better to use a flexible calculation method, like the one demonstrated in Looker Studio, rather than hardcoding values for a more meaningful analysis.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1415-discussion-dashboard-design-and-layout-considerations","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.15. Discussion: Dashboard Design and Layout ConsiderationsWhen designing a dashboard in Looker Studio, it's essential to consider the architecture and layout while catering to the specific needs of different departments within an organization. To create an effective and easy-to-understand dashboard, it's important to focus on usefulness and follow a logical structure.Getting Creative with Layouts and Understanding User NeedsYou can explore creative layouts and add graphics to your dashboards, but always prioritize usefulness to ensure your dashboards effectively answer specific questions or sets of questions. Each section of a dashboard should flow naturally from top to bottom and left to right, accompanied by appropriate titles, subtitles, and footers to enhance understanding.Communicating with StakeholdersUnderstanding what stakeholders are looking for is vital when designing tailored dashboards. Asking them about their preferences and the data they want to see can help you create functional and visually appealing dashboards. Inquire about how they will use the data and what they expect to find so that you can optimize your dashboard accordingly.Iterating and Improving Dashboard DesignDesigning dashboards is an iterative process. After presenting the initial draft, you can make adjustments based on how the stakeholder plans to use the dashboard. Carefully considering the user experience is key to creating effective dashboards that cater to the user's unique needs.TakeawaysWhen creating dashboards in Looker Studio, focus on the following aspects:Cater to the needs and preferences of each department or individual user.Understand how stakeholder-specific data requirements influence the dashboard layout.Prioritize meaningful communication and usefulness in dashboard design.Iterate and improve upon initial drafts based on user feedback to create tailored solutions.Designing useful and easily understandable dashboards requires balancing creativity with practicality while considering the end-user experience. In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1414-discussion-dashboard-types-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.14. Discussion: Dashboard Types in Looker StudioWhen categorizing dashboards in Looker Studio, you can approach it based on the purpose or the function they serve within an organization. While it is an open-ended question, several examples can give you an idea of how to organize or categorize dashboards. Here are a few common categories:Web Analytics Dashboards: These focus on website behavior, conversions, and traffic performance across various marketing channels, like ads, email, and social media.Operational Dashboards: These center around the performance of different departments or business functions within the organization. They might cover the efficiency of shipping processes, sales performance, and other business operations.Human Resources Dashboards: HR dashboards focus on employee performance, time management, and payroll metrics. They can help track output and compare efficiencies between different branches or departments.Financial Dashboards: Primarily used by CFOs or financial executives, these dashboards deal with financial data, tracking discrepancies, and ensuring that the organization's financial statements are accurate and reliable.Informational Dashboards: As the name suggests, these dashboards aim to communicate essential information to a wider audience. They might include data visualization projects, such as visualizing public data (e.g., COVID-19 data) to showcase analytical skills or provide insights to the public.These are just a few examples of dashboard categories in Looker Studio. Ultimately, your dashboards' organization depends on the specific needs of your organization and the type of information you want to convey or analyze.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1413-creative-use-cases-for-extract-data-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.13. Creative Use Cases for Extract Data in Looker StudioExtract Data functionality in Looker Studio can be used for more than just increasing report loading and refreshing speeds. In this lesson, we'll explore a few creative use cases for the Extract Data feature to optimize your reports further.De-aggregation with Extract DataOne use case for Extract Data is de-aggregating auto-aggregated metrics, like revenue, transactions, and sessions from Google Analytics. Since Looker Studio doesn't have access to row-level data in a scorecard, de-aggregating these metrics can be challenging. By using Extract Data, you can define breakdowns and extract row-level data to show average or maximum revenue per landing page, for example.Keep in mind that extracting data using this method might cause a delay in the data, as extracts are only updated periodically. You can also use data blending for de-aggregating metrics in real-time, although it might not be as fast as leveraging Extract Data.Advantages and ConsiderationsUsing Extract Data for de-aggregation offers several advantages:Faster report loading times.Access to row-level data for various statistical calculations, such as count, minimum, maximum, standard deviation, and variance.However, it's essential to understand that using Extract Data for de-aggregation may result in a delay of data, as updates can be up to a day late.Extract Data in Looker Studio offers creative ways to optimize your reports beyond just improving loading speeds. For example, using this feature allows for de-aggregating auto-aggregated metrics from Google Analytics, providing more in-depth insights and calculations. Remember the advantages and considerations when using Extract Data for these additional use cases to ensure a balance between optimal performance and data timeliness. Always consider the specific requirements of your reports before leveraging Extract Data for creative uses.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1412-extract-data-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.12. Extract Data in Looker StudioIn Looker Studio, extracting data is a useful way to increase report loading and refreshing speed. Unlike other data connectors, the Extract Data connector doesn't directly connect to any third-party data source. Instead, it uses one of your existing data sources to extract a subset of data, which can be refreshed periodically. This method is leveraged to improve response times in your reports.Extract Data for Enhanced SpeedTo find the Extract Data feature, go to the Resources > Manage Data Sources > Add Data Source section in Looker Studio. The Extract Data feature asks you to connect to one of your existing data sources, allowing you to extract the dimensions and metrics of your choice. The data extracts can be set to update daily, weekly, or monthly.Data freshness plays a key role in ensuring report accuracy and usability. For instance, Google Analytics data freshness can be significantly affected by user-based segment processing. Data extraction can help mitigate this issue, as the extracted data is stored in Looker Studio's BigQuery account.When blending data sources, the blend should satisfy the data freshness requirements of all individual sources. By blending data sources with BigQuery, you can significantly reduce data freshness intervals, enabling faster report updates.Limitations and Best PracticesWhile using the Extract Data feature can optimize report loading times, the extracted tables can have some limitations:Maximum table size is 100 MB.Data freshness can be delayed by up to a day, as the feature only extracts data up to a certain point, depending on how often the data is set to refresh.To maximize the benefits of the Extract Data feature, use these best practices:Identify charts or chart groups that can be powered by a limited number of dimensions and several metrics, then extract that dataset.Manage and organize your extracted data sources for optimal performance and readability.Always create reports with live data first, then refine them based on client feedback before optimizing with extracted data.In conclusion, extracting data in Looker Studio can help speed up your reports by using data stored in BigQuery. It provides a more efficient way to ensure data freshness and reduces report loading time for a better user experience. Keep in mind the limitations and best practices to effectively utilize the Extract Data feature in your Looker Studio reports.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1411-quicker-data-freshness-with-blending-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.11. Quicker Data Freshness with Blending & BigQueryIn Looker Studio, data freshness plays a crucial role in updating your reports with new information. A common problem when working with Google Sheets is that the shortest data freshness you can set is 15 minutes, which might not be ideal for some use cases. In this lesson, we'll explore a workaround to reduce the data freshness computing interval using BigQuery and data blending.Reducing Data FreshnessBigQuery data sources in Looker Studio can be set with a shorter data freshness interval of one minute. Ideally, you would want to write data to a Google Sheet and read this data from BigQuery. While this is possible, a more practical solution involves blending data sources for quicker data freshness.Blending Data SourcesTo blend data sources and achieve quicker data freshness, follow these steps:Create a dummy BigQuery connection that doesn't connect to any table.Set the data freshness in BigQuery to one minute.Blend your primary data source (Google Sheet) with the dummy BigQuery connection.With this setup, the blended data source will have a data freshness interval of one minute, as required by the BigQuery connection.Considerations and LimitationsAlthough blending data sources allows you to achieve faster data freshness, it isn't a real-time solution. Users must still wait for the one-minute interval between updates. While this may not be ideal for all situations, it can serve as a temporary solution for cases where the data must be saved and accessed later.Looker Studio's data freshness feature provides a helpful mechanism for keeping your reports up-to-date with the latest information. While it isn't always possible to achieve real-time data freshness, blending data sources with shorter data freshness intervals can help you get closer to this ideal outcome. By carefully considering data freshness requirements, you can optimize your reports for better accuracy and user experience.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data/1410-embedding-google-docs-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 14.10. Embedding Google Docs in Looker StudioLooker Studio allows you to embed Google Docs, Google Sheets, and other external content to create a more engaging and interactive report. In this lesson, we'll explore the benefits of embedding these external types of content and the steps you can take to achieve this integration.Embedding Google Docs in Looker StudioEmbedding Google Docs in Looker Studio can add valuable textual content to your reports. For instance, you can include definitions of metrics, update weekly or monthly insights, or provide additional context that helps your users understand the report better. To embed Google Docs, follow the same steps for embedding videos, and use the Google Doc URL in the embed component.Embedding Google Sheets in Looker StudioEmbedding Google Sheets in Looker Studio can offer interactive elements to your reports by showcasing raw data or user inputs. While visualizing raw data alongside charts can be beneficial, Google Sheets comes with more menu and button elements than expected. However, you can still use Google Sheets to store user inputs through a single-cell sheet and even save those inputs to be used later.To embed a single-cell Google Sheet in Looker Studio:Create a single-cell Google Sheet and format it as required.Increase the font size and improve the overall appearance.Embed the sheet using the URL in a small iframe.Add the Google Sheet as a data source in Looker Studio.Display the input value from the Google Sheet on a scorecard.Despite the potential advantages, one limitation of this approach is that the scorecard does not update automatically. Users must refresh their reports to view updated scorecards connected to the Google Sheet.Embedding Google Docs and Google Sheets enhances your Looker Studio reports with additional context, user-generated inputs, and interactivity. These embedded components can lead to a more comprehensive understanding of the data and create a more engaging user experience.In this chapter:→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-14-working-with-dates-embedding-content-and-extracting-data","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. In this chapter, we'll explore working with date fields in Looker Studio and discover how to manipulate and utilize them effectively in our reports. We'll then delve into the ""Extract Data"" connector, understanding its use cases and benefits, and finish by learning how to embed external content within Looker Studio dashboards. Follow along as we navigate through these essential topics in Looker Studio.14.1. The Date FunctionsIn this first part, we’ll discuss Working with Dates. We’ll take a look at the different fields of date types, different ways we can work with dates, as well as the different date functions and their use cases.Working with Date FieldsDate and time fields are commonplace in reporting as they typically represent vital data points for analysis. As such, understanding how to work with date fields and how they interact with reporting components, such as a date range selector, is essential.In this lesson, we work with a dataset comprising user IDs, the date users become leads, and the date users become paid members. The goal is to calculate the number of days it takes for a user to convert from a lead to a paid member, as well as the conversion rate per week. Let's begin by learning about the DATE_DIFF function.The DATE_DIFF() FunctionThe DATE_DIFF function calculates the difference in days between two date fields. By simply passing two date fields to this function, you can quickly determine the number of days between these dates. In our example, we used the following formula to obtain the desired result:CopyDATE_DIFF(Date_Become_Lead, Date_Become_Paid_Member)However, Looker Studio doesn't offer a custom function for obtaining the weeks directly. To calculate the number of weeks between the two dates, we need to divide the result of DATE_DIFF by seven and round it with zero decimals.The result can be obtained using the following formula:CopyROUND(DATE_DIFF(Date_Become_Lead, Date_Become_Paid_Member) / 7, 0)→ 14.2. Calculating Membership Duration with CURRENT_DATE()→ 14.3. Advanced Date Range Selector→ 14.4. WEEKDAY() Function→ 14.5. DATETIME_ADD() in Looker Studio→ 14.6. DATETIME_DIFF() in Looker Studio→ 14.7. EXTRACT() and DATE() → 14.8. Embedding Videos in Looker Studio→ 14.9. Embedding Forms in Looker Studio→ 14.10. Embedding Google Docs → 14.11. Quicker Data Freshness with Blending & BigQuery→ 14.12. Extract Data in Looker Studio→ 14.13. Creative Use Cases for Extract Data in Looker Studio→ 14.14. Discussion: Dashboard Types in Looker Studio→ 14.15. Discussion: Dashboard Design and Layout ConsiderationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn14.2. Calculating Membership Duration with CURRENT_DATE()14.3. Advanced Date Range Selector14.4. WEEKDAY() Function14.5. DATETIME_ADD() in Looker Studio14.6. DATETIME_DIFF() in Looker Studio14.7. EXTRACT() and DATE() in Looker Studio14.8. Embedding Videos in Looker Studio14.9. Embedding Forms in Looker Studio14.10. Embedding Google Docs in Looker Studio14.11. Quicker Data Freshness with Blending & BigQuery14.12. Extract Data in Looker Studio14.13. Creative Use Cases for Extract Data in Looker Studio14.14. Discussion: Dashboard Types in Looker Studio14.15. Discussion: Dashboard Design and Layout Considerations"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/139-chart-dimension-drill-down","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.9. Chart Dimension Drill DownChart drill down is an interaction that allows users to explore data at different levels of granularity by drilling up and down between dimensions in a hierarchy. This feature is particularly useful when you want to provide the viewer with the ability to explore data at different levels of detail.Hierarchy in DimensionsTo implement a drill down effectively, there should be a hierarchy within the dimensions. Some common examples include:Dates: Year, Quarter, Month, and DayGeographical: Continent, Country, Region/State, and CityLet's explore these hierarchies with a time series chart.Enabling Chart Drill DownTo enable chart drill down in Data Studio:Click on the chart for which you want to enable drill down.Under the chart's settings, enable ""Drill Down"".Add the desired dimensions in the hierarchy (e.g., year, quarter, month, day) to the list of drill-down levels. The order matters, as it determines the drill-down order.Once enabled, an icon will appear in the chart header. Users can click on this icon to drill down through the hierarchy.Time Series Chart Drill DownImagine a time series chart displaying the number of new users over four years. The dimensions in the drill down are set in a specific order: Year, Quarter, Month, and Date. The user can then click through each level of granularity to see the data at different levels. For example, they can drill down from Year to Quarter, then from Quarter to Month, and finally from Month to Day.Note that if you disable the drill down feature, you'll need to recreate the dimensions.To help users understand the functionality, consider adding a title or guidance text near the chart. For instance, you could add ""Use the arrows to drill down for different date range granularities.""Table Drill DownThe same concept applies to tables. Imagine a table displaying data on continents, countries, and cities. If you drill down from Continent to Country, you'll see one row per country across all continents. However, if you first select a specific continent and then drill down, you'll only see countries within that selected continent. This can be done on subsequent levels as well, such as selecting a country and drilling down to view its cities.Drill Down vs. Cross FilteringIt's essential to distinguish between drill down and cross filtering. Drill down allows users to explore data at different levels of granularity without affecting other charts on the canvas. Cross filtering, on the other hand, filters the data on one chart based on the selected data on another chart, impacting all related charts on the canvas.By allowing users to drill down through dimensions in a hierarchy, you provide them with the flexibility to analyze data at various granularities. This feature, when combined with optional metrics and metric sliders, can create highly customizable and interactive reports.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/138-optional-metrics","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.8. Optional MetricsOptional metrics provide users with the ability to choose which metrics they want to view on a chart from a predefined list. This feature is particularly useful when there are multiple metrics to choose from, and you want to avoid overcrowding the chart with too much information.Use Case for Optional MetricsConsider a car dealership with a website that has various buttons, filtering options, and interactive features. They define 20 different types of engagement metrics for their vehicle detail pages. Including all these metrics on a table would make the chart too crowded and hard to read. Enabling optional metrics allows the viewer to select which metrics they want to see on the chart from a list provided by the report creator.Enabling Optional MetricsTo enable optional metrics in Data Studio:Click on the chart for which you want to enable optional metrics.Under the chart's settings, enable ""Optional Metrics"".Add the desired metrics to the list of optional metrics.Once enabled, a new icon will appear in the chart header. Users can click on this icon to select and deselect the metrics they want to view on the chart.Compatibility with Other ChartsOptional metrics work with various types of charts, including tables, bar charts, and time series. Users can choose different metrics from the list of optional metrics, and the chart will update accordingly.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/137-metric-sliders","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.7. Metric SlidersMetric sliders allow users to filter data based on the values of metrics. This can be particularly useful when you want to give users the ability to explore data within specific ranges. For example, users may want to see rows with revenue greater than $5,000 or sessions between 3,000 and 20,000.Enabling Metric SlidersEnabling metric sliders in Data Studio is simple:Click on the chart for which you want to enable metric sliders.Under the chart's settings, enable ""Metric Sliders"".Scroll down and enable ""Show Chart Headers"". Metric sliders will appear at the chart level, and you need to display the chart headers to make them visible.Now, users can adjust the metric sliders to filter data based on their desired range of values.Using Metric SlidersMetric sliders can be used with different types of charts, including tables, time series, and bar charts. Users can adjust the sliders manually or enter specific values to filter data based on their requirements. They can also clear the settings for each metric to reset the filters.Compatibility with Other FeaturesMetric sliders have some limitations regarding compatibility with other chart features:If a chart's summary row (or grand total) is visible, you won't be able to enable metric sliders. To use metric sliders, remove the summary row.If optional metrics are enabled for a chart, you can't use metric sliders for that chart at the same time.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/136-page-vs-report-level-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.6. Page vs Report Level ParametersIn this lesson, we'll explore the differences between page-level and report-level parameters in Looker Studio and discuss how to manage them.Page-Level ParametersPage-level parameters are specific to individual pages within a report. When you change a page-level parameter, it doesn't affect other pages in the report.For example, let's say you have a parameter called ""forecast"" with a default value of 2. If you change the value to 4 on one page, the value will remain 2 on other pages in the report.Report-Level ParametersReport-level parameters, on the other hand, apply across the entire report. When you change a report-level parameter, it updates the value on all pages in the report.To make a parameter report-level, simply select the ""Make Report-Level"" option in Looker Studio. This ensures that user input is retained across the entire report.Handling Different ScopesIn some cases, you might want a parameter to apply to the whole report, but with one exception—a single page that doesn't inherit the report-level value. To achieve this, create a page-level filter for that specific page.However, managing these exceptions can be complex due to the hierarchy of parameters. When a page-level parameter is changed, it doesn't automatically update the report-level parameter. Conversely, when a report-level parameter is changed, it updates the page-level parameter only if the page-level parameter is still at its default value.This hierarchy is important to understand, as it may lead to unexpected behavior when managing parameters in Looker Studio.Key TakeawaysTo effectively use page-level and report-level parameters in Looker Studio, remember the following:Page-level parameters are specific to individual pages and don't affect other pages in the report.Report-level parameters apply across the entire report and update the values on all pages.Understand the hierarchy between page-level and report-level parameters to manage exceptions and avoid unexpected behavior.Mastering these concepts and you'll able to create complex reports with different parameter scopes in Looker Studio!In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/135-bridge-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.5. Bridge ParametersUnderstanding the scope of parameters is essential when working with Looker Studio. In this lesson, we'll discuss how to set default values, use controls, and bridge parameters across different data sources.Setting Default ValuesYou can set default values for parameters when configuring, creating, or defining them. Default values can be set at different levels, such as the report, page, group, or chart level, depending on the hierarchy.Using ControlsWhen using an input field or any other type of control to get a parameter value from the user, Looker Studio will update the data source accordingly. However, if you have multiple data sources with similar parameters, Looker Studio won't automatically update all instances.For example, if you have a parameter called ""forecast"" in two separate data sources, changing the value in one won't automatically change the value in the other. This is because the parameters have different IDs.Bridge ParametersTo use a single parameter across different data sources, you'll need to create a bridge parameter. Bridge parameters allow you to apply the same value to multiple calculations across different data sources.To create a bridge parameter, simply ensure that the parameter ID is the same in both data sources. Looker Studio will then treat them as the same parameter, updating both instances when the user inputs a new value.For example, imagine a marketing report that uses forecasting data from two separate Google Analytics accounts. Instead of asking the user to input the same forecast value twice, you can create a bridge parameter to update both accounts simultaneously.This approach enhances the user experience, as clients won't have to enter the same value multiple times in different places.So, to effectively use bridge parameters in Looker Studio, remember to:Set default values at the appropriate hierarchy level.Use controls to obtain user input.Create bridge parameters by matching the parameter IDs across different data sources.With these steps, you'll be able to efficiently update and manage parameters across multiple data sources in Looker Studio.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/134-filtering-blended-data-sources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.4. Filtering Blended Data SourcesFiltering Blended DataWhen working with blended data sources in Looker Studio, it's important to understand how filters work with them. Filters are applied to individual data sources first and then to the blended data.Here's a summary of the key points:When you apply a filter to a blended data source, the filter is applied to the raw tables (data sources) that are part of the blend.The filtered results of the individual data sources are then combined according to the blend configuration.If you have multiple data sources in a blend, filters may affect some data sources but not others, depending on the fields used in the filter.ExampleLet's consider an example with two data sources: Google Analytics and Google Sheets. You have a control for each data source based on the ""Country"" field. You also have a blended data source created by joining the two data sources on the ""Country"" field.When you filter by ""Country"" for the Google Analytics data source, the following happens:The filter is applied to the Google Analytics data source, showing only the selected country.The blended data source is updated to reflect the filtered Google Analytics data.The filtered Google Analytics data is joined with the Google Sheets data source based on the ""Country"" field.When you filter by ""Country"" for the Google Sheets data source, the following happens:The filter is applied to the Google Sheets data source, showing only the selected country.The blended data source is updated to reflect the filtered Google Sheets data.The filtered Google Sheets data is joined with the unfiltered Google Analytics data source based on the ""Country"" field.In both cases, the filters are applied to the individual data sources first, and then the blended data source is updated accordingly.When working with blended data sources, remember that filters are applied to each data source first and then to the blended data. This can impact your results, so it's essential to understand how the filters are affecting each data source in the blend.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/133-bridge-filters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.3. Bridge FiltersIntroducing Bridge FiltersBridge filters extend the concept of bridge fields to filters in Looker Studio. As we saw earlier, filters are part of a data source and cannot be applied to a chart that uses a different data source. However, with bridge filters, we can make Looker Studio apply a filter from one data source to a chart that uses a different data source.Creating and Applying Bridge FiltersTo create a bridge filter, follow these steps:Create a filter in your first data source (e.g., Google Analytics) based on the bridge field you created earlier. For example, filter the ""Country-Bridge"" field to show only ""United Kingdom"".Save the filter.Apply the filter to a chart based on the same data source (e.g., Google Analytics). This should work as expected.Apply the filter to a chart based on a different data source (e.g., Google Sheet) that has the same bridge field. Looker Studio should now recognize the bridge field in the second data source and apply the filter accordingly.This way, you can apply a single filter to different data sources by using bridge fields to make Looker Studio believe that the fields in different data sources are the same.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/132-bridge-fields","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.2. Bridge FieldsFooling Looker Studio with Bridge FieldsIn this lesson, we'll explore a workaround to overcome Looker Studio's limitation in filtering across different data sources. We'll use a concept called bridge fields to achieve this.Examining Fields and Field IDsFirst, let's take a closer look at a data source and its fields. Each field has a name, type, default aggregation, and description. You can rename a field without affecting the reports because Looker Studio uses an internal field ID to recognize each field.For built-in fields within a data source, you cannot see the value of the internal field ID. However, for custom fields you create, you can see and edit the field ID when you initially create the field.Creating Bridge FieldsThe idea behind bridge fields is to use Looker Studio's field ID functionality to make it believe that a field from one data source is the same as a field in another data source. To do this, you need to create a custom field in each data source with the same field ID.For example, in a Google Sheet data source, create a new field called ""Country-Bridge"" and set the field ID to ""country_bridge"". Use the same values as the ""country"" field in this new field.Next, create a similar field in your Google Analytics data source with a different name (e.g., ""Country-Bridge_02"") but with the same field ID (""country_bridge""). Again, use the same values as the ""country"" field.Now, when you apply the bridge field to the dropdown control, both the Google Sheet and Google Analytics data sources will be affected when you filter by country.Using Bridge Fields in Real-Life ScenariosBridge fields can be helpful when you have campaigns running on different platforms (e.g., Google Ads, Microsoft Ads, Facebook Ads) and want to filter data from all sources using a single dropdown menu. It's currently the only way to filter across different data sources in Looker Studio.Remember that this is a workaround and might not always work as expected. Always test your reports thoroughly to ensure accuracy.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/1312-managing-pages-sections-in-navigation-sidebar","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.12. Managing Pages & Sections in Navigation SidebarManaging pages and sections in Looker Studio can be done easily using the navigation sidebar. You can create, move, and organize pages and sections to create a multi-level navigation for your dashboard.Creating PagesTo create a new page, go to the ""Pages"" menu and click ""Insert Page."" This will add a new page based on your current position in the report.You can rename the page by double-clicking on its title in the navigation sidebar.Moving PagesTo move a page within the navigation sidebar, simply click and drag it to the desired location.You can move a page within a section, between sections, or make it a standalone page outside of any section.Creating SectionsTo create a new section, click the ""+"" icon in the navigation sidebar and select ""Section.""The new section will be created within the current section or at the end of the report if there's no current section.You can rename the section by double-clicking on its title in the navigation sidebar.Moving SectionsTo move a section within the navigation sidebar, simply click and drag it to the desired location.You can move a section within another section, between sections, or make it a standalone section outside of any other section.Deleting Pages and SectionsTo delete a page, click the three-dot menu icon next to the page title in the navigation sidebar and select ""Delete.""To delete a section, first, delete all the pages within the section. Once all the pages are removed, click the three-dot menu icon next to the section title and select ""Delete.""You can create and organize your pages and sections at any time during the report creation process. By using tap navigation, you can turn your report into a website-like layout with menus.Note: Looker Studio documentation mentions that deleting a section will also delete all pages within it, but at the time of recording this lesson there was no direct option to delete a section with pages. You have to delete the pages within the section first, and then you can delete the section.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/1311-dynamic-date-range-granularity-selector","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.11. Dynamic Date Range Granularity SelectorThe dynamic date range granularity selector allows you to change the granularity of a chart in Looker Studio without navigating to different pages or using multiple charts. This can be achieved using parameters, case functions, and controls in a creative way.Setting Up the DimensionFirst, create a dimension using a case statement. The dimension should change based on the value of a parameter. For example, when the parameter's value is 1, the dimension should display dates in a day format, and when the parameter's value is 2, the dimension should display dates in a week format, and so on.Creating the ParameterCreate a parameter of type number with a range from 1 to 4 (or any other range based on your needs). This parameter will be used to determine the granularity of the chart.Creating the Click EffectTo create the click effect, follow these steps:Add icons for each granularity level to your report (e.g., daily, weekly, monthly, and yearly).Place a slider control in your report, setting the opacity to 0, making it completely transparent.Adjust the slider control's position so that it overlays the icons, creating the appearance of clickable buttons.When users click on the icons, they will actually be interacting with the transparent slider control. The slider control will change the value of the parameter, and the chart's granularity will update accordingly.ExampleIn the given example, a chart's granularity can be changed from daily to weekly, monthly, and yearly views without changing the URL or navigating to a different page. This is done by creatively using case statements, parameters, and controls in Looker Studio.Remember that this technique is a clever workaround and may not be officially supported by Looker Studio. Nonetheless, it can be a useful way to create a dynamic and interactive report.Note: The mentioned technique was developed by Mehdi Oudjida.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-13-advanced-controls-parameters/1310-link-navigation","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 13.10. Link NavigationLink navigation is a useful feature that helps you control how users navigate between different pages in a report or to external websites. You can use text, images, and even create buttons for navigation.Use Cases for Link NavigationLink navigation is especially helpful when you have a report displaying various KPIs for different business functions or tools. By adding internal links, users can click on the KPIs to see the details of specific campaigns, marketing tools, or other areas within the business.Overall, link navigation helps create a more interactive and user-friendly experience for those viewing and exploring your reports.External LinksTo create an external link in Looker Studio, select a piece of text and click on ""Insert Link."" You can then add the URL of the external website you want to link to. This is helpful when you want to:Include a backlink to your websiteLink to a documentation or data sourceDirect users to any other relevant external pageInternal LinksInternal links enable users to navigate between pages within the report. To create an internal link, select a piece of text and choose a page from the list of available pages in the report. The link will remain functional even if you change the name of the linked page, as it uses the page ID rather than the name.You can also create dynamic internal links using options like First, Previous, Next, and Last. These can be useful for navigating to the next or previous page in a report.Using Images as LinksYou can use images as links by adding an image to the page and selecting the desired link type (external URL or dynamic link). This feature has been improved, allowing you to dynamically link images to specific pages within the report, as well as first, previous, next, or last pages.Creating Buttons for NavigationYou can create buttons for navigation by adding a text box styled as a button and linking it to the desired page. This approach can be useful for creating intuitive and visually appealing navigation elements.In this chapter:→ 13.2. Bridge Fields→ 13.3. Bridge Filters→ 13.4. Filtering Blended Data Sources→ 13.5. Bridge Parameters→ 13.6. Page vs Report Level Parameters→ 13.7. Metric Sliders→ 13.8. Optional Metrics→ 13.9. Chart Dimension Drill Down→ 13.10. Link Navigation→ 13.11. Dynamic Date Range Granularity Selector→ 13.12. Managing Pages & Sections in Navigation SidebarEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-12-parameters/129-parameter-example-utm-generator/129-quiz","200","OK","1. What is the main purpose of a UTM link generator? (multiple-choice)a) To create custom UTM links for marketing campaigns.
b) To generate random UTM codes for security purposes.
c) To create a list of URLs for a sitemap.
d) To analyze the performance of UTM links.Answer: a2. Which parameter types are commonly used for creating a UTM link generator in Looker Studio? (multiple-choice)a) Date parameters.
b) Text-based parameters.
c) Numeric parameters.
d) Boolean parameters.Answer: b3. What is the difference between labels and values for text-based parameters? (multiple-choice)a) Labels are used for calculations, and values are displayed in the dropdown menu.
b) Labels and values are the same.
c) Labels are displayed in the dropdown menu, and values are used for calculations.
d) Labels are used to create dropdown menus, and values are used to create input boxes.Answer: c4. In a UTM generator, the UTM source and UTM medium are set up as text-based parameters with which allowed values? (multiple-choice)a) Any value.
b) A limited set of allowed values.
c) Only numeric values.
d) Only predefined values.Answer: a5. True or False: The UTM campaign parameter should always be set up with a limited set of allowed values. (true/false)Answer: False6. True or False: The UTM link generator can only be used for Google Analytics campaigns. (true/false)Answer: False7. True or False: The UTM link generator can be beneficial for marketing teams by simplifying the process of creating custom UTM links. (true/false)Answer: True8. Fill in the blank: A _________ menu is used for selecting a value from a predefined list of allowed values in text-based parameters.Answer: dropdown9. Fill in the blank: Labels represent ____________ names for the dropdown menu, while values are used for ____________.Answer: user-friendly; calculations10. Imagine you are tasked with creating a UTM generator for your marketing team. Describe the steps you would take to create the tool and how you would use the Looker Studio's features to make it user-friendly. (open-ended)Example answer:First, I would identify the necessary UTM parameters, such as UTM source, medium, and campaign.I would create text-based parameters for each UTM attribute, allowing any value for UTM source and medium, and a limited set of allowed"
"https://lookerstudiomasterclass.com/chapter-12-parameters/129-parameter-example-utm-generator","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.9. Parameter Example: UTM GeneratorA practical use case for text parameters is creating a mini-tool like a UTM link generator. This can be useful for marketing teams who want to generate UTM links for their campaigns.Learning ObjectivesUnderstand the use case and benefits of creating a UTM link generator tool.Learn how to set up text-based parameters for UTM source, medium, and campaign.Create a custom UTM link based on user inputs.Differentiate between labels and values for text-based parameters.Apply real-life examples to demonstrate the practical application of the UTM generator.UTM Generator SetupSuppose we have a base link, such as datastudio.com, and we want to get the values for the UTM parameters from the user. For example, they might input a UTM source like email and a UTM medium like newsletter.Since we're familiar with the business and know there are only a few campaigns they run, we can create a text-based parameter with a list of allowed values, like product A and product B. Users can then select the value using a dropdown menu rather than an input box.Creating the UTM LinkThe UTM link will be constructed by appending the UTM source, UTM medium, and UTM campaign values to the base link. For instance, it might look like datastudio.com?utm_source=email&utm_medium=newsletter&utm_campaign=product-a.Let's examine the UTM parameters:UTM source: Text with any value.UTM medium: Text with any value.UTM campaign: Text with a limited set of allowed values (e.g., product-a and product-b).The label displayed in the dropdown menu represents the user-friendly product name, while the value used in calculations can be something more technical, like an SKU. This way, the marketing manager sees familiar product names, but the UTM link includes the SKU.For example, the user interface displays ""Product A"" and ""Product B,"" but when the user selects ""Product B,"" the UTM campaign shows the SKU for that product. The generated link can then be clicked on to navigate directly to the UTM link.By providing this UTM generator tool, you can make it easier for your marketing team to create custom UTM links for their campaigns, without having to deal with the technical details themselves.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.9. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/128-parameter-example-google-maps-link/128-quiz","200","OK","Multiple-choice QuestionsWhich function can be used to create a hyperlink in Looker Studio?a. LINK()
b. HYPERLINK()
c. CONCAT()
d. URL()Answer: bWhat is the purpose of the CONCAT() function?a. Combine multiple text strings into a single text string
b. Create a hyperlink
c. Calculate the sum of two numbers
d. Extract a portion of a text stringAnswer: aWhat can a text-based parameter be set to accept?a. Any value
b. A list of values
c. Both a and b
d. Neither a nor bAnswer: cWhen is user input for a text-based parameter finalized?a. When the user presses Enter
b. When the user clicks outside the input box
c. When the user types the last character
d. When the user saves the reportAnswer: bTrue/False QuestionsYou can create a dropdown control using a text-based parameter with a list of values.Answer: TrueThe CONCAT() function can be used to create a hyperlink by itself.Answer: FalseA text-based parameter can be used to generate dynamic links for various use cases.Answer: TrueFill-in-the-blanksThe data type for a text-based parameter is ______.Answer: textThe function used to create a Google Maps link with a text-based parameter in Looker Studio is ______().Answer: HYPERLINKOpen-ended Long Answer QuestionYour company wants to create a Looker Studio report that generates dynamic URLs for specific product pages based on user input. Describe the process you would follow to create a text-based parameter for the product name and generate the URL using the HYPERLINK() and CONCAT() functions. Provide a formula for the hyperlink calculation.Example answer:Create a text-based parameter called ""product_name"" with the following configuration:Name: product_nameType: textDefault value: Enter the product nameUse the HYPERLINK() function to create a hyperlink based on the user input for the product name.Use the CONCAT() function to combine the base URL of the product pages with the user input.The formula for the hyperlink calculation would be:CopyHYPERLINK(CONCAT(""<https://www.example.com/products/>"", [product_name]), ""Product Page Link"")"
"https://lookerstudiomasterclass.com/chapter-12-parameters/128-parameter-example-google-maps-link","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.8. Parameter Example: Google Maps LinkIn this lesson, we'll dive into an exciting example that demonstrates the use of text-based parameters. We'll create a text-based parameter that allows users to input an address and generates a Google Maps link based on the entered address.Learning ObjectivesUnderstand the purpose and use of text-based parameters in Looker Studio.Create a text-based parameter with specific configurations.Use the HYPERLINK() and CONCAT() functions to generate dynamic links based on user input.Apply the concepts learned to real-world scenarios and use cases.Finalize user input and understand the importance of clicking outside the input box.Creating a Text-Based ParameterCreating a text-based parameter is simple and follows a similar process as other parameters. In this example, we'll create a parameter called address. The configuration for this parameter is as follows:Name: addressType: textDefault value: Enter your addressThe data type for the address parameter is text, and we've set it to accept any value. You could also set the text parameter to have a list of values, such as countries, cities, departments, or sales managers. You can then assign this list to a dropdown control.Using the Address ParameterWhen the user enters an address, we can use the entered text value to generate a Google Maps link. Keep in mind that you can enter any text that Google Maps can interpret, such as a famous landmark or a specific street address.Note: The entered address will not be finalized until you click outside of the input box.To create a link, you can use the HYPERLINK() function along with the CONCAT() function. In this example, we use the following formula:CopyHYPERLINK(CONCAT(""https://maps.google.com?q="", [address]), ""Google Maps Link"")This formula concatenates ""https://maps.google.com?q="" with the user-provided address and sets the title as ""Google Maps Link.""Example use case: Some users may want to create links to specific marketing campaigns by entering the campaign name. If you know your URL structure for the tool you use to manage campaigns, you can construct a link like the one demonstrated in this lesson.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.8. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/127-scope-of-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.7. Scope of ParametersIn this lesson, we'll discuss the scope of default values for parameters in Looker Studio and how to apply them in different levels of hierarchy.Learning ObjectivesUnderstand the hierarchy of parameter default values in Looker Studio.Learn how to override parameter default values at different levels: report, page, group, and chart.Identify the most appropriate level to use for various scenarios.Understanding the HierarchyThere are various levels in the hierarchy where you can apply default values for parameters. These include:Default (set during parameter creation)Report levelPage levelGroup levelChart levelThe lower levels in the hierarchy will override the higher levels.For example, let's say the default value for the parameter percent_increase is 25. When you refresh the report, you may notice it's already 30, meaning the default value has been overwritten.Overriding Default ValuesAt the Report LevelTo override the default value at the report level, go to File > Report Settings. When a default data source is set, the parameters within that data source will be listed at the bottom, and you can overwrite their default values.Example: If the default value of percent_increase is 25, you can change it to 30 at the report level.At the Page LevelYou can also override the default value at the page level. To do this, go to Current Page Settings and update the value. This will change the value for the entire page, but not affect other levels.Example: You can change the percent_increase value to 20 at the page level, while keeping the report level value at 30.At the Group LevelWhen you have grouped elements together (such as a chart and a scorecard), you can override the default value at the group level. This won't affect the page or report level settings.Example: Change the percent_increase value to 45 at the group level, leaving the page level value at 20 and the report level value at 30.At the Chart LevelFinally, you can override the default value at the chart level by scrolling down to the data tab and updating the value. This change will only apply to the specific chart and won't affect other levels.Example: You can set a percent_increase value of 50 for one chart, leaving other levels untouched.Note: If you hard code the parameter value at the chart level, it won't respond to changes at the page, report, or default level.Which Level to Use?It depends on your needs and how you want your Looker Studio report to behave. Generally, the group and chart levels are the most useful, as they allow for more granular control and enable side-by-side comparisons. Using report level settings might be confusing, as changes at the page level can override them.In some cases, you may need to hard code a parameter on one chart and allow the rest of the charts to respond to user input. This enables users to see how different parameter values compare against each other, providing valuable insights into the data.Real-life example: You may have a report showing a 40% increase in a KPI on one chart, while the rest of the charts respond to the parameter entered by the user, allowing them to see the impact of a 25% increase against the 40% increase for the whole business.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-12-parameters/126-parameters-on-charts/126-quiz","200","OK","Multiple Choice Questions:Which chart types can have reference lines added to them in Looker Studio?Pie chartsTime series and bar chartsScatter plotsGeo charts
Correct answer: Time series and bar chartsWhere do you add a reference line in Looker Studio?Data tabStyle tabTheme tabLayout tab
Correct answer: Style tabWhich type of reference line should you choose to display a parameter value on a chart?Constant valueAverage valueMaximum valueParameter
Correct answer: Parameter(Trick question) What is the default value for a new reference line in Looker Studio?01There is no default valueThe default value depends on the chart type
Correct answer: There is no default valueTrue/False Questions:Parameters can only be used with scorecards in Looker Studio.TrueFalseAdjusting a parameter value will change the position of a reference line on a chart.TrueFalseYou can only use parameters in simple calculations for charts.TrueFalseFill-in-the-blanks Questions:To create a reference line in Looker Studio, you need to click on Add Reference Line in the Style tab.When incorporating parameters into calculations for charts, you can adjust the percent increase to see the impact on the chart.Open-ended Long Answer Question (Scenario-based):You are creating a report for a client who wants to track their daily sales against a target value. They want to be able to adjust the target value and see how it affects the chart. Describe the steps you would take to create a chart with a reference line in Looker Studio to fulfill the client's requirements.Example of a correct answer:Choose a suitable chart type, such as a time series or bar chart, to display the daily sales data.Go to the Style tab of the chart configuration.Find the Reference Line section and click on Add Reference Line.Set the type of the reference line to Parameter.Choose the parameter representing the target value.Customize the appearance of the reference line as needed.Save the chart and ensure the client can adjust the target value, which will change the position of the reference line on the chart accordingly."
"https://lookerstudiomasterclass.com/chapter-12-parameters/126-parameters-on-charts","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.6. Parameters on ChartsIn this lesson, we will explore using parameters on charts in Looker Studio. Previously, we used parameters to display values on scorecards or for calculations. Now, let's dive into applying parameters to different chart types and getting creative with calculations.Learning ObjectiveUnderstand how to use parameters on different chart types in Looker Studio.Learn how to create and customize chart reference lines with parameters.Discover how to incorporate parameters into calculations for charts.Explore creative ways to use parameters and calculations in Looker Studio for various use cases.Apply the concepts learned to real-world situations and projects.Chart Reference LinesChart reference lines can be added to various chart types, such as time series or bar charts. They are helpful for indicating goals or targets that users might want to change each time they visit the report. This can be particularly useful for public-facing reports or lead magnets, where you want to assist users in visualizing their data in relation to their goals.To create a reference line, go to the Style tab, find the Reference Line section, and click Add Reference Line. Initially, there won't be any reference lines, so you need to add one. Set the type of the reference line to Parameter and choose the parameter you would like to display (e.g., daily organic session target). Now, users can change the position of this reference line on the chart as needed.Example: Daily organic session target as a reference line on a chartIncorporating Parameters in CalculationsWe can also incorporate parameters into calculations on charts, just like we did with scorecards. Let's consider an example with two lines on a chart: the blue line represents sessions directly from Google Analytics, and the green line represents adjusted sessions, which we calculate.Example calculation: sessions × (1 + (percent increase ÷ 100))In this case, the percent increase is 30, so the green line will be 30% higher than the blue line. You can adjust the percent increase to see the impact on the chart.Example: Adjusting the green line by increasing the percent increaseNow, let's explore another example to see how creative we can get with parameters and calculations. Suppose we have a target number of sessions and want to calculate the average daily difference between the actual number of sessions and the target. This average daily difference should change based on the target value.Example: Calculating average daily delta based on the targetThe calculation involves:Counting the number of days in the timeframe.Multiplying the number of days by the target (as if the target is met every day).Subtracting the total number of sessions for the timeframe.Dividing the difference by the number of days in the date range.This gives us the average daily delta from the target. Adjusting the target value will change the average daily delta accordingly.As you go through these examples, think about how you might apply these concepts to your own reports, clients, or projects. The goal is to inspire you to find creative ways to use parameters and calculations in Looker Studio.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.6. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/124-parameters-from-creation-to-visualization/124-quiz","200","OK","Multiple-choice QuestionsIn Looker Studio, what color represents parameters?a. Green
b. Blue
c. Purple
d. YellowAnswer: cWhat should you use to get user input for a parameter in Looker Studio?a. Dropdown list
b. Input box
c. Checkbox
d. Radio buttonAnswer: bHow do you link a parameter to an input box?a. Double-click the parameter
b. Drag and drop the parameter onto the input box
c. Click the parameter and press Enter
d. Right-click the parameter and select ""Link""Answer: bTo display the parameter value on a scorecard, you must:a. Drag the parameter onto the scorecard
b. Create a custom field using the parameter value
c. Set the data type to a percentage
d. Both b and cAnswer: dTrue/False QuestionsCustom fields can be used for both calculations and visualizations in Looker Studio.Answer: TrueParameters can be directly displayed on scorecards without creating a custom field.Answer: FalseLooker Studio allows users to input percentages directly for parameters.Answer: FalseFill-in-the-BlanksWhen creating a parameter in the data source, you need to specify the _______, _______, _______, and _______.Answer: name, ID, data type, rangeIn Looker Studio, dimensions have a _______ background, metrics have a _______ background, and parameters have a _______ background.Answer: green, blue, purpleOpen-ended QuestionA marketing team wants to use Looker Studio to project their revenue based on various user input percentage increases. Describe how you would set up a parameter, gather user input, and create a custom field for calculating the projected revenue.Example Answer:To project revenue based on user input percentage increases, follow these steps:Create a parameter in the data source with a name, ID, data type (whole number or decimal), and range (e.g., from -100 to 100).Use an input box control to get user input for the parameter. Link the parameter to the input box by dragging and dropping it onto the control.Create a custom field called ""Projected Revenue"" that calculates the projected revenue based on the user input percentage increase. The formula would be Revenue * (1 + (Percentage Increase / 100)), where ""Percentage Increase"" is the user input.Once the custom field is set up, you can use it in your calculations and visualizations, such as displaying the projected"
"https://lookerstudiomasterclass.com/chapter-12-parameters/124-parameters-from-creation-to-visualization","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.4. Parameters: From Creation to VisualizationIn this lesson, we'll go through an example of using a numeric parameter in Looker Studio. We'll cover creating a parameter in the data source, getting user input, and utilizing the input for calculations and visualization.Learning ObjectivesBy the end of this lesson, students should be able to:Create a parameter in the data source with a specific data type and range.Use controls to get user input for the parameter.Utilize the input in calculations and visualizations in Looker Studio.Create custom fields for calculations and visualizations.Understand the significance of different background colors in Looker Studio.Creating a ParameterFirst, let's establish a few things for this lesson:White background with black text represents live data from a data source, like Google Analytics.Purple background indicates a parameter or anything related to it.Yellow or other backgrounds indicate calculations based on the input parameters.To create a parameter in the data source, follow these steps:Head to your data source and select it.Click ""Add a parameter.""Enter the name, ID, data type, and range for the parameter.Save the parameter.Note: In Looker Studio, dimensions are green, metrics are blue, and parameters are purple.Getting User InputTo get user input for the parameter, use a control:Look for a number input box in the controls section.Place the input box on your page.Change the size and color to indicate that this is a parameter input.Link the parameter to the input box by searching for it and dragging it to the control.Now you have an input box connected to the parameter, with a default value set.Using Input in Calculations and VisualizationTo use the input in calculations, create a custom field for the parameter and define the calculation formula. For example, if you want to calculate a percentage change based on the user input, you can create a custom field called ""Percentage Change"" and use the formula:Percentage Change / 100Now you can use this custom field in your calculations, such as revenue projections for the next quarter:Revenue * (1 + (Percentage Change / 100))You can also display the parameter value directly on a scorecard by creating a custom field and setting the data type to a percentage.That's it! You've successfully created a parameter, gathered user input, and used the input for calculations and visualization in Looker Studio. This can be a powerful tool for business owners or marketers to make projections based on historical data and user input.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.4. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/123-properties-of-parameters/123-quiz","200","OK","1. Which of the following is NOT a property of a parameter in Looker Studio?a. Name
b. Type
c. Color
d. Default ValueCorrect answer: c. Color2. Where do you create and define user parameters in Looker Studio?a. Data source
b. Report canvas
c. Controls
d. ChartsCorrect answer: a. Data source3. What is the purpose of controls in Looker Studio?a. To visualize data
b. To perform calculations
c. To receive user input for parameters
d. To create dynamic queriesCorrect answer: c. To receive user input for parameters4. Which of these types is NOT a valid parameter type in Looker Studio?a. Text-based
b. Numeric
c. Boolean
d. Image-basedCorrect answer: d. Image-based5. True or False: Parameters are part of data modeling and must be defined within the data source.Correct answer: True6. True or False: You can use a parameter's value directly in a chart without performing any calculations.Correct answer: True7. True or False: Parameters cannot have default values.Correct answer: False8. In Looker Studio, a parameter's allowed values can be restricted to specific numbers, such as 10, 20, 30, 40, and 50. This feature is known as the parameter's __________.Correct answer: range9. The parameter type that represents true or false values is called a __________ parameter.Correct answer: boolean10. (Scenario-based, open-ended) You have an e-commerce dataset, and you want to allow users to filter the revenue data based on a specific product category. Describe how you would create and use a parameter in Looker Studio to achieve this.Example of a correct answer:First, create a text-based parameter within the data source, defining its name, allowed values (the product categories), and default value. Next, use a drop-down list control on the report canvas to receive user input for the parameter. Then, incorporate the parameter into a dynamic query that filters the revenue data based on the selected product category. This way, users can interactively choose a category and see the corresponding revenue data in the report."
"https://lookerstudiomasterclass.com/chapter-12-parameters/123-properties-of-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.3. Properties of ParametersParameters are an essential part of Looker Studio that make your reports interactive and dynamic. Let's explore the properties of parameters and how they can be utilized effectively.Learning ObjectivesUnderstand the key properties of parameters in Looker Studio.Learn how to create and define user parameters within a data source.Utilize controls to receive user input for parameters.Implement parameters in different use cases, such as calculations and dynamic queries.Create more interactive and dynamic reports using parameters.The Anatomy of a ParameterThere are several key properties that define a parameter:Name: Just like any other field, parameters have names. These are usually user-facing so that users can easily identify them.Type: Parameters can be of different types, such as text-based, numeric (decimal or whole), or boolean (true/false).Range: For each parameter, you can define a range to limit the input. This acts as validation, ensuring that users only input values within a specified range.Allowed Values: In some cases, you may want to restrict the parameter input to specific values, such as 10, 20, 30, 40, or 50. This can be useful for custom formulas or specific use cases.Default Value: Parameters can have default values that are set when the report loads, before users have a chance to input their own values.Creating and Using ParametersTo create a user parameter, you first need to define the parameter within the data source. Parameters are part of data modeling, and they must be defined along with their type, allowed values, and default value.Once the parameter is defined, you need a way to allow users to input values. This is where controls come in. Controls, like input boxes, enable users to provide values for the parameters. These values can be used in various ways:Display the value directly on a chartIncorporate it into calculationsUse it in a dynamic BigQuery custom queryExample: Let's say you have an e-commerce dataset and you want to allow users to filter the revenue data based on a specific date range. You could create a date parameter and use a date range control to receive the user input. Then, you could use this parameter in a dynamic query to display the revenue data for the selected date range.Now that you have a better understanding of parameters and their properties, you can start creating more interactive and dynamic reports in Looker Studio.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.3. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/122-use-cases-for-parameters/122-quiz","200","OK","1. Which of the following is NOT a use case for parameters in Looker Studio? (Multiple choice)A. User-provided goals and targets
B. Custom calculations with user-provided values
C. Forecasting and projections
D. Uploading imagesCorrect answer: D2. What can be done with parameters in Looker Studio that couldn't be done before their introduction? (Multiple choice)A. Meeting with clients to discuss their goals
B. Allowing clients to change their input values at any time
C. Manually adjusting the report for each client
D. Hardcoding values into reportsCorrect answer: B3. True or False: Parameters can only be used with BigQuery datasets.False4. True or False: Parameters can enable users to change the dimensions and metrics applied to charts.True5. Which of the following is a benefit of using parameters for custom calculations? (Multiple choice)A. Reducing the need for manual data entry
B. Allowing users to input their own values
C. Automatically updating the report based on new data
D. Connecting to various data sources without codingCorrect answer: B6. True or False: Parameters can be used to create dynamic queries with BigQuery.True7. In Looker Studio, to create a mini tool for forecasting different scenarios, you can use ______.A. filters
B. data sources
C. parameters
D. dimensionsCorrect answer: C8. When using parameters for custom calculations, some of the input values may come from _______, while others might be provided by the user.A. hardcoded values
B. live data sources
C. charts
D. A and BCorrect answer: D9. (Scenario-based) Your client wants to explore different scenarios by changing their marketing budget to see how it impacts their projected revenue. What feature of Looker Studio can help them achieve this goal? (Open-ended question)Example of a correct answer: Parameters can be used to create a mini tool that allows the client to input different marketing budget values and explore different scenarios. By adjusting the input values, the client can forecast the potential impact on their projected revenue based on various budget scenarios.10. (Scenario-based) You are creating a report for a client who wants to compare their monthly sales against a sales target they provide. How can you use parameters to meet their needs while minimizing manual adjustments to the report? (Multiple choice)A. Create a control on the page for the client to input their sales target
B. Use a filter to allow the client to select a predefined sales target
C. Write a custom field that incorporates the client's input value as a parameter
D. Connect to the client's data source and automatically retrieve their sales targetCorrect answer: A and C"
"https://lookerstudiomasterclass.com/chapter-12-parameters/122-use-cases-for-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.2. Use Cases for ParametersIn this lesson, we will discuss some common scenarios where parameters can be useful. As you go through these examples, think about your own use cases as well.Learning ObjectivesUnderstand the benefits and use cases of parameters in Looker Studio.Learn how to incorporate user-provided goals and targets into reports using parameters.Explore the use of parameters for custom calculations, forecasting, and projections.Discover how parameters can enable dynamic metrics and dimensions in charts.Gain awareness of how parameters can be used for dynamic queries with BigQuery.User-Provided Goals and TargetsBefore parameters were introduced, setting goals and targets for reports was a more complicated process. It often required meetings with clients and manually hardcoding their goals and targets into the reports. However, parameters have made this process more efficient.Now, clients can provide their goals and targets directly through a control on the page. This allows them to change their input values at any time without needing to manually adjust the report.Custom Calculations with User-Provided ValuesMany businesses have unique ways of calculating their KPIs and other important metrics. Some of the input for these calculations may be hardcoded or come from live data sources, while other values might be provided by the user at the time of viewing the report. By incorporating parameters into custom fields, users can easily input their values to perform these calculations.Forecasting and ProjectionsParameters can also be used to create mini tools that help users forecast different scenarios. By entering different input values, clients can explore ""what if"" situations and make projections based on various scenarios.Dynamic Metrics and Dimensions in ChartsParameters can be used to allow users to change the dimensions and metrics applied to charts. This functionality goes beyond optional metrics and provides users with greater flexibility when interacting with their data.Custom and Connected CalculatorsBy using parameters, Looker Studio allows you to easily connect to various data sources, apply custom functions, and get user input to generate outputs in various formats. This powerful feature eliminates the need for coding and provides an efficient way to create custom tools.Dynamic Queries with BigQueryFor those using BigQuery, parameters can be used to create dynamic queries against your dataset. Although we won't dive deep into this topic in this lesson, it's important to know that this functionality is available when working with BigQuery and Looker Studio.To better understand these concepts and see examples, explore resources such as the Looker Studio documentation and community forums.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.2. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1218-running-calculations/1218-quiz","200","OK","Multiple-choice questions:What are the two types of calculations in Looker Studio?
a. Cumulative and comparative
b. Comparison and running
c. Running and cumulative
d. Comparative and runningCorrect answer: bRunning calculations can be applied to which of the following visualization types?
a. Scorecards
b. Tables
c. Pie charts
d. Time seriesCorrect answer: b, dWhat is the main difference between comparison and running calculations?
a. Comparison calculations can be used in further calculations, while running calculations cannot.
b. Comparison calculations are only for display purposes, while running calculations can be used in further calculations.
c. Comparison calculations compare a value with the total, maximum, or minimum, while running calculations perform cumulative calculations.
d. Running calculations compare a value with the total, maximum, or minimum, while comparison calculations perform cumulative calculations.Correct answer: cWhich of the following is NOT a type of running calculation?
a. Running sum
b. Running max
c. Running median
d. Running deltaCorrect answer: cTrue/false questions:Running calculations can be used in further calculations.TrueFalseCorrect answer: FalseSorting data does not affect the way running calculations are displayed.TrueFalseCorrect answer: FalseRunning calculations can only be applied to tables.TrueFalseCorrect answer: FalseFill-in-the-blanks:The ____ calculation shows the difference between the current value and the one before it.Correct answer: Running deltaComparison calculations compare a value with the ____, ____, or ____.Correct answer: total, maximum, minimumOpen-ended long answer question:You are analyzing website traffic data in Looker Studio using a table visualization with dates in ascending order. Describe a real-world scenario where running calculations can provide valuable insights and explain which running calculation you would choose and why.Example of a correct answer:Suppose you are analyzing the number of daily new users on your website. You want to track the cumulative growth of new users and understand how quickly the user base is growing. In this case, you would choose the running sum calculation to display the cumulative total of new users by date. This would help you identify trends in user growth, spot any irregularities, and assess the overall performance of your user acquisition efforts."
"https://lookerstudiomasterclass.com/chapter-12-parameters/1218-running-calculations","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.18. Running CalculationsIn this lesson, we'll dive into running calculations in Looker Studio. These calculations can be applied to tables and time series to provide useful insights into your data.Learning objectivesUnderstand the difference between comparison and running calculations in Looker Studio.Learn how to apply running calculations to tables and time series.Explore various types of running calculations and their use cases.Discover the impact of sorting data on running calculations.Comparison & Running CalculationsIn Looker Studio, there are two types of calculations: comparison calculations and running calculations.Main concepts and topicsIn this lesson, you will learn about comparison and running calculations in Looker Studio. Comparison calculations compare a value with the total, maximum, or minimum, while running calculations perform cumulative calculations, such as adding values together over time.Running calculations can be applied to tables and time series to provide deeper insights into data trends. However, running calculations are only shown and cannot be used in further calculations. Sorting data can also impact the way running calculations are displayed.Comparison CalculationsComparison calculations compare the value with the total, maximum, or minimum of the same dataset. For example, you can apply a percentage of the total calculation to see what percentage a certain value represents of the total. This can be helpful in understanding how different values relate to the whole dataset.Running Calculations in Looker StudioRunning calculations, on the other hand, allow you to perform cumulative calculations, such as adding values together over time. For example, you can calculate the running total of new users by date. This can be useful in identifying trends and understanding how metrics change over time.Running Sum Calculations in Looker StudioThis calculation adds up the values cumulatively, providing a running total. A running sum is a mathematical operation that calculates the cumulative total of a set of numbers as they are being processed. In the context of data analysis, this can be a powerful tool to analyze trends and patterns over time or across categories.For example, a sales team may use a running sum to track their cumulative sales revenue throughout the month, or an eCommerce site may apply a running sum to monitor the total number of items sold across various product categories.Running Sum Example with TablesLet's consider a simple table representing the daily sales revenue for a retail store:DateSales Revenue2023-05-0110002023-05-0212002023-05-0315002023-05-049002023-05-051800Suppose you want to calculate the running sum of daily sales revenue to track the cumulative sales over time. After applying the calculation, your table will look like this:DateSales RevenueCumulative Sales Revenue (Running Sum)2023-05-01100010002023-05-02120022002023-05-03150037002023-05-0490046002023-05-0518006400The running sum of daily sales revenue is calculated by adding the sales revenue for each day, with the sum growing as new days are included.Running Min and Max Calculations in Looker StudioThese calculations display the minimum, maximum, or count of values as you go through the data. Running min and running max calculations are similar to running sums, but instead of computing a cumulative total, they determine the minimum or maximum value in a sequence up to a given point. These calculations can be invaluable for identifying peaks and troughs or for tracking the highest and lowest values in a dataset.Running Min and Max Example with TablesLet's illustrate running min and max calculations using a simple table representing daily sales data:DateSales2023-05-011002023-05-022502023-05-031502023-05-043002023-05-05200After applying running min and max calculations, your table will look like this:DateSalesRunning Min SalesRunning Max Sales2023-05-011001001002023-05-022501002502023-05-031501002502023-05-043001003002023-05-05200100300As you can see, the running min and max values update as new rows are added to the dataset, reflecting the lowest and highest sales values encountered up to each date.Running min and max calculations in Looker Studio can help you uncover trends and gain a deeper understanding of your data, making it easier to identify areas of success or improvement.Running Average Calculations in Looker StudioThe Concept of Running AverageA running average, also known as a cumulative average, is a calculation that determines the average value of a sequence up to a given point. This can be particularly useful for smoothing out fluctuations in data and identifying trends over time.Running Average Example with TablesLet's consider a simple table representing the daily number of website visitors:DateVisitors2023-05-011002023-05-021502023-05-032002023-05-042502023-05-05300Suppose you want to calculate the running average of daily visitors. After applying a running average and a running sum calculation, your table will look like this:DateVisitorsCumulative VisitorsRunning Average of Visitors2023-05-011001001002023-05-021502501252023-05-032004501502023-05-042507001752023-05-053001000200The running average of daily visitors is calculated by dividing the cumulative number of visitors by the number of values, providing a clearer view of the overall trend in website traffic.Running Delta Calculations in Looker StudioRunning Delta: This calculation displays the difference between the current value and the one before it.The Concept of Running DeltaA running delta is a calculation that computes the difference between consecutive values in a dataset. This can help you analyze how values change from one period to another and detect trends or anomalies in your data.Running Delta Example with TablesLet's consider a simple table representing the daily number of orders for an online store:DateOrders2023-05-01502023-05-02752023-05-03902023-05-04802023-05-05120Suppose you want to calculate the running delta of daily orders to analyze how the number of orders changes from day to day. After applying a running delta calculation, your table will look like this:DateOrdersPrevious Day OrdersRunning Delta of Orders2023-05-0150--2023-05-027550252023-05-039075152023-05-048090-102023-05-051208040The running delta of daily orders is calculated by subtracting the previous day's orders from the current day's orders, revealing the day-to-day fluctuations in order volume.💡Note: The running calculations are only shown and cannot be used in further calculations. The actual value remains unchanged.Sorting DataSorting your data can impact the way running calculations are displayed. For example, sorting data in ascending order will show running calculations differently than when sorted in descending order. Keep this in mind when analyzing your data.In this lesson, you've learned about running calculations in Looker Studio and how they can be applied to tables and time series to provide deeper insights into your data. Remember that running calculations are only for display purposes and cannot be used in further calculations.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.18. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1217-parameter-example-the-journey-framework","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.17. Parameter Example: The Journey FrameworkLet's dive into a real-life example of how parameters can be used effectively in Looker Studio. This example comes from JJ Reynolds, a participant in a previous live cohort, who has used parameters to streamline his business.The Business CaseJJ runs paid traffic campaigns, specifically Facebook ads, for various businesses. He designed a public-facing Looker Studio report that he can share with potential clients to showcase the effectiveness of his campaigns.Interactive Report ComponentsThe report includes the following customizable inputs:Number of monthly visitors: The prospect can enter the number of visitors their website receives each month.Expected revenue per sale: The prospect can input the amount they expect to make from each sale, which might be the price of their product.Confidence level: The prospect can indicate their level of confidence in their product's appeal, which adjusts some numbers in the funnel calculation.Cost per landing page view: The prospect can enter how much they're willing to pay for each landing page view, based on their experience or expectations.The report then processes these inputs, simulating the flow of traffic through the funnel and ultimately making a purchase on the website.Conditional Formatting and QualificationUsing conditional formatting, the report highlights whether the prospect qualifies to work with JJ. If their expected return on investment (ROI) meets the criteria, the report encourages them to contact JJ to discuss further. This feature helps JJ connect with more qualified leads, increasing the likelihood of closing deals.For example, if a prospect is paying $2 per landing page view for a $7 product, something may be off in their calculations. In this case, the report would flag the issue, allowing the prospect to adjust their inputs and determine if working with JJ would be a good fit.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1216-parameters-in-dynamic-sql-for-bigquery/1216-quiz","200","OK","1. What is a dynamic query in the context of BigQuery?A. A pre-defined query with fixed parameters.
B. A query that can be modified by the user in real-time.
C. A custom SQL query that can involve joining multiple tables, filtering data, and more.
D. A query that updates itself automatically based on new data.Correct answer: C2. In Looker Studio, how do parameters affect the visualization of data?A. Parameters have no impact on the visualization.
B. Parameters can be used to filter the data based on specific conditions.
C. Parameters allow users to explore data and gain insights on-the-fly.
D. Both B and C.Correct answer: D3. What is the primary benefit of using parameters in dynamic queries?A. To reduce the complexity of the SQL code.
B. To enable users to explore data and gain insights interactively.
C. To automate the data extraction process.
D. To increase the speed of data retrieval.Correct answer: B4. True or False: Parameters can only be used with BigQuery data sources.Correct answer: False5. True or False: In Looker Studio, you can define parameters and obtain their values from the user.Correct answer: True6. True or False: Looker Studio can reverse geocode latitude and longitude values to obtain an address.Correct answer: False7. When using geographic functions in SQL, the purpose is to calculate the ________ of each record to a given point.Correct answer: distance8. Dynamic queries in Looker Studio can be written against your whole ________ in BigQuery.Correct answer: project9. (Scenario-based, high difficulty) A real estate company wants to use Looker Studio to analyze the population density around potential sites for new apartment buildings. They need to be able to input the latitude and longitude of each site and a search radius. How would you use parameters and dynamic queries to achieve this?Correct answer (example):First, create a custom SQL query in Looker Studio that uses the input latitude, longitude, and search radius as parameters. The query should calculate the distance between each record in the database and the given coordinates using geographic functions. It should then return only the records that fall within the specified radius. Finally, create a visualization in Looker Studio that displays the resulting data, allowing the user to interactively explore population density around potential sites.10. (Open-ended, scenario-based, high difficulty) Your client wants to analyze the number of schools within a certain distance of a proposed commercial property. Explain how you would create a Looker Studio visualization using parameters and dynamic queries to provide this information.Correct answer (example):To create a Looker Studio visualization for this scenario, follow these steps:Obtain the latitude and longitude of the proposed commercial property using an external mapping tool.Create a custom SQL query that takes the latitude, longitude, and search distance"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1216-parameters-in-dynamic-sql-for-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.16. Parameters in Dynamic SQL for BigQueryUsing Parameters with BigQueryIn this lesson, we'll explore using parameters in dynamic SQL queries for BigQuery, and how they can be utilized in Looker Studio to create interactive visualizations. We'll also discuss a practical example of using these parameters to help businesses explore potential locations for their stores.Learning ObjectivesUnderstand the use of parameters in dynamic SQL queries for BigQuery.Learn how to incorporate parameters in Looker Studio visualizations.Apply the concept of dynamic queries and parameters in a real-life business scenario.Main Concepts and TopicsDynamic queries: Custom SQL queries that can involve joining multiple tables, filtering data, and more.Parameters: User-defined values that can be incorporated into dynamic queries to generate custom results.BigQuery data source: A Google data warehouse that can be connected to Looker Studio.Geographic functions in SQL: Functions that allow calculating distances and spatial relationships between geographic coordinates.Dynamic Queries and ParametersWhen using a BigQuery data source, you can connect to any table in your dataset or write a custom query against your whole project. This custom query may involve joining multiple tables, filtering data, and more. In these dynamic queries, we can define parameters and obtain their values from the user.These user inputs dynamically change the values in the SQL statement, such as the latitude and longitude in our example. The query then runs against the BigQuery project and extracts the resulting data into Looker Studio.Real-Life Example: Exploring Store LocationsImagine a business wants to open a new store and needs information about the population surrounding a specific location.First, we obtain the latitude and longitude of the desired location using an external mapping tool, such as Google Maps. In this example, we have the latitude of 41 and the longitude of 73. The client is interested in analyzing the population within a 5-mile radius of this point.These three values (latitude, longitude, and distance) will be passed to the custom query, which will then calculate the distance of each record to the given point using geographic functions in SQL.Upon completion, Looker Studio will display the results, such as the number of people living within the 5-mile radius of the chosen location. Without dynamic queries, creating such an interactive interface would not be possible. Parameters enable users to explore data and gain insights on-the-fly, making them a powerful tool in Looker Studio.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.16. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1215-app-view/1215-quiz","200","OK","1. What is the primary purpose of using the app view in Looker Studio? (multiple choice)
a. To create white-labeled applications
b. To add additional navigation options
c. To enable scrolling within the report
d. To edit the report as an editorCorrect answer: a2. Which of the following is NOT a limitation of the app view in Looker Studio? (multiple choice)
a. No scrolling within the app view
b. Navigation is not loaded by default
c. No support for embedding within iframes
d. The Looker Studio header is removedCorrect answer: c3. What is the proper way to switch from the app view to the regular report view? (fill-in-the-blank)
Remove the ""__"" at the end of the report URL.Correct answer: /app4. True or False: Embedding the report within another page is a workaround for enabling scrolling in the app view.
True5. True or False: The app view automatically includes internal navigation.
False6. In the app view, can knowledgeable users still navigate between pages using keyboard arrow keys? (multiple choice)
a. Yes, but it's not immediately evident
b. No, they cannot navigate at all
c. Yes, but only when using a custom domain
d. No, unless they switch back to the regular report viewCorrect answer: a7. You created a Looker Studio application in the app view and want to include internal navigation. What should you do? (multiple choice)
a. Add ""/app"" at the end of the URL
b. Include internal navigation deliberately within the app view
c. Embed the report within another page
d. Switch to the regular report viewCorrect answer: b8. What happens if you add ""/app"" at the end of the report URL? (fill-in-the-blank)
The report switches to the ""__.""Correct answer: app view9. True or False: The app view can be used for creating mini tools for forecasting and lead magnets in sales conversations.
True10. Your company wants to create a white-labeled calculator using Looker Studio to share with clients during sales calls. Describe how you would use the app view and any necessary workarounds to achieve this goal. (open-ended)Example correct answer:To create a white-labeled calculator using Looker Studio, I would first design the calculator within Looker Studio using the app view feature. This would remove the Looker Studio interface, navigation, and header, making it difficult for clients to identify that the application is built upon Looker Studio. I would deliberately include internal navigation within the app view to ensure that users can navigate between different sections of the calculator."
"https://lookerstudiomasterclass.com/chapter-12-parameters/1215-app-view","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.15. App ViewApp view is a secret feature in Looker Studio that allows you to create a white-labeled application. This can be particularly useful when designing mini tools for forecasting or when sharing lead magnets in sales conversations with clients. By using the app view, you remove the Looker Studio interface, navigation, and header, making it difficult for users to identify that the application is built upon Looker Studio. This is particularly effective when embedding the app view in an iframe within a custom domain.Learning ObjectivesUnderstand the purpose and benefits of using the app view in Looker Studio.Identify the limitations of the app view and learn workarounds for common issues.Learn how to switch between the app view and the regular report view.Limitations and WorkaroundsThere are some limitations to using the app view. One significant limitation is that you cannot scroll down within the app view. To work around this, you need to ensure that your Looker Studio application fits within the page. Another limitation is that the app view doesn't load the navigation by default. However, you can include internal navigation deliberately, and it will function as expected.If you want to force scrolling within the app view, you can try the following workaround:Embed the report and get the embed code.Adjust the height of the embed to match the exact pixel value of your report height.Embed the report within another page. This way, Looker Studio believes that the viewport is as long as the report.Remember that knowledgeable users might still navigate between pages using keyboard arrow keys, although this isn't immediately evident.To switch between the app view and the regular report view, add or remove ""/app"" at the end of the report URL.By using the app view in Looker Studio, you can create white-labeled applications and calculators, perfect for client calls or branded assets. Just ensure that you consider the limitations and workarounds mentioned above to make the most of this powerful feature.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.15. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1214-parameter-example-projection-custom-calculators","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.14. Parameter Example: Projection & Custom CalculatorsThe Magic of Custom CalculatorsSometimes, the simplest tools can be the most effective. This lesson covers the power of custom calculators and how they can transform your data analysis. With Looker Studio, you can create projection and forecasting tools that allow users to input their own values and see the resulting calculations, all without writing a single line of code.In this example, we're connecting to a live data source from an API. Looker Studio can connect to a vast range of tools, making it incredibly versatile.Learning ObjectivesUnderstand the importance and utility of custom calculators in Looker Studio.Learn how to create projection and forecasting tools with user input.Explore various use cases for custom calculators, including internal analysis, client-facing conversations, and lead magnets.Main Concepts and TopicsCustom calculators: Powerful tools in Looker Studio that enable users to create interactive, dynamic experiences.Projections and forecasting: Custom calculators can be used to project potential outcomes based on user input, helping inform strategic decisions.Use cases: Custom calculators can be used internally, shared with clients, or offered as lead magnets to attract prospective clients.Strategy Projection: A Conversation StarterCustom calculators can be used to facilitate discussions with clients, marketing managers, or stakeholders. They can help you answer ""what if"" questions and explore the potential impacts of different strategies. For instance, you can examine how increasing website sessions, conversion rates, or average order value might affect overall profits.These conversations can help identify the best allocation of resources, whether it's focusing on conversion rate optimization, bundling strategies, increasing traffic, or a combination of these approaches.Let's imagine a scenario where a business has a net profit of $88,000 last month. By using custom calculators, you can explore different strategies and their potential impacts on profits:What if the business adds 10,000 more user sessions?What if the business invests in increasing the eCommerce conversion rate by 20%?What if the business tries bundling products to increase average order value by 20%?What if the business reduces costs by buying in bulk, increasing the profit margin by 10%?By adjusting these variables, the business can forecast potential profits and make informed decisions about where to focus their resources.Multiple Uses for Custom CalculatorsCustom calculators can be used in various ways, depending on your goals and target audience:Internal: Use them to analyze data and make strategic decisions within your organization.Client-facing: Share projections with clients to help them understand the potential value of your services.Lead magnet: Offer custom calculators as a valuable resource for prospective clients, encouraging them to engage with your brand.As you can see, custom calculators are a powerful tool in Looker Studio. By incorporating them into your data analysis, you can create interactive, dynamic experiences that help drive better decision-making.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.14. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1213-parameter-example-dynamic-filter-controls/1213-quiz","200","OK","Multiple Choice QuestionsWhat is the primary purpose of dynamic filter controls in Looker Studio?a. To provide fixed dimensions for charts and tables
b. To allow users to filter data based on their input
c. To create static dropdown menus
d. To limit user interaction with the dataAnswer: bWhat function is commonly used to create dynamic filter controls?a. SUM
b. COUNT
c. IF
d. CASEAnswer: dWhich component can have dynamic dimensions in Looker Studio?a. Charts
b. Tables
c. Dropdown menus
d. All of the aboveAnswer: dWhat is an exploration interface in Looker Studio?a. A set of static components that display data
b. A comprehensive interface that allows users to interact with data
c. A simple interface with limited user interaction
d. A fixed set of dimensions applied to charts and tablesAnswer: bTrue/False QuestionsDynamic filter controls always have a fixed dimension.Answer: FalseDynamic dimensions can only be applied to charts.Answer: FalseA comprehensive exploration interface in Looker Studio can be as complex or simple as desired.Answer: TrueFill-in-the-BlanksThe result of a _______ function is often used as the dimension for dynamic filter controls.Answer: caseDynamic filter controls enable users to interact with the data in ways that best suit their _______.Answer: needsOpen-Ended Long Answer QuestionImagine you are designing a Looker Studio dashboard for a marketing team. Describe an example of a dynamic filter control that you could create and explain how it would benefit the team.Example Answer:I would create a dynamic filter control that allows the marketing team to filter their data by campaign, marketing channel, or geographic region. By using a case function, the control would adjust its dimensions based on the user's selection.This dynamic filter control would benefit the marketing team by allowing them to easily analyze their data based on different criteria, enabling them to gain insights on campaign performance, channel effectiveness, and regional trends. This would help them make more informed decisions about their marketing strategies and optimize their efforts for better results."
"https://lookerstudiomasterclass.com/chapter-12-parameters/1213-parameter-example-dynamic-filter-controls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.13. Parameter Example: Dynamic Filter ControlsNow that we've made everything dynamic, let's continue with creating more dynamic elements. We'll quickly cover dynamic filter controls and then move on to the other pages in our Looker Studio project.Learning ObjectivesAfter completing this lesson, students should be able to:Understand the concept of dynamic filter controls in Looker Studio.Create dynamic controls and dropdown menus using user prompts and CASE function.Apply dynamic dimensions to charts, tables, and other components in Looker Studio.Design a comprehensive exploration interface using dynamic elements.Recognize the benefits of using dynamic filter controls for a personalized data exploration experience.Main Concepts and TopicsIn this lesson, we covered:Dynamic filter controls: Controls that adjust based on user input, allowing for flexible data filtering.CASE function: Functions that help create more dynamic filter controls by applying the result of a condition.Dynamic dimensions: Dimensions that can change for components like charts, tables, and dropdown menus, allowing users to interact with the data more effectively.Exploration interface: A comprehensive interface in Looker Studio that allows viewers to interact with data in ways that best suit their needs.Dynamic Controls and User InteractionComponents like controls can also be made dynamic by user prompts. In a previous lesson, we discussed advanced filter controls, which allow users to filter data based on their input. For example, if a user types ""par"" in the source filter control, it filters the data to only show sources starting with ""partners.""However, this advanced control doesn't directly apply the ""source"" dimension. Instead, it applies the result of a case function to create a more dynamic filter control.Take this scenario: there's no ""medium"" starting with ""palm,"" but if the user types ""C"" or ""CP,"" the filter control adjusts accordingly. This shows that we can not only change the dimensions of charts and tables but also the dimensions assigned to a control.Dynamic Dropdown MenusA dropdown menu can also have dynamic dimensions. For example, if the dropdown menu is set to display ""medium"" values and you change it to ""countries,"" the menu will show a list of countries instead. The dropdown doesn't have a fixed dimension—rather, it uses the result of the case function as its dimension.With these dynamic filter controls and dropdown menus, you can create a comprehensive exploration interface in Looker Studio, making it as complex or simple as desired. This flexibility enables users to interact with the data in ways that best suit their needs, providing a more personalized and powerful data analysis experience.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.13. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1212-parameter-example-dynamic-comparison/1212-quiz","200","OK","Multiple-Choice QuestionsWhat is the main purpose of using dynamic comparisons in Looker Studio?a. To create static visualizations
b. To allow users to interact with data
c. To visualize simple relationships between two variables
d. To create separate visualizations for each comparisonAnswer: bWhat function should you use to make the dynamic comparison interactive?a. CONCAT
b. DIVIDE
c. SUM
d. AVERAGEAnswer: aWhich of the following is NOT a key concept in creating dynamic comparisons?a. Parameters
b. Case functions
c. CONCAT function
d. Linear regressionAnswer: dIn a dynamic comparison, what should the ""Transaction Ratio"" column calculation consist of?a. Adding the value of transactions to the output of the case function
b. Subtracting the output of the case function from the value of transactions
c. Dividing the value of transactions by the output of the case function
d. Multiplying the value of transactions by the output of the case functionAnswer: cTrue/False QuestionsDynamic comparisons in Looker Studio can only be used for e-commerce data.Answer: FalseThe CONCAT function is essential for creating dynamic comparisons in Looker Studio.Answer: TrueIt's not possible to use dynamic comparisons with different metrics and dimensions in Looker Studio.Answer: FalseFill-in-the-BlanksIn Looker Studio, the dynamic comparison feature can be created by dividing the value of transactions by the output of the _______ function.Answer: caseTo create a dynamic comparison in Looker Studio, add another column to the table called ""_________ Ratio.""Answer: TransactionOpen-Ended Long Answer QuestionYou are a data analyst at a marketing agency and are asked to create a dynamic comparison in Looker Studio to help your client better understand their customer engagement metrics. Describe how you would set up this dynamic comparison and provide an example of how it could be applied to real-world data.Example Answer:To create a dynamic comparison in Looker Studio for customer engagement metrics, I would begin by identifying the key metrics and dimensions that are relevant to the client's goals, such as page views, sessions, new users, and bounce rate. Next, I would create a table with the desired breakdown and table metric, and add a column called ""Engagement Ratio"" to represent the relationship between the chosen metric and dimension.To make the comparison dynamic, I would use parameters and case functions to allow users to select different metrics and dimensions in the table. I would also use the CONCAT function to combine the engagement ratio with the value of the table metric, providing an interactive experience for the user."
"https://lookerstudiomasterclass.com/chapter-12-parameters/1212-parameter-example-dynamic-comparison","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.12. Parameter Example: Dynamic ComparisonLet's take your data visualization skills to the next level with dynamic comparisons. Instead of simply allowing users to select a metric or dimension, we'll use parameters to impact the formula itself.For instance, in Google Analytics, e-commerce conversion rates are typically calculated on a session basis. However, some prefer to calculate this metric on a user basis (number of transactions divided by the number of users). We can create a similar dynamic comparison using Looker Studio.Learning ObjectivesUnderstand the concept of dynamic comparison in Looker Studio.Learn how to create a table with dynamic comparison calculations.Implement interactive features to enhance the user experience.Apply dynamic comparison to real-world situations.Master the use of parameters and case functions in creating dynamic comparisons.Main Concepts and TopicsIn this lesson, you will learn about dynamic comparisons in Looker Studio, which allows for more flexibility and interactivity in data visualizations. Key topics include:Creating a table with breakdown and table metricAdding a ""Transaction Ratio"" columnUsing parameters and case functions for dynamic calculationsImplementing CONCAT() function for interactivityApplying dynamic comparisons to real-world examplesThe Dynamic Comparison SetupStart by creating a table with the desired breakdown and table metric. In this case, we'll be using transactions per session. The calculation will be based on the chosen metric and dimension in the table. For example, if you change sessions to page views, you'll have transactions by page views. If you change it to users, you'll have transactions by new users.To create this dynamic comparison, add another column to the table called ""Transaction Ratio."" You won't be able to see the title, as it will be overlaid with another table. The calculation itself is simple: divide the value of transactions by the output of your case function. This creates a dynamic value based on the chosen metric or dimension.Creating an Interactive ExperienceTo make this dynamic comparison interactive, use the CONCAT() function to combine the transaction ratio with the value of the table metric. This will come directly from the parameter, allowing users to explore different metrics and dimensions at their convenience.For example, imagine you're analyzing an e-commerce store's data. You could use this dynamic comparison feature to explore transactions by session, users, or page views, providing valuable insights for your marketing strategy.Using dynamic comparisons in Looker Studio can greatly enhance your data visualizations by offering more flexibility and interactivity for users. Master this skill, and you'll be able to create even more powerful data-driven insights for your organization.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.12. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1211-parameter-example-dynamic-metric/1211-quiz","200","OK","1. What is the main purpose of using dynamic metrics in Looker Studio? (Choose one)a) To limit user interaction with data.
b) To provide users with the ability to choose the metrics they want to see for their data.
c) To create static metrics that cannot be changed.
d) To hide metrics from users.Answer: b)2. Which function is used to create dynamic metrics? (Choose one)a) SUM
b) COUNT
c) CASE
d) AVGAnswer: c)3. What is the main difference between optional metrics and dynamic metrics? (Choose one)a) Optional metrics are more interactive than dynamic metrics.
b) Optional metrics are hidden, while dynamic metrics are more visible and user-friendly.
c) Dynamic metrics cannot be changed by users.
d) Optional metrics cannot be applied to real-world scenarios.Answer: b)4. When should you use optional metrics instead of dynamic metrics? (Choose one)a) When you want to limit user interaction with data.
b) When you want to create a more sophisticated user interface.
c) When you want to provide a more hidden way for users to choose metrics.
d) When you want to create static metrics.Answer: c)5. True or False: Dynamic metrics can only be applied to dimensions.Answer: False6. True or False: Creating dynamic metrics requires the use of parameters with text and available values.Answer: True7. True or False: Dynamic metrics cannot be applied to real-world data modeling scenarios.Answer: False8. Fill in the blank: Dynamic metrics are created using a combination of ________ functions and _________.Answer: case, parameters9. Fill in the blank: To create a more visible and user-friendly experience, use ________ metrics instead of optional metrics.Answer: dynamic10. A company wants to allow their marketing team to view various metrics, such as clicks, impressions, and conversions for their ad campaigns. How would you implement dynamic metrics in Looker Studio to achieve this goal?Example answer: To implement dynamic metrics in Looker Studio for this scenario, create a parameter with text and available values for clicks, impressions, and conversions. Apply a case function to the table metrics to display the chosen metric based on the user's selection. This will allow the marketing team to choose the metric they want to see and apply it to their data."
"https://lookerstudiomasterclass.com/chapter-12-parameters/1211-parameter-example-dynamic-metric","200","OK","12.11. Parameter Example: Dynamic MetricLearning ObjectivesMain Concepts and TopicsDynamic Metrics in TablesOptional Metrics vs. Dynamic Metrics12.11. Parameter Example: Dynamic MetricIn this lesson, we'll explore how to create dynamic metrics using the same methodology as we did for dimensions. This will allow users to choose the metric they want to see for a particular dimension, providing a more versatile and customized experience.Learning ObjectivesUnderstand the concept of dynamic metrics and their benefits in Looker Studio.Learn how to create dynamic metrics using case functions and parameters.Differentiate between optional metrics and dynamic metrics.Create interactive user interfaces to display dynamic metrics in tables.Apply dynamic metrics to real-world data modeling scenarios.Main Concepts and TopicsDynamic metrics: Metrics that can be changed by users to customize their data exploration experience.Case functions: Used to create dynamic metrics by applying conditions to table metrics.Parameters: Text and available values used to create dynamic metrics.Optional metrics vs. dynamic metrics: Optional metrics are a more hidden way of providing users with metric choices, while dynamic metrics offer a more interactive and user-friendly experience.Dynamic Metrics in TablesWe can use the same method we used for dimensions to create dynamic metrics. For example, imagine we have a table with breakdowns by source, medium, and campaign. We want to let users choose the metric they want to see for a particular dimension, such as sessions, page views, or users.To achieve this, we'll apply a case function to the table metrics. The process is similar: create a parameter with text, available values, and a case function for the table metric.For instance, if the table metric is sessions, display sessions; if it's page views, display page views. This method allows users to choose the metric they want to see and apply it to their data.In a real-life example, we worked with a company whose CEO wanted to see different metrics for their stores on different date ranges without creating separate pages. We built an interface allowing them to choose from various metrics, such as sales, transactions, customers, and products sold.Optional Metrics vs. Dynamic MetricsOptional metrics are another way to provide users with flexibility in their data exploration, but they can be hidden and not immediately obvious to users. To make optional metrics more visible, always show the chart header and include a text prompt, such as ""Select your metric.""Dynamic metrics, on the other hand, can provide a more interactive and user-friendly experience when you have the resources to create a more sophisticated user interface.In conclusion, dynamic metrics can be a powerful tool for customization in Looker Studio, giving users the ability to choose the metrics they want to see for their data. This versatile method can help create a more engaging and personalized experience for users when exploring data.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.11. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1210-parameter-example-dynamic-dimension/1210-quiz","200","OK","1. What is the main purpose of dynamic dimensions in Looker Studio? (Multiple Choice)
a) To create tables with a fixed dimension
b) To allow users to filter tables by date range
c) To allow users to change table dimensions
d) To create a dropdown menu for selecting dimensionsAnswer: c2. What type of parameter is used to create a dropdown menu with allowed values? (Multiple Choice)
a) Numeric parameter
b) Text-based parameter
c) Date-based parameter
d) None of the aboveAnswer: b3. Which function is used to change table dimensions based on the selected value of a parameter? (Multiple Choice)
a) SWITCH
b) CONCAT
c) CASE
d) IFAnswer: c4. To implement dynamic dimensions in tables, you need to create a custom field called: (Fill in the blank)
a) table_breakdown
b) dynamic_dimension
c) custom_fieldAnswer: a5. What is the purpose of creating an additional table with no header, metric, or row numbers? (Multiple Choice)
a) To display the selected dimension as the title
b) To create a new metric for the table
c) To make the table transparent
d) None of the aboveAnswer: a6. Dynamic dimensions can be applied to charts as well as tables. (True/False)Answer: True7. The CASE function can only be used with text-based parameters. (True/False)Answer: False8. In order to change the table title based on the selected dimension, you need to create a custom metric. (True/False)Answer: False9. A marketing analyst wants to create a table that allows their team to switch between dimensions such as sessions by source, medium, campaign, or country. What should they use to achieve this? (Long Answer)Example of a correct answer: The marketing analyst should use dynamic dimensions in Looker Studio by creating a text-based parameter for the dropdown menu, utilizing the CASE function to change the table dimensions based on user selection, creating a custom field for the table breakdown, and implementing an additional table with no header or metric to display the selected dimension as the title.10. Your team wants to create a report that allows users to choose between revenue by region, revenue by product category, or revenue by sales representative. What steps would you take to implement this in Looker Studio? (Scenario-based, Multiple Choice)
a) Create a numeric parameter and a dropdown menu
b) Create a text-based parameter and a dropdown menu, then use the CASE function to change table dimensions
c) Create a date"
"https://lookerstudiomasterclass.com/chapter-12-parameters/1210-parameter-example-dynamic-dimension","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.10. Parameter Example: Dynamic DimensionIn this lesson, we will explore dynamic dimensions in Looker Studio. Typically, when you create a table or chart, you determine the dimensions and metrics, and the viewer has limited options to modify it. However, parameters allow you to give viewers the ability to change dimensions.Consider a table that breaks down sessions by source. If you want to enable viewers to change the table from sessions by source to sessions by medium, campaign, or country, you can do that with parameters.Learning ObjectivesUnderstand the concept of dynamic dimensions in Looker Studio and its applications.Learn how to create a dropdown menu using text-based parameters.Utilize the CASE function to change the table dimensions based on user selection.Create custom fields to implement dynamic dimensions in tables.Develop techniques to change table titles based on the selected dimension.Main Concepts and TopicsDynamic dimensions: Allowing users to change table dimensions using parameters.Text-based parameters: Used to create a dropdown menu with allowed values.CASE function: Changes the dimension in the table based on the selected value of the parameter.Custom fields: Required to create a table breakdown field that uses the CASE function.Changing table titles: Creating an additional table with no header or metric to display the selected dimension as the title.Creating the Dropdown MenuStart by creating a dropdown menu using a parameter called breakdown. It's a text-based parameter with five different values (by source, by medium, by campaign, by country, and by other dimensions you want to include). Text-based parameters with allowed values can be connected to a dropdown menu.Using the CASE FunctionNext, use the CASE function to change the dimension in the table based on the selected value of the parameter. For instance, when the parameter equals ""by country,"" the dimension of the table should be ""country."" The CASE function looks at the value selected by the user and outputs the categories within different dimensions based on that value.Creating a Custom FieldCreate a custom field called table breakdown. This field does not exist in Google Analytics, so it should be a custom field. The custom field will use the CASE function to output the appropriate dimension based on the value of the breakdown parameter.Changing the Table TitleTo change the table title based on the selected dimension, create another table with no header, metric, or row numbers. The table will display the selected dimension as the title.Real-Life Example:Imagine you are a marketing analyst for an e-commerce website. By using dynamic dimensions, you can create a single table that allows your team to switch between dimensions such as sessions by source, medium, campaign, or country. This enables your team to quickly analyze different aspects of your marketing efforts, improving decision-making and saving time.In this chapter:→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.10. Quiz"
"https://lookerstudiomasterclass.com/chapter-12-parameters/121-introduction-to-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 12.1. Introduction to ParametersIn our last session, we explored filters and controls, which allowed us to narrow down the information presented in our reports based on certain dimension values or metric ranges. We learned that filters are designed for editors and controls for viewers. Both perform the same functionality, but now we'll dive into controls and their relationship with parameters.Parameters: Empowering Your ViewersParameters are an exciting addition to Looker Studio. For the first time, we can offer users the ability to influence how data is transformed and calculated. This means the viewer of the report can have their input on how they want those calculations to be performed.In Looker Studio, we can connect to external data sources and collect values from users using parameters. Parameters allow us to also collect data and provide it to calculated fields and charts, making them more relevant and useful to the viewer.For example, let's say we have a metric coming from a data source like Google Analytics, BigQuery, or Google Sheets. We can combine this metric with a value provided by the viewer, perform some calculation, and present the result in a chart. This chart now has aspects that are customized by the viewer, making it more relevant and useful to them.Imagine a scenario where a user wants to forecast revenue for the next quarter. They could provide a parameter (let's call it X) to adjust the forecast based on their expectations, such as doubling the revenue or increasing it by 20%. This way, users can directly influence the calculations in their reports.The Power of ParametersParameters provide a level of customization and interactivity that hasn't been available in Looker Studio before. By allowing users to influence the underlying calculations, we can create more meaningful and personalized reports that cater to our clients’ unique needs and preferences.In the next lessons, we'll dive deeper into parameters, explore how to create them, and learn how to use them in our data visualizations.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-12-parameters","200","OK","12.1. Introduction to ParametersIn our last session, we explored filters and controls, which allowed us to narrow down the information presented in our reports based on certain dimension values or metric ranges. We learned that filters are designed for editors and controls for viewers. Both perform the same functionality, but now we'll dive into controls and their relationship with parameters.Parameters: Empowering Your ViewersParameters are an exciting addition to Looker Studio. For the first time, we can offer users the ability to influence how data is transformed and calculated. This means the viewer of the report can have their input on how they want those calculations to be performed.In Looker Studio, we can connect to external data sources and collect values from users using parameters. Parameters allow us to also collect data and provide it to calculated fields and charts, making them more relevant and useful to the viewer.For example, let's say we have a metric coming from a data source like Google Analytics, BigQuery, or Google Sheets. We can combine this metric with a value provided by the viewer, perform some calculation, and present the result in a chart. This chart now has aspects that are customized by the viewer, making it more relevant and useful to them.Imagine a scenario where a user wants to forecast revenue for the next quarter. They could provide a parameter (let's call it X) to adjust the forecast based on their expectations, such as doubling the revenue or increasing it by 20%. This way, users can directly influence the calculations in their reports.The Power of ParametersParameters provide a level of customization and interactivity that hasn't been available in Looker Studio before. By allowing users to influence the underlying calculations, we can create more meaningful and personalized reports that cater to our clients’ unique needs and preferences.In the next lessons, we'll dive deeper into parameters, explore how to create them, and learn how to use them in our data visualizations.→ 12.2. Use Cases for Parameters→ 12.3. Properties of Parameters→ 12.4. Parameters: From Creation to Visualization→ 12.5. Parameters: Range of Values→ 12.6. Parameters on Charts→ 12.7. Scope of Parameters→ 12.8. Parameter Example: Google Maps Link→ 12.9. Parameter Example: UTM Generator→ 12.10. Parameter Example: Dynamic Dimension→ 12.11. Parameter Example: Dynamic Metric→ 12.12. Parameter Example: Dynamic Comparison→ 12.13. Parameter Example: Dynamic Filter Controls→ 12.14. Parameter Example: Projection & Custom Calculators→ 12.15. App View→ 12.16. Parameters in Dynamic SQL for BigQuery→ 12.17. Parameter Example: The Journey Framework→ 12.18. Running CalculationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn12.1. Introduction to Parameters12.2. Use Cases for Parameters12.3. Properties of Parameters12.4. Parameters: From Creation to Visualization12.5. Parameters: Range of Values12.6. Parameters on Charts12.7. Scope of Parameters12.8. Parameter Example: Google Maps Link12.9. Parameter Example: UTM Generator12.10. Parameter Example: Dynamic Dimension12.11. Parameter Example: Dynamic Metric12.12. Parameter Example: Dynamic Comparison12.13. Parameter Example: Dynamic Filter Controls12.14. Parameter Example: Projection & Custom Calculators12.15. App View12.16. Parameters in Dynamic SQL for BigQuery12.17. Parameter Example: The Journey Framework12.18. Running Calculations"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/119-filtered-filter-controls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.9. Filtered Filter ControlsLet's dive into filtered filter controls. These are filter controls that have filters applied to them. We discussed how filters can be applied to a chart, a control, a page, or a report. We've seen filters on charts, pages, and reports, but not on controls yet.Imagine you have a control with a list of countries, but you don't want your viewers to select from all the countries. You only want them to select from countries that had traffic from a specific source...Applying a Filter to a ControlTo apply a filter to a control, first, click on the control. Note that it might be trying to inherit the report level filter. Keep in mind that if you apply anything at the report level, it will apply to everything, including the options available in a dropdown menu.First, unselect the report level filter to display the list of all countries. Now, you can add a filter and select the source or medium, such as ""cpm"". Include the selected field with the medium equal to ""cpm"".Once you apply that filter, you will see only the countries with traffic from that specific channel within the applied date range.Filtered Control Impact on DataIt's important to note the distinction when using filtered controls: If you select a country, you will still see all the source mediums coming from that country, even if they're not ""cpm"". The rest of the source medium will be included as well, because the filter is only applied to the control and not the rest of the charts. If the filter were at the report or page level, the behavior would be different.Filtered controls can be handy when you want to simplify the options for your viewers. You can filter a dropdown menu or create a fixed-size list for specific data.For a real-life example, imagine a marketing agency that wants to give its clients the ability to choose only from countries where their ads have been displayed. By applying a filtered filter control to the list of countries, the agency can ensure that their clients see only relevant options. This can help clients make more informed decisions about their ad placements.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/118-filter-controls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.8. Filter ControlsFilter controls are similar to filters, but they're meant for the viewers of your Looker Studio report. They allow users to interact with your data in a more flexible way. In this lesson, we'll discuss several types of filter controls available in Looker Studio.Dropdown MenuThe dropdown menu is the most common filter control. You can apply a dimension to this control, and it will list all the values of that dimension for the user to select. Users can:Select or exclude specific valuesSearch for specific values, like countriesInclude only certain valuesTo add a dropdown menu control, click on ""Add Control"" and choose ""Dropdown List.""Tip: Assign a relevant metric to your dropdown control. This can help users quickly identify which values are most interesting or relevant.Fixed Size ListThe fixed size list control is similar to the dropdown menu, but it shows all values in a long list, which is useful when there aren't too many values to display. To change a dropdown menu to a fixed size list, go to the Style tab and choose ""Fixed Size.""Example: A fixed size list is more appropriate for a list of car brands, while a dropdown menu is better for a list of countries.Input BoxThe input box control allows users to enter a specific value to filter by, like ""Canada."" This control is strict and only filters based on exact matches. It's not ideal for exploration, as users must know the exact value they're looking for.Note: The input box is more suitable for receiving parameter values from users.SliderA slider control can be used to set upper and lower limits for a numeric dimension. For example, you could filter for users who have viewed more than 50 pages in a session.Keep in mind: The slider should be applied to a dimension containing numbers, not a metric.CheckboxThe checkbox control filters data based on a true/false value. It must be applied to a boolean field. By default, it's in a ""don't care"" state (not set). When checked, it filters for true values, and when unchecked, it filters for false values.To reset the checkbox to the (not set) state, right-click and choose ""Reset."" Be sure to explain this functionality to your clients, as it might not be intuitive.Example: You can create a boolean field to show whether a user is browsing from a mobile device.It's important to choose the appropriate filter control based on the data and the user's needs. Always consider the purpose of the report and the questions it's meant to answer.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/117-date-range-control","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.7. Date Range ControlLet's dive into the world of Date Range Control in Looker Studio, an essential aspect of refining and presenting data in a clear and meaningful way.Understanding Date Range ControlDate Range Control allows you to select the specific date range for which you want to pull data from your data source. It offers both fixed and dynamic date ranges, enabling you to personalize the way data is presented.Fixed Date RangeWith a fixed date range, you can select a specific start and end date for the data. This remains constant and doesn't change with time.Dynamic Date RangeDynamic date ranges automatically adjust based on the date the report is accessed. For example, if you choose ""last 14 days,"" the report will display data for the 14 days prior to the date the user views the report. This is the default setting, but users can change it since it's a control.The dynamic values available provide a range of options like ""last 7 days,"" ""last 14 days,"" ""last month,"" ""last quarter,"" and so on. However, there might be times when you need a dynamic date range that isn't included in the preset list.For example, you might want a range from 8 weeks ago to 4 weeks ago.Advanced Date RangeTo create a custom dynamic date range, you can use the Advanced Date Range option. This allows you to set both the start and end dates dynamically, based on the current date.To achieve this, select ""today"" minus or plus a specified number of intervals (days, weeks, months, or years). You can also set fixed start or end dates, even in the future, if needed. This powerful feature allows you to create highly customized date ranges for your data.It's important to experiment with this feature and become comfortable using it for your custom date range needs.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/116-controls-data-control","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.6. Controls: Data ControlIntroducing Data ControlsData controls are similar to filters, but they are designed for report viewers rather than report editors. While filters are applied to chart properties and are not visible in view mode, data controls are built for the viewer, allowing them to interact with the data in the report. As an editor, you can decide what changes your viewers can make to the data with data controls.Use Cases for Data ControlsData controls allow report viewers to connect the report to another account of the same tool they have access to. For example, if John connects to a report, he will see a different set of Looker Studio data than Fernando, who connects to the report with his account. This feature depends on the user being logged into their Looker Studio account.Note: Data controls only work with Google connectors and are not available for all connectors.Some limitations to data controls include:Only available for Google connectors.The viewer must be signed into their Looker Studio account.Data controls do not work with embedded reports.Data controls do not work with community visualizations.For instance, if you change the data source to display traffic from a website, a community visualization may break, since Looker Studio doesn't trust it as much as built-in visualizations.Data controls are useful for creating templates and lead magnets, as well as generic setups within tools like Looker Studio Analytics or Looker Studio Ads. However, be aware that relying on data controls may cause inconsistencies in your report.Real-life example: A marketing agency might create a template report that can be connected to different clients' Looker Studio Analytics accounts, allowing each client to view their own data in the report.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/115-filters-vs-ga-segments","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.5. Filters vs GA SegmentsSometimes people try to use filters in Looker Studio instead of creating a segment in Google Analytics. It's essential to understand the difference between the two, as they serve different purposes.Filters in Looker StudioFilters in Looker Studio are row-level filters that are applied after the data has been extracted. To put it simply, the data is extracted from Google Analytics, placed into a table, and then filtered based on specified criteria. Filters are applied at the row level on the table or chart in Looker Studio.A common mistake is to try and use filters to recreate a funnel visualization. For example, someone might want to see the number of users who visited both the homepage and basket page. They might attempt to create a filter for the page to equal both the homepage and basket page. This approach doesn't work because a single row cannot satisfy both criteria.Example: using a filter to try and recreate a funnel visualization will not work.Google Analytics SegmentsIn contrast, a Google Analytics segment processes within Google Analytics, and then the data for that segment is extracted to Looker Studio. In this case, you would use a sequence segment in Google Analytics.Example: creating a sequence segment in Google Analytics for users who visited the homepage and then the basket page.When sharing a Looker Studio report that uses a segment from your Google Analytics account, the data connector uses your credentials. If it's on the viewer's credentials, the situation would be different. The data source owner's credentials are used to connect to the segment.Example: sharing a Looker Studio report with a segment applied will show the segment for users with access to your Google Analytics account.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/114-managing-filters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.4. Managing FiltersIn this lesson, we will learn how to manage filters effectively in Looker Studio. Filters are essential for creating informative and focused reports. By managing them properly, we can avoid redundancy and improve efficiency.Accessing FiltersTo access your filters, go to Resource > Manage Filters. This will display a list of all the filters created in the current report. You can see how many charts are connected to each filter and which ones can be safely deleted without affecting the charts.Be cautious when deleting filters. If a filter is connected to a chart, removing it will also remove the filter from the chart. If the chart title indicates a specific filter, such as ""Revenue from Google Organic,"" you'll need to adjust the title after deleting the filter.Filter Descriptions and EditingIn the filter management view, you can also see the descriptions of each filter for additional clarity. If you notice any discrepancies between your naming convention and what the filter is doing, you can edit the filters directly from this screen.Duplicating FiltersDuplicating filters can save time when creating similar filters with only slight variations. For example, if you need to create filters for different states with identical criteria, duplicate the original filter and edit the copy by changing the state value. This feature is especially useful when you need to create multiple filters with the same criteria.Creating Filters from the Management ScreenWhen you add a filter from the management screen, Looker Studio allows you to choose the data source for the filter. This is different from creating filters within a table, where the data source option is grayed out and determined by the table's data source.Consider including data source information in filter names. Although it might make filter names longer, it can be helpful for clarity, especially when working with multiple data sources. Use a short naming convention for data connectors, such as ""GA built-in"" or ""Google Sheet,"" to prevent names from becoming too long and unreadable.Remember that filters created for a specific data source can often be applied to other data sources using the same data connector. Keep this in mind when managing your filters.It's a good idea to develop a consistent naming convention for both data sources and filters to improve organization and clarity in your Looker Studio projects.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/113-filters-live-in-data-sources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.3. Filters Live in Data SourcesIn Looker Studio, filters are an essential part of data sources. They allow you to control and manipulate the data displayed in your charts and tables. In this lesson, you'll learn where filters live, how they are associated with data sources, and the concept of filter scopes and inheritance.Filters and Data SourcesFilters are linked to the data source applied to a chart. To illustrate this, let's use an example. We have a chart with the data source from a Google Sheet, and we want to apply a filter for ""revenue more than 220"". However, if we have another chart in our report with a different data source, such as Google Analytics, the same filter will not work on this chart because the field ""revenue"" is different in both data sources.To apply a filter to a different data source, you need to recreate the filter specifically for that data source. You can do this by going to the chart's settings, selecting the data tab, and choosing the data source. When you create a filter within the settings of a table, the filter will be associated with the data source applied to that table.For example, we have a Google Analytics data source and we create a filter called ""revenue_ga greater than 220"". This filter will work on the chart with Google Analytics data source because it is specifically created for that data source.Filter Scopes and InheritanceFilters can be applied at different levels in Looker Studio: chart, page, and report level. These levels define the scope and inheritance of filters.Report Level FiltersReport level filters are applied to the entire report. They affect all charts connected to the same data source. To apply a filter at the report level, go to File > Report Settings, select the data source, and then create a filter. The filter will apply to all charts with the specified data source.Example: You have a report for email marketing and you want to filter out all non-email traffic. You can apply a report level filter for ""source medium equals email"".Page Level FiltersPage level filters are applied to all charts on a specific page connected to the same data source. To apply a filter at the page level, right-click on an empty area of the page and select ""Current Page Settings"" or go to Page > Current Page Settings. Just like report level filters, you can add filters that affect all charts on the page with the specified data source.Example: You create a page to analyze traffic from different source mediums. You duplicate the page and apply different source medium filters on each page (e.g., Google CPC on one page, email on another page).Chart Level FiltersChart level filters are applied to a specific chart only. They don't affect other charts, even if they have the same data source. You can apply chart level filters by clicking on the chart and selecting the data tab, then creating a filter.Example: You want to exclude ""Google CPC"" traffic from a specific chart. Apply a chart level filter for ""source medium not equal to Google CPC"".In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/112-metric-filters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.2. Metric FiltersMetric filters might seem straightforward, but they can be a bit confusing at times. In this lesson, we'll explore how to apply metric filters in Looker Studio and examine some of the nuances and limitations of this feature.Applying Metric FiltersImagine you have a table showing data from GA Universal. Previously, we filtered it based on dimension values. Now, we want to filter it based on metric values, specifically on the number of sessions. We want to see only those mediums with more than 290 sessions.This should remove all rows from row three to the end since they don't have more than 290 sessions. Let's try it out and see what happens.First, we add a metric filter for sessions greater than 290. When we try to save this filter, we encounter an error that states metric filters cannot be used with summary rows or analytical functions. This is because we had the summary row enabled on the chart.To fix this, we need to disable the summary row and then add the filter again. Now it works! However, note that you can't have a summary row when applying metric filters to a chart.Anomaly with Scorecard FiltersLet's take another example: we have a scorecard showing the total number of sessions. When we apply the same filter to this scorecard, the number doesn't change. The reason for this is that the scorecard is showing a total that is greater than 290, so the filter has no effect. If we change the filter to sessions greater than 90,000, the scorecard value will disappear because it doesn't meet the filter criteria.Metric Filters with Google SheetsNow, let's examine a table with data from a Google Sheet. This sheet has two columns and five rows, with revenue values for different holidays. We want to apply a metric filter for revenue greater than $220.When we save this filter, it doesn't break the chart. This is because the data source is a Google Sheet and not an auto-aggregated metric like in Google Analytics. When Looker Studio has direct access to the raw data, it can apply metric filters without any issues.This means that metric filters will work differently depending on the data source. With auto-aggregated metrics, applying a metric filter can break the chart or encounter limitations. When working with raw data, such as Google Sheets, Looker Studio can handle metric filters without any problems.Additional note: GA4 should have the same issue as GA Universal with auto-aggregated metrics, but testing this could be an interesting exercise.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/1113-scope-of-controls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.13. Scope of ControlsIn some cases, you might want to limit the impact of a control to only certain parts of the page or specific chart components, rather than applying the control to the entire report. This can be achieved through grouping components together.Grouping ComponentsTo group components together:Select the components you want to group.Click and group them together, just like you would in any other software.Grouping components this way can help you create a more organized and focused report. For example, you can have a report that compares two different selections across two different groups, side by side or top to bottom.Example: Device Category ControlImagine you have a report with two sets of components that you want to compare side by side. One set shows data for desktop users, while the other set shows data for mobile users. You can group these components together to achieve this comparison.Group the components related to desktop users.Group the components related to mobile users.Now, when you change the device category control for one group, it will only affect the components within that group and not the entire report. This allows you to compare different selections across the two groups easily.Control HierarchyIt's important to remember that controls outside the groups will still affect all the components on the page. For example, if you have a date range or user type control outside the groups, changing those controls will apply to both groups.By grouping components together and managing control hierarchy, you can create more organized and focused reports. You can also control which controls affect which chart components or controls on the page.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/1112-controls-filter-controls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.12. Controls Filter ControlsControls filter controls is an interesting concept that demonstrates how the active selection within a control can affect the available values in other controls on the page. This is because when you use a control to filter the report, it filters every component on the page, including other controls.Hierarchy and FilteringImagine a scenario where you have controls for continents, countries, regions, and cities. There's a hierarchy to these dimensions, so users might expect that selecting a continent will filter the other controls to show only values related to that continent.For example, if a viewer selects Europe, they would see a reduced list of countries, regions, and cities related to Europe. This is an expected outcome, as the viewer understands the hierarchy.However, controls filter controls do not care about the hierarchy. If a viewer selects a city, such as London, the other controls will also be filtered based on this selection, showing only the continents, countries, and regions associated with London. This can lead to confusion for the viewer when they want to explore data for a different continent or country.To resolve this issue, the viewer needs to either right-click on the report and reset, or reset the values on the control itself.Adding Value Counts to ControlsIf you're wondering how to add value counts (like the number of continents, countries, or regions) to your controls, here's a quick explanation:Create a scorecard for each value you want to display.In the Style tab of the scorecard, increase the left margin (for example, from 16 pixels to 96 pixels) to position the text.Modify the scorecard's appearance by creating rounded edges and adding a background color.For the number displayed on the scorecard, apply the corresponding dimension (such as continent, country, or region) with a ""count distinct"" metric. This will count the distinct number of items available for that dimension.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/1111-chart-cross-filter","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 11.11. Chart Cross FilterWhile we've seen filters and controls for both editors and viewers, there's another way to provide viewers with the opportunity to slice and dice data within a report: chart cross filters. This technique turns a chart into a control. Let's explore how to make a chart interactive and use cross filters based on the selection of the chart's dimensions.Enabling Chart Cross FiltersTo enable chart cross filters, select the chart and scroll down to the end of the data properties tab. Look for chart interactions and cross filtering. Enabling it will add interactivity to the chart, allowing users to cross filter based on the selected dimensions.For example, if you click ""home"" in an interactive chart, it will function just like a control. The viewer can select multiple values by holding the Control or Command key and clicking on the desired options. The cross-filtered data will display corresponding values based on the selection. To reset the values, right-click and choose ""reset"".Using Cross Filters with Various ChartsYou can enable cross filters for different types of charts, such as pie charts and time series. For time series, you can use a technique called brushing to cross filter your report. Brushing allows you to click and drag over a specific range of the chart to filter the data accordingly.For instance, if you want to investigate the traffic sources, landing pages, and devices responsible for a peak in your time series chart, click and drag over the peak. The data displayed in the other charts will be filtered based on the selected range.Combining Chart Cross Filters and Filter ControlsChart cross filters can work in conjunction with other filter controls on the page. They will essentially filter each other, allowing viewers to explore data more granularly and efficiently.For example, an e-commerce company might use chart cross filters to explore sales data. By clicking on a specific product category in a bar chart, the viewer can see the traffic sources, landing pages, and devices that contributed to sales for that category. This can help the company identify trends and optimize their marketing efforts.In this chapter:→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls/111-intro-dimension-filters","200","OK","11.1. Intro & Dimension FiltersWelcome to an exciting lesson about filters and controls in Looker Studio. These powerful tools are essential when creating reports. So let's dive in and learn how they work.Filters and ControlsFirst, let's understand the distinction between filters and controls. Filters are for the report editor, allowing you to decide what to apply. You can filter based on dimensions or metrics. On the other hand, controls are for the viewer and include data control, date range control, filter controls, advanced filter control, and chart cross filters.Dimension FiltersFilters allow you to limit the data shown on a chart. You can apply them to a chart, control, page, or the entire report. Keep in mind that report viewers cannot change filters, so you'll need to inform them about the filters applied.Filters do not transform data, they only limit it. You can include or exclude dimension values, apply filters with more than one condition, and have multiple filters applied to a single chart. Filters are linked to a data source.Applying Dimension FiltersLet's start with filtering a chart based on dimension values. First, select the chart and look at the data property in the sidebar. Scroll down to find the ""table filter"" section and click to add a filter.Name your filter descriptively, then decide whether you want to include or exclude certain values. For example, you might want to exclude rows where the source medium contains ""not set.""Once you've set up your filter, save it. The chart should now only display the data you want to see. Keep in mind that the order of the filters does not matter, as they are all applied on top of each other.Using Multiple CriteriaYou can also apply multiple criteria to a filter. For example, if you want to include data where the device is either desktop or mobile, use the ""OR"" operator. If you need to include or exclude more than ten values, use the ""IN"" operator followed by a list of values separated by commas.Applying Dimension Filters to ScorecardsFilters can also be applied to scorecards, which don't have dimensions. Simply add a filter and choose from the ones you've already created. The numbers on the scorecard should change accordingly.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-11-filters-controls","200","OK","Chapter 11: Filters & Controls in Looker StudioIn the previous lessons we learned about data blending: how it works behind the scenes, its new features, and the different join types that we can use. We also discussed some examples of data blending applications.In this chapter we will talk about Data Control: the application of Filters and Controls in reports.What are Filters?Filters limit the data shown in a report based on a dimension or metric.We’ll also discuss the different functions of filters, where they can be applied, the conditions used, as well as restrictions between editors and viewers.What are Controls?Controls allow report viewers to limit the values shown in a chart based on different categories of a dimension, similar to filters.Controls differ from filters since some controls can enable the report editors to gather user input for parameters to be used in calculated fields.Controls also have different functions that can affect the dataset, time frame, and parameter values.11.1. Intro & Dimension FiltersWelcome to an exciting lesson about filters and controls in Looker Studio. These powerful tools are essential when creating reports. So let's dive in and learn how they work.Filters and ControlsFirst, let's understand the distinction between filters and controls. Filters are for the report editor, allowing you to decide what to apply. You can filter based on dimensions or metrics. On the other hand, controls are for the viewer and include data control, date range control, filter controls, advanced filter control, and chart cross filters.Dimension FiltersFilters allow you to limit the data shown on a chart. You can apply them to a chart, control, page, or the entire report. Keep in mind that report viewers cannot change filters, so you'll need to inform them about the filters applied.Filters do not transform data, they only limit it. You can include or exclude dimension values, apply filters with more than one condition, and have multiple filters applied to a single chart. Filters are linked to a data source.Applying Dimension FiltersLet's start with filtering a chart based on dimension values. First, select the chart and look at the data property in the sidebar. Scroll down to find the ""table filter"" section and click to add a filter.Name your filter descriptively, then decide whether you want to include or exclude certain values. For example, you might want to exclude rows where the source medium contains ""not set.""Once you've set up your filter, save it. The chart should now only display the data you want to see. Keep in mind that the order of the filters does not matter, as they are all applied on top of each other.Using Multiple CriteriaYou can also apply multiple criteria to a filter. For example, if you want to include data where the device is either desktop or mobile, use the ""OR"" operator. If you need to include or exclude more than ten values, use the ""IN"" operator followed by a list of values separated by commas.Applying Dimension Filters to ScorecardsFilters can also be applied to scorecards, which don't have dimensions. Simply add a filter and choose from the ones you've already created. The numbers on the scorecard should change accordingly.→ 11.2. Metric Filters→ 11.3. Filters Live in Data Sources→ 11.4. Managing Filters→ 11.5. Filters vs GA Segments→ 11.6. Controls: Data Control→ 11.7. Date Range Control→ 11.8. Filter Controls→ 11.9. Filtered Filter Controls→ 11.10. Advanced Filter Controls→ 11.11. Chart Cross Filter→ 11.12. Controls Filter Controls→ 11.13. Scope of ControlsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn11.1. Intro & Dimension Filters11.2. Metric Filters11.3. Filters Live in Data Sources11.4. Managing Filters11.5. Filters vs GA Segments11.6. Controls: Data Control11.7. Date Range Control11.8. Filter Controls11.9. Filtered Filter Controls11.10. Advanced Filter Controls11.11. Chart Cross Filter11.12. Controls Filter Controls11.13. Scope of Controls"
"https://lookerstudiomasterclass.com/chapter-10-data-blending-join-types-explained","200","OK","Chapter 10: Data Blending: Join Types Explained In the previous lessons we discussed the foundations of data blending: what data blending is and how it works behind the scenes mainly using the Left Outer Join Type.We learned how useful data blending can be for us to bring up to five data sources (e.g. Google Analytics, Google Sheets, Facebook Ads data source, etc.) together into a single, blended data source so we can visualize it on a chart.In this chapter we will learn about the other join types aside from Left Outer Join.10.1. Intro & Limitations of Old Data BlendingWelcome to the advanced course on data modeling and data blending in Looker Studio! In our last session, we explored the foundations of data blending and discussed the left outer join. Today, we'll dive deeper into the rest of the join types available in Looker Studio, starting with some examples of the left join.Data Blending: A RefresherRemember, in Looker Studio, we can only use one data source per chart. However, we can blend data sources based on specific criteria and join keys, essentially creating a single blended data source. This allows us to connect multiple data sources to a single chart.Initially, data blending had some limitations:A maximum of five data sources could be blended.Only left outer join was supported.The same join key needed to be present in all data sources.While the limitation of blending up to five data sources still exists, we now have access to multiple join types and keys across different joins.Expanded Join TypesIn addition to the left outer join, Looker Studio now offers right, inner, full outer, and cross join types. This provides greater flexibility in how you can mix and match different join types between tables. For example, you might want a left join between the first and second tables, a full outer join between the second and third tables, and a cross join for the final table.Understanding Join Types with Venn DiagramsVenn diagrams are often used to illustrate different join types. These overlapping circles show how data from different tables is combined based on the join type being used.Let's take a closer look at the various join types in Looker Studio and how they can be applied in real-life scenarios.→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn10.1. Intro & Limitations of Old Data Blending10.2. Left Outer Join in Looker Studio10.3. Data Blending: Data Enrichment10.4. Data Blending: Paid Ads Cost10.5. Data Blending: De-Aggregation10.6. Right Outer Join10.7. Inner Join10.8. Full Outer Join10.9. UNION (with Full Outer Join)10.10. Cross Join"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/16-sharing-your-report","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.6. Sharing Your Looker Studio ReportSharing the ReportOverview of options for sharing your report with specific people, publicly, or scheduling emailed PDFs.Once the report is complete, it's time to share it with the end users. There are several ways to do this:Invite People: Share the report with specific individuals by entering their email addresses. Choose whether they can view or edit the report, and notify them by email.Create a Link: Generate a link to the report, allowing anyone with the link to view or edit it. This is less secure but doesn't require users to log in to their Google account.Schedule Emails: Set up a schedule to email the report (or specific pages) as a PDF to selected recipients. Customize the email subject and body, and choose the frequency of the emails.Wrapping UpIn this lesson, we covered data blending, creating custom fields, and sharing reports in Looker Studio. We connected to different data sources, manipulated data, and shared our results with others. This is just the beginning - there's much more to learn and master in Looker Studio!In the upcoming Looker Studio Masterclass, we'll dive deeper into the functionalities we've covered today and explore even more features. Get ready to become a Looker Studio ninja!In this chapter:1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/15-live-workshop-creating-an-ecommerce-dashboard-part-2","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.4. Live Workshop: Creating an eCommerce Dashboard in Looker Studio - Part 2Learning ObjectivesUnderstand the process of creating pages in a Looker Studio report and reusing charts and components on different pages.Learn how to create and use parameters and controls in Looker Studio.Learn how to perform calculations using custom fields and data blending.Understand how to share a Looker Studio report with end users.Creating Page Two: Cost vs ProfitOn the second page of the report, we'll explore more advanced features.Copy the logo, date range selector, and e-commerce title from the first page and paste them onto the second page.Make the logo and date range selector report level components so they'll appear on all pages.Adding Parameters and ControlsTo allow users to adjust the average order value increase percentage, create a parameter and add a control (either an input box or slider) for it.Create a new parameter called ""Average Order Value Increase Percentage"" with a whole number range from 0 to 200 and a default value of 10.Add a slider control connected to the parameter, allowing users to adjust the percentage value.Now users can adjust the average order value increase percentage, and it's time to use this value in the report calculations.First, let's copy and paste another scorecard. We want to change the background to green to distinguish the one calculated based on the parameter from the rest. Reset the comparison period to none.Calculating Projected Average Order ValueWe can't find a field called ""projected average order value"" in our data. We need to create one by calculating it from our existing data. Use this formula to calculate the projected average order value:(1 + (parameter_value / 100)) * actual_average_order_valueChange the field type from numeric to currency and select US dollars.Calculating Projected RevenueCopy and paste the scorecard again. Click on the fx icon to change the function to ""projected revenue."" We can calculate revenue by multiplying the number of transactions by the projected average order value.Adding Cost Data from Google SheetsWe need cost data from Google Sheets for this part. Add the Google Sheet as a data source, and start creating scorecards with the costs. Change the data source for each scorecard to the Google Sheet, and adjust the type of the field to currency.Calculating Total CostWe don't have a ""total cost"" field in the data source, so we'll create one at the data source level. The formula for total cost is:cost_of_goods_sold + ad_management + ad_cost + fixed_overhead + shippingCalculating Profit and Projected ProfitYou might think we can simply subtract total cost from revenue to get profit. However, we can't directly do that because they come from two different data sources. Stay tuned for the next lesson, where we'll explore how to calculate profit and projected profit using data from different sources.Data Blending BasicsSometimes, we need to combine fields from different data sources in a single calculation. To do this, we blend the data. Let's say we need a blended data source with total cost, revenue, and projected revenue. Here's how to create it:Select the scorecards containing the metrics you want to use.Right-click and choose ""Blend Data"".A new scorecard appears, connected to the blended data.The blended data is not connected to the original data sources. Instead, it contains the chosen metrics, cross-joined together. This is just one example of data blending; there are many other possibilities and join types to explore.Creating Custom FieldsWith the blended data, we can now create custom fields for profit and projected profit. To do this, subtract total cost from revenue and projected revenue, respectively. The result is profit based on actual revenue and projected profit based on hypothetical revenue.In this chapter:1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/14-live-workshop-creating-an-ecommerce-dashboard-part-1","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.4. Live Workshop: Creating an eCommerce Dashboard in Looker Studio - Part 1Learning ObjectivesLearn how to create, customize, and manipulate different types of charts.Understand how to add interactive components, such as controls and filters, to a dashboard.Building a Simple eCommerce Dashboard with Looker StudioWith these basics covered, you're ready to start building your e-commerce dashboard. Let’s dive in and explore the power of Looker Studio!A Simple eCommerce ReportImagine a simple eCommerce report connected to Google Analytics, displaying essential KPIs like sessions, transactions, average order value, eCommerce conversion rate, and revenue for a specific time period. This report also allows you to change the date range and updates the data accordingly. It includes a map of transactions by US states, a time series chart for sessions and new users, a horizontal bar chart broken down by device category, male vs. female users, and new users and revenue from various source mediums.Ready to recreate this in Looker Studio? Let's start!Setting Up the GridFirst, let's organize our report by setting up the grid. Head to Theme and Layout and adjust the grid size to 20 pixels.Adding ScorecardsNow, let's add scorecards for our metrics. Scorecards display a single aggregated value, like a number, ratio, or currency. Add a scorecard, resize it, and snap it to the grid for a clean layout. To change the metric, search for the desired field (e.g., ""sessions"") and drag it onto the scorecard. You can also include comparisons to previous periods by adjusting the Default Date Range and Comparison Date Range settings.Time Series and Horizontal Bar ChartsNext, let's add a time series chart for sessions and new users. After placing the chart, you can adjust the metrics by dragging and dropping or clicking and selecting the desired fields.For the horizontal bar chart, add it beneath the time series chart and adjust the dimension to Device Category. Change the metrics to sessions and revenue, and customize the chart's appearance as desired.Pie Charts: Use with CautionAlthough it's generally not recommended to use too many pie charts, they can be suitable for dimensions with only a few values (e.g., male vs. female, desktop vs. mobile vs. tablet, new vs. returning visitor). Use pie charts sparingly and thoughtfully in your reports.Customizing Pie ChartsTo start, add a pie chart and resize it as needed. This chart should show the gender of the user instead of device categories like desktop, mobile, and tablet. After making these changes, you'll notice some differences in the chart's appearance.For the first time, let's head to the Style tab. Instead of only working with data properties, dimensions, metrics, and dates, you can now change the chart's style. Increase the thickness of the donut, and move the legend from the right to the bottom. Adjust the size as needed to achieve your desired look.Creating a Simple TableSometimes, tables are the best way to communicate values in a simple and understandable way. For this table, you'll want to show source, medium, new users, and revenue. Add the chart, place it where you want it to be, and adjust the dimensions. Drag and drop the source and medium fields.You'll also want to add revenue. If the revenue number is truncated, you can either change the widths of the columns or double-click on the edge of a column to automatically distribute the columns without truncation.Adding a Google MapNow, let's add a visually exciting chart: a Google Maps chart with bubbles. Choose the bubble map and adjust the size. This map should show one bubble per US state, with the size of the bubble representing the number of transactions.To achieve this, go to the data properties and drag and drop transactions to the size field. This will make the bubbles larger when there are more transactions. If you want to show only the US and filter out other countries, you can use a chart filter.Under the data tab, scroll down to the filter section. Apply a filter called ""US only"" and include the field ""country"" with the condition equal to ""United States."" This will remove all other data and only show values for the US.However, you'll notice that there is only one bubble because the location field is showing the country. Change this field to ""region"" to show bubbles per region, representing the number of transactions. Now your map is complete!With these steps, you've successfully created a pie chart, a table, and a Google Maps chart in Looker Studio. Keep experimenting and customizing your visualizations to create the perfect dashboard for your needs.Excluding Regions in the MapTo exclude specific regions from the map, add another filter. In this example, we'll exclude Hawaii and Alaska. Create a new filter called ""Exclude HI and AK"" with the field ""region"" and the condition ""in"" followed by the names of the regions you want to exclude. Make sure to use proper capitalization, as it's case sensitive. Save the filter and apply it to the map. Now, only the remaining states will be shown.Under the style tab, you can remove the street view and fullscreen controls if you find them distracting. With these adjustments, the map should look similar to the example provided.Adding Controls, Logo, and TitleTo complete the dashboard, you'll need to add a date range selector, a logo, and a title. The date range selector allows users to interact with the report and is found under the controls menu. Add it to your report, select the default date range (e.g., ""Last 14 days""), and resize it as needed.Next, add a logo to the dashboard by uploading an image from your computer. Resize and adjust the image as necessary. If the background isn't transparent, you can adjust the image's settings to make it so.Finally, add a text box for the title. In this case, call it ""eCommerce Overview"" and increase the font size to 28 pixels. Adjust the font and styling to match the example dashboard.Customizing the Dashboard ThemeNow that the first page is complete, let's create a second page and customize the dashboard's theme. Under ""Theme and Layout,"" select the ""Constellation"" theme to apply a dark theme to the dashboard. You can customize the theme further by changing the font and border radius of components.Remember to remove any unwanted styling elements that may have been added when the theme was applied, such as borders on images.Managing Dashboard PagesTo add and manage pages in your dashboard, click the ""Add Page"" button. You'll see a sidebar with page navigation options. Rename the pages as desired, such as ""eCommerce Overview"" and ""Cost and Profit."" Click on each page to edit its content and layout.By following these steps, you've learned how to create a multi-page dashboard in Looker Studio, add various types of charts, and customize the appearance to match a given example. Experiment with the platform's features and options to create even more advanced dashboards to suit your needs.Excluding Specific RegionsNow, we want to exclude certain regions to focus on the majority of the US transactions. To do this, we'll add a filter. You can either pick a pre-existing filter or create a new one.Name this filter something like ""Exclude HI and AK"" and set the condition to ""in."" If the region is in one of these values (case-sensitive), exclude them from the data. Save the filter, and it'll be applied to the Google map.Under the style tab, feel free to adjust the map settings, like removing the street view control or full screen control.In this chapter:1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/13-user-interface-explained","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.3. Looker Studio User Interface ExplainedLearning ObjectivesUnderstand the Looker Studio interface and its main components.Learn how to create a new report and connect it to a Google Analytics data source.Become familiar with the editing interface and its featuresDiving into Looker StudioLet's begin by exploring Looker Studio's user interface. We'll cover the basics, and then we'll create a simple e-commerce dashboard together.The Interface OverviewLooker Studio's homepage has three main sections: Reports, Data Sources, and Explorer. We won't discuss Explorer today. Instead, we'll focus on Reports and Data Sources, the two essential building blocks of Looker Studio.Reports: This tab displays a list of all the reports you've created or that have been shared with you. It's similar to other Google Workspace tools, like Google Docs and Google Sheets.Data Sources: This tab shows all the data sources you've created. In Looker Studio, you connect to data, create a data source, add it to a report, and visualize the information.Creating a New ReportTo start a new report, click on the blank report icon. Looker Studio will present you with a list of connectors to add data to your report.Choosing a Data ConnectorThere are many data connectors available, such as Google Sheets, BigQuery, Google Ads, and partner connectors for other platforms. Search for the tool you want to connect to and check if a partner connector is available.For this example, we'll use Google Analytics as our data connector. Click on it, select your account, and choose the property and view you want to connect to. Then, click ""Add to Report.""Exploring the Editing InterfaceNow, we're in the editing interface. This is where you create your reports. You can:Name your reportAccess menu options (undo, redo, add pages, etc.)Add charts, graphs, and visualizationsUse community visualizations created by othersAdd controls for interactionInsert graphic elements (images, text, lines, shapes)Save and modify the layoutSharing and Viewing Your ReportYou can share your report with others and switch between Edit Mode and View Mode. View Mode simulates what users see when they access your report.Understanding the Canvas and SidebarThe report canvas is where you build your report. Anything outside the canvas won't be visible to viewers. The sidebar is contextual and allows you to access properties and data fields depending on what you've selected.Customizing Theme and LayoutYou can change the report's theme and layout. Choose from pre-made themes or customize your own, and decide whether you want the header to be visible or hidden.In this chapter:1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/12-looker-studio-essentials","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.2. Looker Studio EssentialsIn this chapter, we will quickly cover the basics of Looker Studio and get familiar with the user interface. Next, we’ll quickly see a high-level overview of most key features of Looker Studio through building a simple eCommerce dashboard from scratchConnect to External DataThere are three types of connectors that you can use to connect your tool or data source to Looker Studio:Google Connectors: These are free data connectors for tools in Google Marketing and Cloud Platforms like Google Analytics, Google Ads, Google Sheets, YouTube and BigQuery.Partner Connectors: These are data connectors that are created and maintained by 3rd parties and can be used to connect to many different tools like Facebook Ads, Microsoft Ads, Shopify, Stripe, etc.. Partner Connectors expand Looker Studio’s connecting capabilities and are usually paid, with some offering a free trial period.Community Connectors: Anyone can create a custom data connector for a tool that has a properly documented APs.In case you’re using a tool that has no existing partner connector, you can have a developer custom build a community connector for you as long as your tool has a working API.Collect User InputIn Looker Studio, controls and parameters are two mechanisms for collecting data, from the viewer.You can define parameters and attach them to controls such as:CheckboxesInput BoxesSearch BoxesSlidersDropdown MenusDate Range SelectorsThese mechanisms enable our report users to communicate with our reports. They also give us an idea of the kind of data our report users want to see.Transform DataAfter connecting to external data sources and collecting data from the viewers, or in other words: bringing our data inside Looker Studio, we can start transforming our data.There are two main ways of transforming data in Looker Studio:Custom Fields:Aggregating Numbers & Performing Calculations using math functionsGrouping & Categorizing Data using conditional functions such as IF and CASEProcessing Data with text functions to clean up text fields or create new fields from the existing ones.Data Blending: A flexible feature that allows us to blend up to 5 different data sources together to create a new data sourceVisualize DataJust like Looker Studio connectors, there are also three types of visualizations you can use to make your reports easily accessible and readable:Google Visualizations: Built-in charts in Looker StudioScorecards: Shows an aggregated metric which can be a number, ratio/percentage, or a currency valueTablesTime Series ChartBar ChartPie ChartGoogle Maps: Bubble map, filled map, heat map, line mapLine Chart: Line chart, smoothed line, combo, stacked comboGeo ChartArea ChartScatter ChartPivot TablesBullet ChartTree mapGaugeNote: We will build a sample of the key chart types above in bold font in Lesson 7.12. Live Workshop: Building an eCommerce Dashboard.All chart types will be covered in much more detail in the next chapter: Chart Types OverviewPartner Visualizations: Built and maintained by 3rd parties. At the moment, partner visualizations are free to use.Community Visualizations: If you can’t find your desired visualization among the available Google and Partner visualizations, you can build or have a developer custom build a visualization for you.Here you can find the technical documentation on how to build a community visualization: https://developers.google.com/datastudio/visualizationYou may view an up to date list of Google and Partner visualizations here: https://lookerstudio.google.com/visualizationInteract with DataThere are several ways a viewer can interact with your Looker Studio reports:Date Range Control: Adjust date range of the report or charts displayed.Filter Control or Sliders: Filter data to see only a subset of your data.Chart Interactions: If cross-filtering is enabled in your report charts, you can filter data in a report page by simply clicking on a chart part like a country in a map or a dimension in a table.Links & Report Navigations: Add links to your report page so you can go from one page to another or to a specific URL.Data Control: Change the data source being used in the report which is specially helpful when you’re managing multiple accounts like Google Analytics.Share Your DashboardsYou can share View or Edit access to your Looker Studio reports, just like how you share a Google Document or Google Sheet.Looker Studio Reports can be shared with:Specific People: Simply enter the Google email of the people you want to share your report with on the Share pop-up window.Anyone with the Link: Share a link that can be viewed by people with the link, regardless if they’re logged in or not to their Google account.Publicly on Internet: With this option selected, Google can crawl your report so that people can find it even if they do not have your report link, just like a website. A report shared this way might even rank on Google SERPs.Scheduled Emails: You can schedule the sending of a PDF version of a report to specific people.Live Workshop AgendaIn the following lessons, we will go over:Basic Overview of Looker Studio InterfaceCreate a Simple eCommerce DashboardIn this chapter:1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1/11-looker-studio-masterclass-program-structure","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 1.1. Looker Studio Masterclass Program StructureWelcome to Looker Studio Masterclass!Dive into the exciting world of Looker Studio and learn how to effectively and profitably use dashboards in your business. We're kicking things off with Looker Studio Essentials. This section will equip you with the foundational knowledge you need to excel in the Looker Studio.Data Studio Essentials: ObjectivesToday's mission is twofold:Quickly cover the basics: We'll go over the absolute fundamentals of Data Studio. Some of these might seem simple, but we'll move fast.High-level overview of key features: We'll introduce you to the main features of Data Studio by creating a ""Simply Commerce"" dashboard from scratch.In just 60 to 90 minutes, we'll construct a complete dashboard side by side. Buckle up, and let's get started!"
"https://lookerstudiomasterclass.com/chapter-1-looker-studio-essentials-1","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. Chapter 1: Looker Studio EssentialsIn this chapter, we will quickly cover the basics of Looker Studio and get familiar with the user interface and then we’ll see a high-level overview of most key features of Looker Studio through building a simple eCommerce dashboard from scratch.Learning ObjectivesUnderstand the basics and key features of Looker Studio.Learn how to connect to various data sources using different types of connectors.Gain knowledge about Looker Studio’s data collection and transformation options.Explore visualization techniques and adding interactions in Looker Studio.Discover how to share Looker Studio reports with others.Main Concepts and TopicsLooker Studio is a powerful tool to create insightful and interactive dashboards.Connect to data sources using Google Connectors, Partner Connectors, and Community Connectors.Collect data through controls and parameters such as checkboxes, input boxes, sliders, and more.Transform data using aggregation, mathematical calculations, blending, grouping, and functions.Add interaction to reports with data controls, filters, chart interactions, and report navigation.Share reports through email, link sharing, public access, or scheduled PDF emails.1.1. Looker Studio Masterclass Program StructureWelcome to Looker Studio Masterclass!Dive into the exciting world of Looker Studio and learn how to effectively and profitably use dashboards in your business. We're kicking things off with Looker Studio Essentials. This section will equip you with the foundational knowledge you need to excel in the Looker Studio.Data Studio Essentials: ObjectivesToday's mission is twofold:Quickly cover the basics: We'll go over the absolute fundamentals of Data Studio. Some of these might seem simple, but we'll move fast.High-level overview of key features: We'll introduce you to the main features of Data Studio by creating a ""Simply Commerce"" dashboard from scratch.In just 60 to 90 minutes, we'll construct a complete dashboard side by side. Buckle up, and let's get started!→ 1.2. Looker Studio Essentials→ 1.3. User Interface Explained→ 1.4. Live Workshop: Creating an eCommerce Dashboard - Part 1→ 1.5. Live Workshop: Creating an eCommerce Dashboard - Part 2→ 1.6. Sharing Your ReportEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn1.1. Looker Studio Masterclass Program Structure1.2. Looker Studio Essentials1.3. User Interface Explained1.4. Live Workshop: Creating an eCommerce Dashboard - Part 11.5. Live Workshop: Creating an eCommerce Dashboard - Part 21.6. Sharing Your Report"
"https://lookerstudiomasterclass.com/96-data-blending-calculated-fields-dealing-with-nulls","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.6. Data Blending: Calculated Fields & Dealing with NullsWhen working with calculated fields in blended data sources, handling null values is essential. In some cases, null values might indicate an issue with the incoming dataset that needs to be fixed. However, if you know that null values are expected and represent a specific meaning, such as zero sales, you can use functions like IFNULL, NULLIF, or COALESCE to replace null values with a default value.Handling Nulls in Calculated FieldsUnderstand the reason for nulls: Before attempting to replace nulls, make sure you understand why they are present in your data. They might indicate a data gap or an issue with the incoming data that needs to be fixed.Use IFNULL, NULLIF, or COALESCE functions: These functions can be used to replace null values with a default value. For example, you can use IFNULL to replace a null sales value with zero, allowing you to calculate the sales conversion rate accurately.Be mindful of potential issues: Replacing null values with default values can cause problems in your calculations if not handled correctly. For instance, if you replace a null value with zero and use it as a divisor, you might encounter division by zero errors.Choose an appropriate default value: Depending on the use case and the type of data you are working with, you might want to replace null values with different default values. For example, you can replace null text values with ""Not Set"" or null numerical values with zero or one, depending on the context.Remember, always investigate the cause of null values before attempting to replace them with default values. Ensuring the accuracy and integrity of your data is critical for reliable calculations and reporting.Benefits of Calculated Fields at the Data Source LevelCreating calculated fields at the data source level, particularly within blended data sources, has two main benefits:Accessibility: When sharing a report with a team member who only has view access to the data source but can edit the report, they might not be able to create calculated fields at the data source level. However, if a blended data source is created within the report, they have ownership of that blended data source and can create calculated fields within it.Joint Key Formatting: Sometimes, joint keys might not match due to differences in formatting, case sensitivity, or other issues. Creating calculated fields at the blended data source level allows you to modify and process joint keys to ensure they match and function correctly in the blending process.These benefits make it easier for team members to collaborate on reports and help ensure that data blending works correctly, even when dealing with joint keys that require special formatting or processing.In this chapter:→ 9.2. One Chart, One Data Source→ 9.3. Data Blending: Behind the Scenes - Theory→ 9.4. Data Blending: The Simple Blend→ 9.5. Data Blending: Behind The Scenes - Live Demo→ 9.6. Data Blending: Calculated Fields & Dealing with NullsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/95-data-blending-behind-the-scenes-live-demo","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.5. Data Blending: Behind The Scenes - Live DemoUnderstanding Data Blending with a Live ExampleWe previously explored data blending in slides. Now, let's examine how it works with real tables in Looker Studio. Imagine we have two tables: one with dates and clicks from the 1st to the 6th of March 2021, and another with dates and sales for some of those dates. However, we don't have the number of sales for all of the dates.When data blending is applied, it will return a table with all the dates from the left data source, clicks from the left data source, and sales where it can find it from the right data source. When it cannot find matching data, it will show ""null"" values.Key Takeaways from the Live ExampleJoint key: In this example, the joint key is ""Date."" It is essential to have one or more joint keys to blend data.Left join: In this scenario, we use a left join with one condition – that the date in Table 1 should exactly match the date in Table 2 for data from Table 2 to be written.Nulls: Null values are not zeros or empty strings. They essentially mean ""nothing"" and don't have a field type. It's crucial to differentiate null values from zero, especially when dealing with missing data.Missing data representation: In Looker Studio, you can choose how to represent missing data in tables. Options include showing ""null"" as it is, a dash, ""no data,"" zero, or blank. However, zero and blank can be confusing, as they may not accurately represent the data.Remember that null values might indicate gaps in your data that need to be fixed. It's good practice to show ""null"" unless you're certain that missing data means zero.Dealing with Null Values and Related IssuesWhen calculating averages, nulls can affect the results. Let's explore how Looker Studio handles nulls and the potential problems with replacing null values with zeros.Example: Averaging Sales with Null ValuesSuppose you want to calculate the average of sales data that includes null values. When Looker Studio calculates the average, it correctly ignores the null values. However, if you replace the null values with zeros, the calculated average might appear incorrect, especially to someone manually calculating it. This is why showing null values instead of zeros is a better practice.Common Issues in Blending DataIn some cases, you may encounter data application issues when blending data. For example, imagine you have data on clicks and sales for different states on different days. When blending this data, you may end up with duplicate click values, which can lead to incorrect results.To fix data application issues, you can either:Aggregate the right dataset: Remove the unnecessary field (e.g., state) from the right dataset, causing Looker Studio to aggregate the sales data by date. This will result in one sales value for each day, ensuring correct blending.Break down the data: Break down the data by both date and state (e.g., clicks from New York and clicks from California). This will allow you to join the data based on two different values (date and state), which will ensure accurate reporting.Keeping Blended Data SimpleWhen creating blended data sources in Looker Studio, it's easy to get carried away and include numerous metrics and dimensions. However, this can lead to overcomplicated and confusing data sources, which might result in incorrect numbers or duplicate values.To avoid these issues, it's best to keep your blended data sources as simple as possible. Focus on including only the necessary metrics and dimensions for the resulting chart or visualization you want to create. This will make it easier to manage, understand, and troubleshoot your data blends.Remember, a simple and streamlined approach to data blending can save you time and prevent potential errors in your reports.In this chapter:→ 9.2. One Chart, One Data Source→ 9.3. Data Blending: Behind the Scenes - Theory→ 9.4. Data Blending: The Simple Blend→ 9.5. Data Blending: Behind The Scenes - Live Demo→ 9.6. Data Blending: Calculated Fields & Dealing with NullsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/94-data-blending-the-simple-blend","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.4. Data Blending: The Simple BlendLet's dive into Looker Studio and explore the simplest form of data blending. Imagine we have sales data from a Google Sheet and another data point such as the number of clicks, impressions, or cost from another data source like a GA demo account. Although these are not tables, they're simple numbers that can be blended together to provide valuable insights.The Need for Blending MetricsWe want to access both of these metrics in a single data source. But why do we need sales and clicks in a single data source? The answer is simple: advantage conversion. We may want to calculate conversion rates, ratios, or even add or subtract these metrics from each other. However, we can't do that because they exist in separate data sources, and one chart cannot be connected to more than one data source.Blending Data in Looker StudioTo blend these data points, we'll select the two scorecards from the different data sources that we want to combine. By right-clicking and selecting ""blend data,"" a new scorecard will appear with the blended data. This new data source is called ""blended data number one.""In the blended data source, we only have access to two fields: clicks and sales. Looker Studio tries to guess what kind of calculations we want to make, such as clicks divided by sales. However, we may want to divide sales by clicks instead. We can click on the metric to either show the number of clicks directly or create a field to do the opposite calculation, such as the sum of sales divided by the sum of clicks.Remember, when blending data, it's essential to ensure that the join keys in both data sources have a one-to-one relationship, meaning that each key appears only once in each data source.Simple Self BlendSometimes, you might want to blend two subsets of metrics from the same data source. This process is called a simple self blend. In this lesson, we'll learn how to blend two metrics from the same data source with different filters, segments, or date ranges applied.Working with Subsets of MetricsImagine we have Google Analytics as a data source, and we want to blend two subsets of the total events metric with different filters applied. For example, we want to calculate the conversion rate of a contact form by dividing the number of submissions by the number of impressions.However, we cannot use a subset of a metric with a specific filter applied in a calculation directly. Instead, we can blend the data source with itself to create a self blend.Blending Subsets of MetricsTo blend the two subsets of metrics, we'll select the two scorecards with the specific filters applied. In our example, both scorecards show the total events metric but with different filters applied for contact form submissions and contact form impressions.When we blend the data, Looker Studio automatically tries to figure out the calculation we want to perform. In our example, it divides the number of contact form submissions by the number of contact form impressions.Data blending allows us to define subsets of metrics, either by segmenting, filtering, or applying a specific date range as a single metric, and then use them in calculations.Applying Date RangesWhen blending data with different date ranges, you might need to reapply the date ranges in the blended data source to ensure the calculation is accurate. In our example, we had to reapply the date ranges for contact form submissions in 2021 and 2022 to calculate the correct conversion rate.Use Cases for Simple Self BlendsSimple self blends can be particularly useful for funnel tracking. If you have a funnel with multiple steps, you can filter page views or events by each step in the funnel and blend them together. This process allows you to report on the number of users across the funnel and use the segmented metrics in calculations.In this chapter:→ 9.2. One Chart, One Data Source→ 9.3. Data Blending: Behind the Scenes - Theory→ 9.4. Data Blending: The Simple Blend→ 9.5. Data Blending: Behind The Scenes - Live Demo→ 9.6. Data Blending: Calculated Fields & Dealing with NullsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/93-data-blending-behind-the-scenes-theory","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.3. Data Blending: Behind the Scenes - TheoryData blending combines data from different data sources to generate a single, unified data set. In this lesson, we'll focus on the left join method, which retains all the records from the left data source and combines them with matching records from the right data source based on a join key or condition.Left JoinImagine two circles, each representing a data source. The left circle represents the left data source, and the right circle represents the right data source. Data blending using left join works by taking all the records from the left data source and combining them with matching records from the right data source based on the join key or condition.If there is data in the right data source that doesn't match anything in the left data source, it will be left out of the blended data set.Example:Consider the following example: you have two tables, one with dates and clicks from an ad platform (left data source) and another with dates and offline sales from a CRM (right data source).To blend the data, you'll use the ""date"" field as the join key. The blended data will retain all the records from the left data source (ad platform) and combine them with the matching records from the right data source (CRM). If a date from the left data source has no matching date in the right data source, the sales value will be unknown, but the clicks data will still be retained in the blended data set.Key PointsData blending with left join retains all records from the left data source and combines them with matching records from the right data source based on a join key or condition.If there is data in the right data source that doesn't match anything in the left data source, it will be left out of the blended data set.Data blending is similar to performing a lookup for join keys and returning matching values.Key Concepts about Data BlendingJoin keys and join conditions must match exactly: To successfully blend data, the join keys in both data sources must match exactly. This includes matching formats, capitalization, and the absence of trailing spaces. If the join keys do not match, the blended data will return null values for those records.All matching rows from the right data source will be returned for every row in the left data source: Data blending works by looking up the join key in both data sources and returning all matching rows. This can cause duplicate data and incorrect totals if there are multiple matches for a single join key.Example: Data Blending with Multiple MatchesConsider the example where you have a table with colors and the number of searches for each color (left data source) and another table with translations of the colors into Italian (right data source). In the Italian table, there are two translations for ""red"" and ""yellow"" but only one for ""blue"".When blending the data using the color as the join key, Data Studio will return both translations for ""red"" and ""yellow"", resulting in duplicate rows for these colors. This will cause the total number of searches to be incorrect in the blended data set.To avoid this issue, you can try the following:Eliminate duplicates from the right data source before blending.Establish a one-to-one relationship between the tables that you're trying to blend with each other.When troubleshooting data blending issues, it's helpful to create the tables side by side and analyze them to understand what could be causing duplicate or incorrect totals in the blended data source.Blending Data with Different GranularityWhen blending data from different sources, it's important to ensure that the granularity of the data is consistent. If one data source has a higher level of granularity, such as sales per day, and the other has a lower level of granularity, such as sales per SKU, blending the data can cause problems such as duplicated rows and incorrect totals.Example: Sales and Clicks DataConsider a scenario where you have two data sources: one with the number of clicks per day from an ad platform and another with sales data broken down by date and SKU. When blending these data sources, the clicks data will be duplicated for each SKU, causing incorrect totals for clicks.Fixing Granularity IssuesThere are a few ways to fix this problem:Aggregate the sales data by day to match the granularity of the clicks data. This would remove the SKU breakdown and make the data sources more compatible for blending.Obtain the clicks data with the same level of granularity as the sales data, breaking it down by SKU. This would allow for a more accurate blend of the data.Mental Checklist for Data BlendingWhen working with large amounts of data, it's essential to verify that the blended data is accurate. Here's a mental checklist to ensure data is preserved correctly during the blending process:Ensure a one-to-one relationship between join keys: Make sure that the join keys are unique in both data sources to avoid duplicate rows.Check the total number of rows before and after blending: The total number of rows should remain consistent before and after blending. If the number of rows increases after blending, it's likely that there are duplicates in the data.Clean up data before blending: Go through the data sources and eliminate any inconsistencies or duplicates that may cause issues during the blending process.When working with large datasets, it's helpful to double-check the data and perform any necessary cleanup before blending to ensure accurate results. If you notice discrepancies in the blended data, such as an increase in the number of rows or incorrect totals, it's crucial to investigate the cause and resolve it before proceeding with data analysis and visualization.In this chapter:→ 9.2. One Chart, One Data Source→ 9.3. Data Blending: Behind the Scenes - Theory→ 9.4. Data Blending: The Simple Blend→ 9.5. Data Blending: Behind The Scenes - Live Demo→ 9.6. Data Blending: Calculated Fields & Dealing with NullsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/92-one-chart-one-data-source","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.2. One Chart, One Data SourceThe fundamental concept in Looker Studio is that one chart can only connect to a single data source. This rule still holds true even when working with data blending.Data Blending to the RescueData blending comes to the rescue by allowing you to merge multiple data sources into a single blended data source. For example, if you want to add five data sources to a chart from five different accounts, you can blend those five data sources into one. Now you have a single data source that combines them all, which you can connect to a single chart.Data Blending TypesInitially, Looker Studio's data blending feature only supported the ""left outer join"" method, a concept borrowed from SQL. While left outer join proved to be useful in most use cases, there were still scenarios where it couldn't help.Fortunately, Looker Studio has since added support for more join types, including full outer join, right join, inner join, and cross join. These join types offer more flexibility when blending data from different sources.For the purpose of this lesson, we'll focus on the foundations of data blending using the left join method. Once you understand the basics, you'll be able to apply the same principles to the other join types in Looker Studio.To learn more about different join types, you can search for articles or videos about SQL joins, as the concepts are similar.In this chapter:→ 9.2. One Chart, One Data Source→ 9.3. Data Blending: Behind the Scenes - Theory→ 9.4. Data Blending: The Simple Blend→ 9.5. Data Blending: Behind The Scenes - Live Demo→ 9.6. Data Blending: Calculated Fields & Dealing with NullsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/91-introduction-to-data-blending","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 9.1. Introduction to Data Blending in Looker StudioData blending is a powerful technique that helps you merge and combine data from multiple sources into a single, unified dataset. In this lesson, we'll explore the foundations of data blending and why it matters for your Looker Studio projects.Why Data Blending MattersUnderstanding the ""why"" behind data blending can help you appreciate its potential for your data modeling projects. Let's dive into some use cases to see the different end results you can achieve with data blending:1. Combine Fields from Different Data SourcesOne of the primary benefits of data blending is the ability to combine fields from different data sources on a single chart. For instance, you might want to show costs from Facebook Ads, Google Ads, and Microsoft Ads on one chart to get a comprehensive view of your marketing spend across platforms.2. Aggregate Data from the Same Marketing ToolYou can also use data blending to aggregate data from the same marketing tool but for different accounts. For example, you might want to see a roll-up chart displaying summarized data from multiple Google Ads accounts for all your clients.3. De-Aggregate and Re-Aggregate DataData blending allows you to de-aggregate and re-aggregate data, which is often the only way to achieve the desired results. We'll see an example of this later in the session.4. Blend Data for Calculated FieldsData blending enables you to create calculated fields using data from different sources. For example, you might want to calculate the conversion rate using metrics from multiple data sources.5. Enrich and Widen DataData enrichment and widening are useful techniques for adding more context to your dataset. For instance, you can enrich your data by looking up the profit margin for each SKU on an e-commerce site or by adding population data for a city. In both cases, you're ""widening"" your dataset by adding more columns of information.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/88-community-visualizations","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.8. Looker Studio Community VisualizationsExploring Public and Custom Community VisualizationsDiscover how to use community visualizations in Looker Studio, both public and custom, to enhance your reports and create engaging visualizations.What are community visualizations? Community visualizations are custom visualizations created by users to fill gaps in Looker Studio's native chart options. These visualizations can be submitted to Google, and if approved, they become publicly available for other users. Additionally, some visualizations are not submitted to Google but can still be accessed and used via their manifest URL.Accessing public community visualizations: To access public community visualizations, click on the Community Visualization option in the chart menu, then explore the available options. When you find a visualization you want to use, add it to your report, and adjust the data and style properties as needed.Using custom community visualizations: To use a custom community visualization, you'll need the manifest URL. Copy the URL, then go to the ""Add a chart"" menu and click ""Explore more"" > ""Build your own."" Paste the manifest URL, submit it, and Looker Studio will fetch the visualization for you to use in your report.Example: Funnel Pro visualization: One custom community visualization is the Funnel Pro, a highly customizable funnel chart. It automatically calculates drop percentages and conversion rates between each step, and you can modify its appearance using the style tab. You can apply any metrics to create the funnel's steps, with the order of the metrics determining the sequence of the funnel.Creating and using your own community visualizations: To create your own community visualizations, you can use HTML, CSS, and simple JavaScript. templr.pro is a community visualization that helps you create custom visualizations using these languages. You can visit https://templr.pro to access documentation, demos, and example code to get started.By using community visualizations in Looker Studio, you can enhance your reports with custom charts and visualizations that better suit your needs. This allows you to create more engaging and informative reports, providing your clients with valuable insights and a better understanding of their data.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/87-effective-communication","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.7. Effective CommunicationEnhancing Looker Studio Reports with Images and EmojisLearn how to use images, icons, and emojis to improve the visual appeal and communication effectiveness of your Looker Studio reports.Add images: You can easily add images to your Data Studio report by uploading them from your computer. This can help create a more engaging and visually appealing report.Use icons: Services like Flat Icon offer a wide range of high-quality icons that you can use to enhance your report. Download the icons and place them in your report to create a more visually interesting and informative presentation.Emojis: Emojis can be used in text, metric names, dimensions, or even the results of a case function to add some flair and personality to your report. If you're on a Mac, you can access emojis by pressing Control + Command + Space.Blend images with charts: You can use images as backgrounds and style your charts to blend in seamlessly with the image. This can create a more cohesive and visually appealing report, making it more engaging for your audience.Remember, the effectiveness of these visual elements depends on the preferences and expectations of your audience. Some clients may appreciate a more colorful and visually interesting report, while others may prefer a more straightforward presentation with tables and simple charts. Always consider your audience's preferences when designing your Data Studio reports to ensure effective communication.Creating External Annotations using Time Series Chart and Google SheetsLearn how to create external annotations on a time series chart in Looker Studio using a combination of a time series chart and data from Google Sheets.Google Sheets for comments: Create a simple Google Sheet with two columns: date and comment. This sheet will be used to store the annotations or comments for specific dates.Create a table in Looker Studio: Connect the Google Sheet to your Looker Studio report and create a table displaying the date and comment columns. This table will automatically update to show only the comments relevant to the selected date range in your report.Create a time series chart: Build a time series chart in Looker Studio to display your primary data (e.g., clicks over time). This chart will not be directly connected to the Google Sheet with the comments.Overlay a bar chart: Create a second time series chart, set to display bars, and connect it to the same Google Sheet with the comments. Remove the axis by unchecking ""Show Axis"" and adjust the bar width to match the size of the chart above.Combine the charts: Overlay the bar chart on top of the primary time series chart. This will create the appearance of vertical annotations on the primary chart, corresponding to the comments in the Google Sheet.By using this workaround, you can create dynamic external annotations that update based on the selected date range in your Looker Studio report. This can be a useful way to provide context or explanations for specific data points in your time series chart. Keep in mind that this is a workaround and not a built-in feature, so future updates to Looker Studio may introduce a more streamlined solution for creating external annotations.Embedding Analysis, Insights, and Comments for Effective CommunicationLearn how to improve communication with your clients by embedding analysis, insights, and comments directly within your Looker Studio report.Embed insights and analysis: Instead of sending separate PDFs or documents with your analysis and insights, consider embedding your comments directly within the Looker Studio report. This can help provide context and clarity for your clients as they review the data.Notify users of data gaps or anomalies: If there are specific events or known issues that affect the data, you can add explanations within the report. For example, if there is a gap in historical data, a spike in performance, or a sudden drop to zero, you can include a note to explain the reason behind it. This can help prevent confusion and unnecessary concern among report viewers.Use external annotations: As mentioned earlier, you can use external annotations to add date-specific comments to your time series charts. This can be a powerful way to communicate important information about specific data points, especially when there are notable events or anomalies.Tailor your communication: Remember that different clients may have different preferences for how they receive information. Some clients may appreciate the added context provided by embedded comments and analysis, while others may prefer a simpler, more streamlined presentation of the data. Always consider your audience and tailor your communication style accordingly.By incorporating analysis, insights, and comments directly within your Looker Studio reports, you can create a more engaging and informative experience for your clients. This can help you build trust, demonstrate your expertise, and ensure that your clients have a clear understanding of the data you are presenting.Conditional Content for Dynamic MessagingLearn how to create dynamic content and messages in your Looker Studio report using conditional content to provide more context and insights based on different criteria.Understand the limitations of conditional formatting: Looker Studio offers conditional formatting, which allows you to change the background or font color of a scorecard based on a metric range. However, this feature doesn't allow you to display different content, messages, or emojis based on different criteria.Introducing the Conditional Content component: To overcome this limitation, you can use a community component called Conditional Content. This component allows you to display different pieces of text, messages, emojis, or icons based on different criteria or ranges of a metric. This can help you create a more dynamic and engaging report.Create dynamic chart headers and messages: With Conditional Content, you can create dynamic chart headers that display different text or messages based on the metric values. This can be useful for providing additional context and insights to your clients, especially if there are specific performance thresholds or targets that need to be met.How to use Conditional Content: To use the Conditional Content component, you'll need to apply a metric and define different ranges for that metric. For each range, you can specify the content that should be displayed. This can include text, emojis, icons, or other visual elements to help communicate the desired message or insight.Sharing the component: To share the Conditional Content component with others, you'll need to provide the manifest URL for the component. This will allow your colleagues or clients to access and use the component in their own Looker Studio reports.By incorporating Conditional Content into your Looker Studio reports, you can create a more dynamic and engaging experience for your clients. This can help you communicate more effectively, provide additional context and insights, and ultimately, deliver a more impactful report.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/86-time-saving-techniques","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.6. Time Saving Techniques in Looker StudioExtracting Theme from an ImageLearn how to quickly apply a color scheme from a client's logo or image in Data Studio.When creating a report for a client, you might want to quickly apply a color scheme that matches their brand. Data Studio has a feature called ""Extract Theme from Image"" that allows you to do this.To use the ""Extract Theme from Image"" feature, follow these steps:Navigate to ""Theme and Layout"" settings in your Data Studio report.Scroll to the bottom and click on ""Extract Theme from Image.""You can either upload an image file from your computer or provide a URL for an image (e.g., the client's logo).Data Studio will then analyze the image, extract the colors, and present you with three different theme options based on the extracted colors.Select a theme option and apply it to your report.Keep in mind that this feature only changes the color scheme of your report, not the fonts or other settings. It can be a useful starting point, but you may want to further customize the theme to better suit your report's purpose and design.Reverting to a Previous ThemeLearn how to revert to a previous theme if you're not satisfied with the changes made using the ""Extract Theme from Image"" feature.If you apply a theme using the ""Extract Theme from Image"" feature and are not satisfied with the results, you can try undoing the change using the ""Undo"" button in Data Studio. Alternatively, you can refresh the page to revert to the previous settings, as long as you haven't saved the changes.Keep in mind that using the ""Extract Theme from Image"" feature might not always provide the perfect color scheme for your report. It can be a helpful starting point, but you might need to further customize the theme and layout settings to create a more visually appealing and effective report.Creating Accessible Color PalettesDiscover how to create visually appealing and compatible color palettes using the Coolors.co website.Coolors.co is a free service that helps you generate color palettes that look good together. To create a color palette using Coolers.co:Visit the Coolors.co website.Choose a starting point by either starting the generator from scratch or exploring trending palettes.Click on any of the colors to select the primary color for your palette (e.g., the client's brand color).Lock the primary color by clicking the lock icon.Press the spacebar on your keyboard to generate complementary colors for your palette.Lock any additional colors that you like, and continue pressing the spacebar until you have a complete color palette you're happy with.Importing Your Palette into Looker StudioLearn how to quickly import your custom color palette into Looker Studio using the ""Extract Theme from Image"" feature.To import your color palette into Looker Studio:Take a screenshot or save the color palette image from Coolers.co to your computer.In Data Studio, navigate to ""Theme and Layout"" settings.Click on ""Extract Theme from Image"" and upload the saved color palette image.Looker Studio will extract the colors from the image and apply them to your report.Adjusting Colors for Accessibility (Color Blindness)Discover how to create color palettes that are accessible to people with color blindness using Coolors.co's built-in accessibility features.To ensure your color palette is accessible for people with color blindness:In Coolors.co, click on the ""Accessibility Tools"" icon (eye symbol) in the top right corner of the screen.Select the type of color blindness from the dropdown menu to see how the contrast between the colors in your palette will look for people with that type of color blindness.Test your color palette across all types of color blindness to ensure it remains accessible and visually appealing for all users.By using these tools and techniques, you can create visually appealing and accessible color palettes for your Looker Studio reports that cater to a wide range of users, including those with color blindness.Copying and Pasting Styles for ComponentsDiscover how to copy and paste styles for components in Data Studio, saving time and ensuring consistency in your report design.When you want to apply the same style to multiple components in Data Studio without manually adjusting each component's settings, you can use the ""Copy and Paste Style"" feature:Select the component with the desired style.Press Ctrl+C (Windows) or Cmd+C (Mac) to copy the component.Select one or multiple components you want to apply the style to.Right-click on one of the selected components and choose ""Paste special"" > ""Paste style only.""This method allows you to quickly apply the same style, such as font, border, margin, and padding settings, to multiple components in your report, ensuring a consistent design and saving time.Using the ""Copy and Paste Style"" feature in Data Studio can help you maintain a consistent look and feel throughout your report while significantly reducing the time spent on manually adjusting the style of each component.Selecting Multiple Components for EditingLearn how to select multiple components at once in Data Studio, making it easy to apply changes to several items simultaneously.Bulk selection is a useful feature in Data Studio when you want to apply changes to multiple components at once. Here's how you can use bulk selection to edit multiple components:Right-click on an empty area of the page to open the context menu.Hover over the ""Select"" option, and you'll see several options for selecting components:Select all: Selects all components on the page.Select all controls: Selects all control components (e.g., filter controls) on the page.Select all charts and controls: Selects all charts and controls on the page.Alternatively, you can right-click on a specific component and choose one of the following options:Select all [component type] on the page: Selects all components of the same type as the selected component (e.g., all scorecards).Select all charts with [data source] on the page: Selects all charts with the same data source as the selected component (e.g., all charts using Google Analytics data).Once you have made your selection, you can edit the components simultaneously, such as applying a consistent style or adjusting the settings.Please note that copying the format of a specific metric, like the currency symbol, cannot be done through bulk selection or copying styles, as it is a data source level setting, not a component style setting.Copying and Pasting Charts Between ReportsLearn how to copy and paste charts between reports in Looker Studio, making it easier to create templates and reuse visuals for multiple clients.Copying and pasting charts between reports in Looker Studio can be a powerful way to create templates and reuse visuals for multiple clients. However, sometimes you may encounter issues when trying to paste charts into a new report. This is usually due to data source or data connector limitations.To successfully copy and paste charts between reports, follow these steps:Ensure that the chart you want to copy is connected to a reusable data source. Embedded data sources live within a single report and cannot be reused in another report.Copy the chart from the original report.Go to the new report where you want to paste the chart.Click ""Paste"" or use the keyboard shortcut Ctrl+V (Windows) or Cmd+V (Mac). If the reusable data source is not already in the new report, Data Studio will prompt you to add the data source to the report.Click ""Add to report"" to add the reusable data source to the new report.The chart will now be pasted into the new report, connected to the same reusable data source.By using reusable data sources and ensuring you have the appropriate permissions, you can easily copy and paste charts between reports, making it much more efficient to create consistent visuals for different clients.Keyboard Shortcuts in Looker StudioDiscover helpful keyboard shortcuts in Looker Studio to improve efficiency and streamline your workflow.Using keyboard shortcuts in Looker Studio can greatly improve your efficiency and make your workflow more seamless. Here are some useful shortcuts:Arrow keys: Navigate between pages when no component is selected.Ctrl + Shift + E (Cmd + Shift + E on Mac): Refresh the data source.Ctrl + M (Cmd + M on Mac): Create a new page.Ctrl + D (Cmd + D on Mac): Duplicate a selected component.Alt + Shift + V (Option + Shift + V on Mac): Paste the style of a component without pasting its content.While not all keyboard shortcuts are documented by Google, these are some of the most helpful shortcuts to improve your experience in Looker Studio. Feel free to explore and experiment with other shortcuts to find the ones that work best for your workflowIn this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/85-page-level-theme-layout-settings","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.5. Page Level Theme & Layout SettingsOverriding Report-Level Settings at the Page LevelLearn how to override report-level settings for specific pages in Data Studio.In Data Studio, you can override certain report-level settings at the page level. This is helpful when you want to customize the appearance or layout of a specific page without affecting other pages in the report.Accessing Page-Level SettingsUnderstand how to access and modify page-level settings in Data Studio.To access and modify page-level settings in Data Studio, follow these steps:Navigate to the page you want to customize.Right-click on an empty space on the page (not on a component).Select ""Current Page Settings.""You can also access the current page settings by clicking on ""Page"" in the top menu and selecting ""Current Page Settings.""Customizing Page-Level Style SettingsLearn how to change the background color and canvas size for a specific page in Data Studio.In the ""Current Page Settings"" panel, you can customize the following style settings:Background color: Change the background color of the selected page without affecting the other pages in the report.Canvas size: Adjust the canvas size (width and height) of the selected page. This is particularly useful for pages that require more vertical or horizontal space compared to other pages in the report.You can always reset the settings to the report-level defaults if needed.Page-level theme and layout settings in Data Studio allow you to customize specific pages in your report without affecting the overall report design. By accessing the ""Current Page Settings"" panel, you can change the background color and canvas size of a selected page to create a unique look or accommodate more content. This feature is especially helpful for reports with varying page lengths or when you want to highlight specific pages.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/84-dimension-color-management","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.4. Dimension Color Management in Looker StudioEnsuring Consistent Usage of ColorsLearn the importance of using consistent colors for the same entities across different charts in a report.Using consistent colors for the same entities, such as countries or devices, across different charts in a report helps reduce confusion for the viewer. It's essential to manage colors in Data Studio effectively to maintain consistency.Dimension Color ValuesUnderstand how to use dimension values to manage colors in Data Studio.Looker Studio has a feature called Dimension Values that allows you to manage colors for different dimensions consistently. To use Dimension Values, follow these steps:In your report, click on the ""Style"" tab for any chart.Navigate to the ""Dimension Values"" section.Select the dimension you want to manage colors for (e.g., Canada or United States).Choose a color for each dimension you want to customize.Applying Dimension Color Values to ChartsLearn how to apply dimension values to charts to ensure consistent color usage.Once you've set your preferred colors for dimensions using Dimension Values, you'll need to apply these colors to your charts. To do this:Select a chart in your report.In the chart's Style settings, look for the ""Color By"" option.Change the ""Color By"" setting from ""Series Order"" to ""Dimension Values.""By setting your charts to use Dimension Values, you'll ensure that they display consistent colors for the same entities throughout your report.Dimension Color Management is an essential aspect of creating visually consistent and easy-to-understand reports in Data Studio. By using Dimension Values to manage colors and applying them to your charts, you can create reports that maintain consistent color usage for the same entities, making it easier for viewers to comprehend the data presented.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/83-theme-customization","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.3. Looker Studio Theme CustomizationLayout vs. Theme CustomizationLearn the difference between layout and theme customizations in Data Studio.Layout customizations focus on the sizes, canvas size, and grid size of your report. Theme customizations deal with the colors, fonts, and overall appearance of your report.Global SettingsUnderstand how global settings affect your report.When you set your theme customization, it will apply globally to any new page or chart that you create. It's best to set your preferred theme at the beginning of creating a report so that it applies to everything by default. Remember, you can always override these settings at the chart level.Theme ElementsLearn about the different theme elements you can customize in Data Studio.You can customize the following theme elements:Report backgroundFonts and their colorsComponent backgroundBorder settingsChart Palette and Chart HeadersUnderstand how to customize the chart palette and chart headers.You can set the chart palette colors for your report, determining the order in which categories are displayed. Additionally, you can adjust chart headers, choosing to show them always, on hover, or not at all. Setting chart headers to ""show on hover"" or selectively showing them can help create a cleaner report.Theme customization is an essential aspect of creating visually appealing and functional reports in Data Studio. By understanding the various elements you can customize and how global settings work, you can create reports that cater to your specific needs and preferences while maintaining a consistent and polished look.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/82-report-layout-customization","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.2. Report Layout CustomizationIn this lesson, we'll explore layout customization for your data dashboard. After connecting your data sources and selecting metrics and dimensions, it's time to determine the best layout for your dashboard. We'll discuss various options, including the STQA (subject, topic, question, answer) framework, and how to adjust settings in Data Studio.Setting Up Your CanvasStart with a blank canvas.When you first create a Data Studio dashboard, you'll begin with a blank canvas. This is where you'll build your report. Familiarize yourself with the menu items and properties available.Adjusting Theme and Layout SettingsFind what you need in the sidebar.When you select components or charts, you'll have access to theme and layout settings in the sidebar. Here, you'll find options for layouts and theme settings. Let's start with layouts.Adjusting View Mode OptionsCustomize your dashboard's appearance.View mode determines how users consume your report. Here are some options you can adjust:Header Visibility: Decide if you want the header (top part of the page) to be visible or not. You can choose from ""Always Show,"" ""Auto Hide,"" or ""Initially Hidden."" The last option is recommended for a more immersive experience.Navigation: Choose how users can navigate between pages in your report. Options include ""Left Navigation,"" ""Tab,"" ""Top Left,"" and ""Hidden."" Each choice provides a different user experience.Creating an Immersive ExperienceGuide users through your report.For a more engaging experience, you can hide the navigation and create in-page navigation on the canvas by manually linking between pages. This allows you to selectively guide users through your report and control the way they consume information.Respecting Report ThemesEnsure consistency in your design.Enable the ""Respect Report Theme"" setting to make sure the navigation adheres to the colors, fonts, and other design elements you've set in the theme settings of your report.Report Display ModesChoose the right display mode for your audience.Two display modes are available: ""Actual Size"" and ""Fit to Width."" Actual size maintains the pixel dimensions you've set for your canvas, while Fit to Width expands the report to fill the available space. Note that Fit to Width is not a responsive design and may not be suitable for users with wide monitors.Canvas SizesFind the optimal canvas size for your project.A recommended canvas width for desktop users is 1,180 pixels. The height can vary depending on your needs, but aim to minimize scrolling whenever possible.Margins and BackgroundCustomize the appearance of your canvas.You can choose to display margins around the canvas or eliminate them for a more immersive design. Adjust the canvas size as needed, and consider using a background color that expands to fill the entire page.Snapping ComponentsAlign components easily with snapping options.Snapping components to grids or smart guides helps to create a clean layout with consistent margins between elements. Experiment with different grid sizes and preferences to find the best snapping option for your design.Report Level vs. Page Level ComponentsUnderstand the difference between the two types of components.Components on a page level are unique to each page. They may look identical, but they're not connected. Copying and pasting a component between pages creates two independent instances of the component. When you want a component to be available on every page in the same position, make it a report level component.Component HierarchyLearn how to manage component layers in your report.Report level components and page level components form two separate groups of layers. You can adjust the order of components within each group by right-clicking and using the ""Order"" options like ""Bring Forward"" or ""Send Backward."" Under the layout settings, you can choose whether report level components should always be at the top or bottom of page level components.Hiding Report Level Components on Specific PagesControl the visibility of report level components when needed.In some cases, you might want to hide a report level component on a specific page. To do this, set your report level components to be at the bottom of page level components in the layout settings. Then, on the page where you want to hide the report level component, place a rectangle with the same background color as the page on top of the component. This will effectively hide the report level component on that page.Hierarchy and Overrides in Data FiltersUnderstanding HierarchyLearn how hierarchy levels work in report filters.The hierarchy for data filters in reports goes as follows:Report LevelPage LevelGroup LevelComponent LevelLower hierarchy levels will override higher hierarchy levels.Page Level OverridesSee how page level filters can be used to override report level filters.If you have a report level date range selector and want to apply a different date range on a specific page, you can create a page level date range selector. The page level date range selector will override the report level one.Group and Component Level OverridesLearn how to use group and component level filters for more specific control.You can also use group and component level filters to override filters set at higher hierarchy levels. For example, you can set a custom fixed date range on a chart (component level) to override any date range selectors at the page or report level.TL:DR;Customizing your dashboard's layout is an essential step in crafting an effective and engaging data visualization. Experiment with different settings to find the perfect balance between aesthetics and functionality. Taking the time to customize your report layout will result in a more polished and professional-looking data visualization. By considering factors such as display modes, canvas sizes, and snapping options, you can create a seamless experience for your audience. With practice, you'll develop a keen eye for design and become a true expert in report layout customization.Being able to customize report layouts, manage component hierarchy, and control the visibility of report level components on specific pages can significantly enhance the user experience. As you continue to work with report layout customization, you'll develop a deeper understanding of how these concepts work together to create powerful and flexible data visualizations.Finally, understanding the hierarchy and overrides in data filters is essential for creating flexible and powerful reports. By using filters at different hierarchy levels, you can customize the data displayed in your visualizations to cater to specific needs or scenarios.In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/81-data-visualization-mastering-your-style","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 8.1. Mastering Your Style in Looker StudioIn the last chapter, we covered best practices in data visualization, the art of storytelling, and how to choose the right chart. Here are some takeaways from the last chapter:Tell, don't just show.Remember that the goal of data visualization is to communicate information clearly and effectively. Ensure that your visualizations convey the message you want to present. Guiding your viewer through the story helps them understand the data and derive insights more easily.Color with intention.Colors play a significant role in data visualization. Use them wisely and consistently to enhance your viewer's understanding. For example, apply conditional formatting with red, green, and yellow to indicate negative, positive, and warning statuses, respectively. By doing so, you can draw attention to the most important aspects of your data.Increase Data-Ink Ratio: Less is more.Keep your visualizations clean and straightforward by reducing visual clutter. Focus on increasing the data-ink ratio – the proportion of ink used to display the data compared to the total ink used in the graphic. Simplify your charts by removing unnecessary elements and highlighting the most important information.Now that we know how do we want to visualize data, let’s actually put it in action by mastering the tools at our disposal.To make your visualizations stand out, it's crucial to become proficient with the tools you have at hand: to familiarize yourself with the features and functionalities of Looker Studio. The more comfortable you are with the tools, the more efficient and creative you can be in bringing your vision to life.We have four main sections today:Styling like a pro Time saving techniquesEffective communication Community visualizationsLet’s begin!In this chapter:→ 8.1. Styling Like a Pro→ 8.2. Report Layout Customization→ 8.3. Theme Customization→ 8.4. Dimension Color Management→ 8.5. Page Level Theme & Layout Settings→ 8.6. Time Saving Techniques→ 8.7. Effective Communication→ 8.8. Community VisualizationsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/79-eliminating-distractions-data-ink-ratio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.9. Eliminating Distractions: Data-ink RatioLet's talk about eliminating distractions with a concept called Data-Ink Ratio, introduced by Edward Tufte in 1983. Data-Ink is the non-erasable core of a graphic—the part of a visualization that actually displays data. If you remove Data-Ink, you remove essential information from the graph. The Data-Ink Ratio compares the ink used to show data with the total ink used to render the graphic. The goal is to eliminate unnecessary elements without losing any value.Take a look at a cluttered chart and think about what you can remove without losing its meaning. You might consider getting rid of background colors, shadows, gridlines, or even the Y-axis if data labels are already present. Removing these elements creates a cleaner, more straightforward visualization.Think about which lines, backgrounds, or borders you can remove to make it more readable. Also, consider whether all the displayed metrics are necessary. Do they all contribute to the story you're trying to tell? Simplify the chart by removing redundant metrics and adjusting scales for better readability. Adjust colors and line thicknesses to make the chart even clearer.The key takeaway is to always focus on showing the data. When creating a visualization, ask yourself if you're communicating information or just adding visual elements for the sake of it. Strive to make your charts clean, easy to read, and focused on the data that matters most.In this chapter:→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/78-communicating-status","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.8. Communicating Status With Conditional FormattingEffective communication of status is vital in decision-making processes. Knowing if things are very bad, okay, good, or great helps inform decisions such as hiring, firing, or promoting. This is where conditional formatting comes into play. It allows you to visually emphasize data based on specific criteria, making it more appealing and informative.Using Conditional Formatting in ScorecardsConditional formatting can be applied to scorecards to change the background color of a number based on a set of rules. For example, you could establish rules for different thresholds:Less than 2,000: Light red backgroundGreater than 20,000: Red backgroundGreater than 30,000: Green backgroundRemember, the order of the rules matters: the bottom-most rule overwrites the rules at the top. Be cautious in your setup!Applying Conditional Formatting to TablesTables also benefit from conditional formatting, allowing you to mix and match criteria for specific rules. The resulting formatting can be applied to entire rows or different cells within the table. When using conditional formatting in tables, consider who will be reading the table and what they're looking for. Highlight relevant cells to make scanning large tables with many rows more efficient.Conditional Formatting Limitations and AccessibilityWhile conditional formatting is useful, it has its limitations. For example, low contrast between background shades and numbers can make it difficult to read. Additionally, colorblind individuals may have trouble interpreting the colors used to communicate information. Be mindful of these limitations and seek ways to make your visualizations accessible to everyone.Conditional formatting is a powerful tool for communicating status and highlighting relevant data in tables and charts. When applied effectively, it creates more compelling, accessible, and informative visualizations.In this chapter:→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/77-adding-context","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.7. Adding Context to Your DashboardsIn this lesson, we will explore chart reference lines, which are crucial for providing context to your visualizations. Reference lines help to determine if a value is good or bad, by allowing comparisons to baselines, business targets, averages, competitor data, and other relevant benchmarks.Most chart types, such as bar charts and time series, can incorporate reference lines. There are two primary methods for adding reference lines:Static number (fixed target): This type of reference line is a constant value that is set based on business or client requirements. It does not change and serves as a benchmark for comparison.Dynamic reference lines: These lines are calculated based on the data displayed in the chart. They can represent the maximum, average, or minimum values and will change if the chart's data is filtered or updated.To add reference lines to a chart, select the chart and navigate to the ""style"" tab. Click on ""add a reference line"" and choose the type of reference line you wish to add. If you select a constant value, you can input the value, axis, name, color, and line style. If you select a metric, you can choose a metric from your chart and the calculation type (median, average, percentile, minimum, maximum). These dynamic reference lines will update based on the chart's data and filters.Another option for reference lines is using parameters. Parameters allow users to input custom values as reference lines. This feature provides flexibility, as users can change the reference line value without needing to contact the report creator. To set up a parameter-based reference line, choose ""parameter"" instead of ""constant value"" or ""metric"" when adding a reference line. Define the parameter and apply it to the input for the viewer to adjust as needed.In summary, chart reference lines offer valuable context to your data visualizations by allowing comparisons to various benchmarks. Utilizing static, dynamic, or parameter-based reference lines can enhance your charts and make them more informative and actionable for your audience.In this chapter:→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/76-visualizing-relationship","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.6. Visualizing RelationshipIn this lesson, we'll explore how to tell a story about the relationships between different metrics and dimensions using various chart types.Scatter ChartsScatter charts are useful for visualizing relationships between two metrics across a single dimension category. In a scatter chart, you have a number on the X-axis, another metric on the Y-axis, and points representing the relationship between these two metrics for each category of the dimension. This chart type makes it easy to identify outliers and trends in the relationship between the two metrics.Bubble ChartsA variation of the scatter chart, the bubble chart displays three metrics and one category. The bubble chart positions dots based on two metrics, just like in a scatter chart, but the size of the dot represents a third metric. This allows you to visualize the relationship between three metrics at once. However, bubble charts can be difficult to interpret for some audiences, especially if they are not familiar with this format.Time Series with Bubble ChartsAs of now, bubble charts cannot be animated with time series data. Although animated bubble charts can be visually appealing and informative, they are not yet available in most data visualization tools.Table VisualizationsSometimes, a simple table can be the best way to present data and convey insights, especially when dealing with the relationship between multiple metrics and a single dimension. Tables are often easier to read and interpret for people who are not familiar with complex chart types.In a table, you can display numbers or use bars to represent the relationship between the metrics. If you have a target value, you can include it in the table as a fixed number. Tables offer a clear and accessible way to convey information, making them a valuable tool in your data visualization arsenal.When visualizing relationships between metrics and dimensions, consider using scatter charts, bubble charts, or tables, depending on your audience's familiarity and preferences. Remember that sometimes a simple table can be the most effective way to tell a story and present data.In this chapter:→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/75-comparison-across-categories","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.5. Comparison Across CategoriesIn this lesson, we'll explore how to visualize comparisons between categories, as well as changes over time within these categories. We'll cover various chart types and their applications for effectively presenting comparative data.Bar ChartsBar charts are a favorite for comparing numbers across different categories. In a bar chart, categories are represented along the X-axis, and their corresponding values are represented by the height of the bars on the Y-axis. This presentation makes it easy to compare values side by side.Time Series with BreakdownOne way to compare categories while also showing changes over time is to use a time series chart with a breakdown dimension. This method allows you to visualize the distribution of values over time while also seeing the trend. For example, a breakdown of website users by age bracket over time can help you identify the most significant sources of traffic and how they change.Stacked Bar ChartsAnother way to compare categories over time is by using stacked bar charts. This chart type uses two different dimensions on the X-axis: one for the time and the other for the categories. This approach enables you to see the distribution of values within a specific time frame and follow the trends of each category. However, it can be more challenging to track the changes in values over time, especially for categories in the middle of the chart.Stacked line charts or area charts can also be used to display the total values and distribution of categories over time. By enabling or disabling percentage stacking, you can choose to focus on either the distribution as a percentage or the absolute values and trends.When visualizing comparisons, consider using bar charts, time series with breakdown dimensions, or stacked bar charts depending on your audience and the questions you're trying to answer. Each chart type has its pros and cons, so choose the one that best communicates the insights you want to convey.In this chapter:→ 7.6. Visualizing Relationship→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/74-visualizing-trend-over-time","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.4. Visualizing Trend over TimeIn this lesson, we will discuss how to visualize trends over time using various chart types, such as time series, bar charts, and column charts. We will also cover best practices for effectively presenting time-based data and avoiding potential pitfalls.Time Series ChartsTime series charts are a common choice for visualizing trends over time. These charts can display one or multiple series of data, allowing you to analyze trends and identify correlations or causations between different metrics. However, when displaying multiple series of lines, it's essential to use contrasting colors and line thickness to avoid clutter and ensure each line is easily distinguishable.Bar Charts Over TimeAnother approach to visualize trends over time is by using bar charts. To properly display bars over time, you should use a time series chart and set the values to be shown with bars instead of lines. This method works best when dealing with fewer categories and larger time granularities, such as months or quarters.When presenting daily data, line charts are often more effective, while weekly or monthly data can be better represented using bars. This choice depends on your goals and the specific insights you want to convey.Y-Axis ConsiderationsIt's crucial to ensure that the Y-axis in your charts starts at zero to avoid misrepresenting the data. Sometimes, visualization tools automatically apply a different minimum value to the Y-axis, which can be misleading. To avoid this issue, manually set the Y-axis minimum value to zero.To effectively visualize trends over time, consider using time series charts, bar charts, or a combination of both, depending on your data and the insights you want to convey. Keep in mind best practices for color contrast, line thickness, and Y-axis settings to ensure your visualizations accurately represent the data and are easy to understand.In this chapter:→ 7.5. Comparison Across Categories→ 7.6. Visualizing Relationship→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/73-visualizing-distribution","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.3. Visualizing Distribution in Looker Studio Visualizing the distribution of data can help us gain insights into various aspects of the data, such as understanding how different channels contribute to overall performance. In this lesson, we will discuss different chart types for displaying distribution and their respective best practices.Pie ChartsPie charts are generally considered the least effective way of displaying data distributions, especially when there are more than two or three categories. However, when there are only two categories, such as new vs. returning visitors or male vs. female, pie charts can be acceptable. Ensure you use contrasting colors for different segments and display percentage labels to improve comprehension.Stacked Bar ChartsStacked bar charts, particularly 100% stacked bar charts, are a better alternative for showing distribution across multiple categories. These charts can be presented horizontally or vertically and allow for easier comparison of category contributions than pie charts.Distribution Over TimeTo visualize the changes in distribution over time, we can use time series charts, such as area charts. Two examples of this include:100% Stacked Bar Chart by Days: By breaking down the distribution by day, week, or month, we can uncover trends and patterns that might not be visible in a single snapshot of the data. This chart type can help identify trends, such as different device usage on weekends versus weekdays.Stacked Area Chart: This chart type is a line chart with the area under each line shaded in a color. It can show how the distribution of a certain metric changes over time, revealing trends or significant events that affected the data distribution.Visualizing distribution can provide valuable insights into your data. Choose the appropriate chart type based on the number of categories and the insights you want to convey. Pie charts can be suitable for two-category distributions, while stacked bar charts and area charts are more versatile and informative for displaying data across multiple categories and over time.In this chapter:→ 7.4. Visualizing Trend over Time→ 7.5. Comparison Across Categories→ 7.6. Visualizing Relationship→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/72-visualizing-kpis-metrics","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.2. Visualizing KPIs & Metrics in Looker Studio In this lesson, we will discuss how to choose the right chart type for effectively displaying key performance indicators (KPIs) and metrics using Looker Studio.Scorecards and Custom VisualizationsTo display a single KPI or metric without any breakdown, scorecards can be used. These straightforward visualizations can show comparisons, display the full number with decimals, or display a ratio.Custom visualizations can also be employed for a more engaging presentation. For instance, you can use a custom visualization that imitates the style of Google Lighthouse Reports to display a percentage. To use custom visualizations, you need to add the manifest part to Looker Studio, which tells it where the code for that visualization is located.Bullet ChartsBullet charts can be utilized to display a number against a target, adding more context to the data being presented. With bullet charts, you can show the main value as a horizontal bar, define different ranges, compare it to the previous period, and add a target.In the configuration settings of the visualization, you can define different ranges and place your target value. This allows for a clearer representation of how the current value compares to its target and previous period values.When displaying KPIs and metrics in Looker Studio, choosing the right chart type is crucial. Scorecards and custom visualizations can effectively present single KPIs or metrics without breakdowns, while bullet charts provide a more detailed context for comparing a number against its target and previous period values. Experiment with different visualization types to find the most effective way to communicate your data.In this chapter:→ 7.3. Visualizing Distribution→ 7.4. Visualizing Trend over Time→ 7.5. Comparison Across Categories→ 7.6. Visualizing Relationship→ 7.7. Adding Context→ 7.8. Communicating Status→ 7.9. Eliminating Distractions: Data-ink Ratio→ 7.10. Using Colors in Data Visualization→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/712-report-examples-good-bad-and-great","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.12. Report  Examples: Good, Bad, and GreatIn this lesson, we'll examine examples of good, bad, and ugly dashboards to help you understand what works and what doesn't in data visualization. Let's dive in:Bad Example: YouTube Template
This dashboard is cluttered, with too much information crammed onto a single page. The numbers are truncated, and there's no context provided for the charts. The use of colors may be on-brand, but it doesn't serve the viewer. This example focuses too much on aesthetics, sacrificing usability.Bad Example: Google Ads Template
Again, this dashboard tries to fit everything onto one page. While it does highlight different sections for click-throughs, conversion rates, and cost-per-click, each section could be on its own page with more room and better visualization. A first page with KPIs and links to different pages would improve this example.Bad Example: Google Merchandise Store Template
This dashboard doesn't make good use of pages and doesn't present meaningful information. The layout is confusing, with pie charts for cities that don't effectively display the data.Good Example: Election Results Template
This single-page dashboard is divided into sections with clear headers and room around each. The charts are clean, and colors are used consistently and effectively. While there's still room for improvement, this is a solid example of a well-designed dashboard.Great Example: Core Web Vitals Template
This multi-page dashboard organizes topics across different pages. Each page is divided into sections with titles and subtitles that explain the section's purpose, and links are provided for users to access more information. Colors are used consistently and purposefully, and white space is utilized well. This is one of the best examples of report layout and presentation.Remember to prioritize clarity, organization, and usability when designing your dashboards. Avoid clutter, make good use of pages and sections, and ensure that colors are used purposefully. By following these guidelines, you'll create effective and visually appealing data visualizations.To create the eye icon used to hide and show content in this chapter we can use a community visualization called templr.pro which visualization allows you to use HTML and CSS to create custom elements in your dashboard. To access it, add the manifest URL gs://templr under ""Build your own visualization"" menu.Next chapter:→ 8. Data Visualization: Styling Like a ProEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/711-clarity-tell-dont-show","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.11. Clarity: Tell, Don’t Just Show!In data visualization, clarity is key. While the old adage suggests ""show, don't tell,"" in this case, we want to do the opposite: — Tell, don’t just show!The goal is to communicate the information being presented effectively, leaving no room for guesswork.To achieve clarity in your visualizations, consider the following best practices:Clear Titles: For each chart and section, use clear and descriptive titles that convey what is being presented, the date range, the granularity, the currency, the data source, and the frequency of updates. This helps the viewer understand the context of the data being shown.Consistent Logos and Labels: If you're sourcing data from multiple platforms, use consistent logos and labels to indicate the data source and connector. This helps the viewer understand where the data is coming from and its freshness.Informative Tooltips: Use tooltips to provide additional information about metrics, calculations, and other details without cluttering the visualization. Tooltips can be triggered by hovering over a question mark or another icon, allowing viewers to access more information if needed.Detailed Scorecards: When using scorecards, be sure to include any filters, segments, or timeframes that have been applied. This ensures that viewers understand the context of the numbers being presented.Comparison Timeframes: If you're comparing data to previous periods, include the comparison timeframe in the title. This helps the viewer understand what time period the data is being compared to.Custom Formulas: If you're using a custom formula that may not be familiar to the viewer, consider including the formula directly in the visualization or within a tooltip. This helps ensure that viewers understand how specific metrics are being calculated.By incorporating these best practices into your data visualizations, you can create clear and easy-to-understand visual representations of your data. Remember, clarity is essential to effective communication and will set your visualizations apart from others in the field.In this chapter:→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/710-using-colors-in-data-visualization","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.10. Using Colors in Data VisualizationUsing Colors PurposefullyColors play a significant role in data visualization, so it's essential to use them purposefully. While it might be tempting to use a client's branding colors throughout a report, consider the meaning behind each color to ensure effective communication.Colors have specific connotations that can impact how your audience interprets the data:Red: Indicates critical situations, bad performance, or danger. Use red sparingly and only to emphasize crucial points or areas of concern.Orange: Acts as a warning or cautionary signal. It's less severe than red but still indicates a need for attention.Green: Represents good performance or being on target. Use green to highlight positive results or safe zones.Blue: Conveys a neutral, ""just fine"" message. It's neither good nor bad, making it an ideal color for elements that don't require emphasis.Gray: Suggests insignificance or secondary information. Use gray for benchmarks or reference points that provide context but aren't the main focus.Black: Signifies importance or emphasis, especially when used in monochrome visualizations. Use black to draw attention to a particular element.When creating visualizations, be mindful of the meanings behind the colors you choose. Using colors with intention will result in more effective communication and a better experience for your audience. Remember, your primary goal is to provide valuable insights, not just to adhere to a client's branding colors.Using Colors ConsistentlyAlong with using colors purposefully, it's essential to maintain consistency in your visualizations. Consistent color use helps avoid confusion and makes it easier for your audience to understand the information being presented.One issue that can arise in visualizations is the inconsistent use of color sets for different values. For example, using different shades of blue for the same category can create confusion for the viewer. To avoid this, assign a specific color to represent a particular category consistently throughout your report.In Looker Studio, you can utilize the ""Dimension Value Colors"" feature, which allows you to assign a specific color to each category. This way, the tool will automatically apply the assigned color whenever that category appears in your visualizations, ensuring consistency and saving time.In summary, maintaining color consistency is crucial for effective data visualization. By assigning a specific color to each category and using it consistently throughout your report, you can create a more coherent and easy-to-understand visual representation of your data.In this chapter:→ 7.11. Clarity: Tell, Don’t Show!→ 7.12. Report Examples: Good, Bad, and GreatEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/71-data-visualization-best-practices","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 7.1. Data Visualization Best PracticesIn previous lessons, we've explored the importance of data aggregation, numerical analysis, and the categorization of data. We've covered techniques to process, clean, and reshape data into various groupings, such as channel groups, and have employed regular expressions to refine text. So far, our results have been presented in tables, but we haven't yet delved into the world of data visualization.This week, we will shift our focus to visualizing data. Our goal is to effectively communicate insights and tell stories with data, empowering people to find answers in the information we've prepared for them. This lesson will be divided into two parts: the first focusing on best practices, and the second on ""styling like a pro."" In this first part, we will explore the principles of data visualization, while in the second part, we will learn how to apply these principles in practice.Today's lesson will cover:Storytelling: Harnessing the power of data visualization to convey meaningful stories.Chart Selection: Choosing the right chart type to communicate your message effectively.Contextualization: Enhancing your charts with reference lines and other contextual elements.Conditional Formatting: Communicating data status by applying visual cues based on specific conditions.Color Consistency: Using colors purposefully and consistently to improve comprehension.Distraction Avoidance: Removing unnecessary clutter to increase the value and impact of your visualizations.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/69-using-case-to-extract-url-query-parameters","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.9. Using CASE to Extract URL Query ParametersHow can we extract search query parameters from a URL dimension?We can do it using CASE, CONTAINS_TEXT(), and REGEXP_EXTRACT() functions which we will demo on this lesson.
A useful application of the CASE function is extracting URL query parameters, such as custom dimensions for reporting and aggregation. In this example, we want to extract search query parameters from page URLs and aggregate the number of page views for each search query.ExampleIdentify if the page URL is a search URL by looking for the query parameter (e.g., ?q=).If found, return the search query.If not, return ""Not a Search"".Here is the CASE function:CopyCASE
  WHEN CONTAINS_TEXT(page_url, 'q=') THEN REGEXP_EXTRACT(page_url, 'q=(.*)')
  ELSE 'Not a Search'
ENDYou can use a similar pattern to extract any other query parameter relevant to your reporting or business requirements.Filtering and Creating a Dropdown MenuTo create a dropdown menu for users to filter unique values (e.g., specific search query IDs), you can use the same CASE function in a filter control. If you define the CASE function at the data source level, it will be available as a control field. Otherwise, you can create it at the chart or filter control level.In this chapter:→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/68-returning-expressions-in-case-functions","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.8. Returning Expressions in Looker Studio CASE FunctionsIn this lesson we will see CASE(), CONTAINS_TEXT(), and REGEXP_EXTRACT() functions applied to return expressions in Looker Studio.In the CASE function, you can return dynamic values or expressions instead of static, literal values. This allows for more complex and customized output based on the conditions being evaluated.ExampleIn this example, you want to extract the product title that comes directly after the product brand. Instead of returning a static value for the brand name, you want to extract the part of the product title that comes after the brand name.You can use the REGEXP_MATCH() and REGEXP_EXTRACT() functions along with the CASE function to achieve this:CopyCASE
  WHEN CONTAINS_TEXT(product_title, 'Google Cloud') THEN REGEXP_EXTRACT(product_title, 'Google Cloud (.*$)')
  WHEN CONTAINS_TEXT(product_title, 'Google') THEN REGEXP_EXTRACT(product_title, 'Google (.*$)')
  WHEN CONTAINS_TEXT(product_title, 'YouTube') THEN REGEXP_EXTRACT(product_title, 'YouTube (.*$)')
  WHEN CONTAINS_TEXT(product_title, 'Android') THEN REGEXP_EXTRACT(product_title, 'Android (.*$)')
ENDIn this example, the REGEX_EXTRACT function is used to match the pattern and extract the part of the product title that comes after the brand name. The CASE function then returns the extracted product title as a dynamic value based on the matched condition.In this chapter:→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/67-order-of-when-clauses-in-case-function","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.7. Order of WHEN Clauses in CASE Function in Looker StudioHave you ever encountered issues with your CASE custom fields not categorizing data accurately?It might be because of the succession rule when implementing CASE function with WHEN clauses in Looker Studio.CASE function evaluates criteria of each successive WHEN clause and returns the first result where the condition is true. Any remaining WHEN and ELSE clauses are not evaluated.We will see in this lesson how we can workaround this rule so we can categorize dimension fields accurately.In the CASE function, the order of WHEN clauses is crucial, as the function stops evaluating once it encounters the first matching condition. To ensure the correct results, it's essential to order your WHEN clauses from the most specific to the most generic.ExampleConsider this example where you want to extract the product brand based on the product title. You have the following criteria:If the product title contains the word ""Google,"" the brand is ""Google.""If the product title contains ""Google Cloud,"" the brand is ""Google Cloud.""If the product title contains ""YouTube,"" the brand is ""YouTube.""If the product title contains ""Android,"" the brand is ""Android.""Here's the initial formula:CopyCASE
  WHEN CONTAINS_TEXT(product_title, 'Google') THEN 'Google'
  WHEN CONTAINS_TEXT(product_title, 'Google Cloud') THEN 'Google Cloud'
  WHEN CONTAINS_TEXT(product_title, 'YouTube') THEN 'YouTube'
  WHEN CONTAINS_TEXT(product_title, 'Android') THEN 'Android'
ENDIn this example, products with ""Google Cloud"" in their title are incorrectly classified as ""Google"" because the function stops evaluating once it encounters the first matching condition. To fix this, you need to reorder the WHEN clauses, placing the more specific condition for ""Google Cloud"" before the more general condition for ""Google"":CopyCASE
  WHEN CONTAINS_TEXT(product_title, 'Google Cloud') THEN 'Google Cloud'
  WHEN CONTAINS_TEXT(product_title, 'Google') THEN 'Google'
  WHEN CONTAINS_TEXT(product_title, 'YouTube') THEN 'YouTube'
  WHEN CONTAINS_TEXT(product_title, 'Android') THEN 'Android'
ENDBy reordering the WHEN clauses, the function now correctly classifies products with ""Google Cloud"" in their title.In this chapter:→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/66-using-case-function-for-cleaning-data","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.6. Cleaning Data with CASE Function The CASE function can be utilized to clean inconsistent or messy data. In this example, we'll explore how to use the CASE function to correct inconsistencies in source medium data. We'll merge some sources, lower case their values, and replace certain values with others.ExampleSuppose you have source medium data with the following issues:""direct"" and ""none"" are represented as ""not set.""The values have mixed casing, and you want everything to be lowercase.There are multiple instances of ""Google"" in different formats, and you want to report them all as simply ""Google.""Here's how you can use the CASE function to clean this data:CopyCASE
  WHEN (source = 'not set' AND medium = 'not set') THEN 'direct none'
  WHEN (source CONTAINS 'Google') THEN CONCAT('google ', medium)
  ELSE LOWER(source, medium)
ENDThis function performs the following actions:When the source is ""not set"" and the medium is ""not set,"" it returns ""direct none.""When the source contains the word ""Google,"" it concatenates ""google"" with the value of the medium.Otherwise, it lowercases the source and medium values.By using the CASE function, you can clean up your data, merge sources, and modify values as needed to create a cleaner and more useful dataset for your viewers or clients.In this chapter:→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/65-tips-for-editing-formulas-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.5. Tips for Editing Formulas in Looker StudioWhen editing formulas in Google Data Studio, it's essential to know how to work with the available space effectively, format your formulas cleanly, and add comments for your future self or colleagues. Here are some tips for doing this:Space: When editing a function at the chart level, the space is limited. However, when editing at the data source level, you'll have more space to work with.Entering new lines: When writing formulas, you may need to hit the ""Enter"" key multiple times (at least twice) to create a new line.Formatting with tabs: Use the ""Tab"" key to indent your formulas for better readability. If it doesn't work at first, try hitting ""Tab"" twice.Automatic formatting: There is no automatic formatting in Data Studio, but you can try to format your formulas by clicking ""Format Formula."" Note that the results may not always be perfect, and you might need to adjust the formatting manually.Adding comments: Although not documented in Data Studio, you can use double hashtags (##) to add comments to your formulas. This is a good practice, especially when collaborating with others or when you need to explain the logic behind your formula.Remember, these tips can help you create clean, easy-to-understand formulas, making it easier for you and your colleagues to work with them in the future.In this chapter:→ 6.6. Using CASE Function for Cleaning Data→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/64-case-functions-with-multiple-clauses","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.4. CASE Functions with Multiple WHEN ClausesLet's examine a practical use case for the CASE function with multiple WHEN clauses. Assume you're working with a data source that doesn't group countries into continents, and you want to report on continents instead of individual countries. You can use the CASE function to define continents as groups of countries like this:CopyCASE
  WHEN Country IN ('United States', 'Canada') THEN 'Americas'
  WHEN Country IN ('Germany', 'France', 'United Kingdom', 'Spain') THEN 'Europe'
  WHEN Country IN ('India', 'China', 'Japan') THEN 'Asia'
  ELSE 'Not grouped'
ENDHere, we have three different WHEN clauses to classify countries into continents (Americas, Europe, and Asia). You can expand this list as needed. The CASE function's result can be used for content grouping, page grouping, channel grouping, or any other grouping based on your business logic.When creating a CASE function, it's a good idea to start with the dimension in the table to verify that the function is working correctly. This allows you to check the result row by row, as the CASE function works at the row level. However, once the function is working as expected, you can remove the original dimension from the table.In this chapter:→ 6.5. Tips for Editing Formulas in Looker Studio→ 6.6. Using CASE Function for Cleaning Data→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/63-grouping-404-pages-with-case-function","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.3. Grouping 404 Pages with CASE Function In this demo we will see how the CASE() function works as we utilize it to identify web pages with 404 errors.Let's examine another example of the CASE function to understand its use better.Suppose you want to identify 404 pages in your data. A 404 page has the page title ""Page unavailable."" Using the CASE function, you can categorize pages as either ""404"" or ""Not 404.""Here's the CASE function to achieve this:CopyCASE
  WHEN PageTitle = 'Page unavailable' THEN '404'
  ELSE 'Not 404'
ENDIn this example, if the page title is ""Page unavailable,"" the function returns ""404."" Otherwise, it returns ""Not 404."" Note that you could also use the IF function in this case, as there are only two categories:CopyIF(PageTitle = 'Page unavailable', '404', 'Not 404')This IF function would produce the same result as the CASE function in this example. Using the CASE function here helps us understand how it works, even though it's not strictly necessary for this specific scenario.In this chapter:→ 6.4. CASE Functions with Multiple Clauses→ 6.5. Tips for Editing Formulas in Looker Studio→ 6.6. Using CASE Function for Cleaning Data→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/62-the-case-function","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.2. The CASE Function in Looker StudioLet's dive into a more advanced function for categorizing data: the CASE function.The CASE FunctionImagine working with a client that only operates in certain US states. They don't expect any conversions from non-serviceable states. In this scenario, you'd want to categorize all states into either serviceable or non-serviceable. The CASE function is perfect for this.Let's consider a similar example with countries. You might have an e-commerce store that only ships to certain countries. You can categorize your traffic into serviceable or non-serviceable countries using the CASE function.The basic structure of the CASE function is as follows:CopyCASE
  WHEN condition1 THEN result1
  WHEN condition2 THEN result2
  ...
  ELSE default_result
ENDThe CASE function starts with the CASE keyword and ends with the END keyword. Between these keywords, you can have as many WHEN and THEN clauses as you want. Each WHEN clause has a condition, which could be any expression that returns true or false. If the condition is true, the value after the corresponding THEN clause will be returned.Here's an example of using the CASE function:CopyCASE
  WHEN Country IN ('United States', 'Canada') THEN 'Serviceable'
  ELSE 'Non-serviceable'
ENDIn this example, if the country is in the United States or Canada, the function returns ""Serviceable."" Otherwise, it returns ""Non-serviceable.""Keep in mind that the CASE function can only be used with WHEN, not with IF. The IF example was only used to help illustrate how the function works.The IN OperatorThe CASE function example above introduced the IN operator, which is useful when you want to check if a value is equal to any of the values listed within the parentheses. It returns true if the value of the dimension matches any of the values listed in the IN operator.For example:CopyCountry IN ('United States', 'Canada')This expression returns true if the country is either the United States or Canada.Keep in mind that the IN operator in Looker Studio is case-sensitive.In this chapter:→ 6.3. Grouping 404 Pages with CASE Function→ 6.4. CASE Functions with Multiple Clauses→ 6.5. Tips for Editing Formulas in Looker Studio→ 6.6. Using CASE Function for Cleaning Data→ 6.7. Order of WHEN Clauses in CASE Function→ 6.8. Returning Expressions in CASE Functions→ 6.9. Using CASE to Extract URL Query Parameters→ 6.10. Mixing Dimension & Metrics in CASE→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/612-misc-functions-image-hyperlink","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.12. IMAGE() & HYPERLINK() in Looker StudioWe can use the HYPERLINK() function when we have a link or fields that we can combine to create a link. This allows our report users to easily navigate or go to the link we’re presenting in our dashboard reports with just one click.We will also discuss in this lesson how this applies when we have an email address field and we want our report viewers to be able to easily email that person.The IMAGE() function allows us to load an image from a URL field or constructed URL field on the data-source level.This is a useful feature when we are reporting on display campaigns since it gives our report users better context on the data we are presenting.In this section, we'll explore two miscellaneous functions in Data Studio: IMAGE() and HYPERLINK(). These functions are particularly useful when dealing with image URLs and clickable links in your data.IMAGE()The IMAGE() function is used to display images in Data Studio when you have an image URL in your data source. It is important to note that this function can only be defined at the data source level. To use the IMAGE() function, simply wrap the image URL in the function, and Data Studio will display the image in a table. This is particularly useful when reporting on display campaigns and analyzing the performance of different ad visuals.HYPERLINK()The HYPERLINK() function is used to create clickable links in Data Studio. This function can be used to construct links from separate fields in your data source or directly apply a link to a table. The HYPERLINK() function takes two arguments: the URL and the link label.Some use cases for the HYPERLINK() function include:Creating dynamic email links based on report values.Dynamically linking to a filtered version of a Looker Studio page using the ""Enable viewer filters in report link"" setting in the report settings. This allows us to efficiently deploy a dashboard report without having to create different versions with different report filters.An interesting trick with tables in Data Studio is adjusting the row heights by adding a transparent image in one of the columns. By adjusting the height of the transparent image, you can effectively adjust the height of the rows in the table.Next chapter:→ 7. Data Visualization Best PracticesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/611-case-function-aggregating-results","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.11. CASE Function: Aggregating ResultsIn this lesson we will see how we can aggregate the output of a CASE function by wrapping it on another function in Looker Studio in order to create a segment of an entity based on the criteria we set.You can aggregate results of a CASE function in Data Studio using another aggregation function, such as SUM, AVERAGE, COUNT, etc. This allows you to perform complex operations on a segment of data without using a filter.ExampleImagine you want to find the total number of page views for search URLs and the number of search URLs. You can use a CASE function to achieve this:CopyCASE
  WHEN CONTAINS_TEXT(page_url, 'q=') THEN 1
  ELSE 0
ENDThis function returns 1 for search URLs and 0 for non-search URLs. You can then wrap this CASE function with the SUM function to aggregate the results:CopySUM(
  CASE
    WHEN CONTAINS_TEXT(page_url, 'q=') THEN 1
    ELSE 0
  END
)Using the SUM function in this way calculates the total number of search URLs. The same CASE function can be used to aggregate other metrics as well, such as page views, revenue, or goals.DiscussionIt is important to understand that the COUNT function wouldn't work in this example because it would count all values returned by the CASE function, including the zeros. Instead, the SUM function is used to aggregate the results, as zeros do not contribute to the total sum.You can also achieve the same result by applying a filter to count distinct values of page URLs that match the search criteria. However, using a CASE function allows you to include the non-search URLs in your calculations for other purposes.In this chapter:→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/610-mixing-dimension-metrics-in-case","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.10. Mixing Dimension & Metrics in CASE FunctionLet’s see how we can use both metric and dimension fields in one CASE function in Looker Studio.In particular, we will use a dimension value and return a series of numbers using a simple CASE formula.With the updated CASE function in Data Studio, you can now mix dimensions and metrics in a single CASE function, similar to how it works in SQL. This allows you to perform logical operations on numbers while returning text or vice versa.ExampleConsider a scenario where you have a table with page URLs and their corresponding number of page views. You want to find the total number of page views only for search URLs without applying a filter to the table.Here's the CASE function you can use:CopyCASE
  WHEN CONTAINS_TEXT(page_url, 'q=') THEN page_views
  ELSE 0
ENDThis function checks if the page URL contains the search query parameter (q=). If it does, the function returns the actual number of page views for that URL (a dynamic value). If it doesn't, the function returns a static value of 0.By using this CASE function, you can create a separate column in your table to show the number of page views only for search URLs. The grand total of this new column will display the total number of page views for search URLs, effectively creating a segment within the table without using a filter.In this chapter:→ 6.11. CASE Function: Aggregating Results→ 6.12. Misc Functions: IMAGE() & HYPERLINK()Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/61-grouping-data-with-if","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 6.1. Grouping Data with IF() in Looker StudioIn this chapter we will discuss how we can use the CASE() and IF() conditional functions to group and categorize data so we can attain how we want to present and visualize our data in our reports.We will discuss the most common and useful applications of the CASE() function especially when working with web tracking data.In this first lesson we will tackle how we can nest the IF() function to text functions to categorize metrics or dimensions into two categories.Grouping Data with IF()In our data modeling journey, we've covered data sources, aggregation methods, mathematical formulas, custom field scopes, text processing, and regular expressions. Now, it's time to dive into grouping and categorizing data using conditional functions.In this lesson, we'll explore how to group data similarly to how Google Analytics groups channels, breaking them down into categories we understand based on our business logic. We'll be using the IF() function to achieve this.Tables and Calculated FieldsRemember that everything in Looker Studio is a table. We're always working with tables, and when we're happy with the results, we connect them to charts. While grouping and categorizing data, we'll be creating custom fields or groups.There are two main conditional functions in Looker Studio to help us group and categorize data: the IF() function and the CASE function. We'll use the IF() function for simple use cases with only two options or groups, while the CASE function will be used for more complex scenarios.The IF() FunctionLet's say we previously used the REPLACE function to replace the top-level domain in a hostname and extract the subdomain. Instead of just returning the value of the subdomain, such as ""shop"" or ""www,"" we want to report the actual value in the reporting interface.For example, if the website uses ""s"" for ""shop"" or ""a,"" ""b,"" ""c"" for departments, we want to report the actual names. In this case, we can use the IF() function to return the desired result based on a condition.The IF() function takes three parameters:Condition: Any expression that returns true or falseResult if trueResult if falseHere's an example of how to use the IF() function:
CopyIF(LEFT(x,4) = ""shop"", ""Shop Section"", ""Main Website"")In this example, we check if the first five characters of the hostname are ""shop."" If they are, we return ""Shop Section""; otherwise, we return ""Main Website.""The IF() function is most effective when we only have two categories and want to group all our dimension categories into just two different categories.Note: It's important to note that the IF() function in Looker Studio is case-sensitive.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/59-regexpmatch","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.9. REGEXP_MATCH() in Looker StudioWhen we use REGEXP_MATCH(), it returns a Boolean expression: true if a string matches the defined regular expression and false if it doesn’t.Let’s see how REGEXP_MATCH() actually works in Looker Studio.Later in the lesson we will tackle how we can use REGEXP_MATCH() to create content grouping inside Looker Studio.In this chapter:→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/58-regexpextract","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.8. REGEXP_EXTRACT() in Looker StudioREGEXP_EXTRACT() function enables us to extract characters from a string and tries to match the regular expression pattern we define.This RegEx function is helpful when we want to report different categories which are not innately available on our dataset.In this chapter:→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/57-text-functions-replace-and-regexpreplace","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()One of the most handy text functions in Looker Studio is the REPLACE() function which allows us to replace a certain string with our desired text or output.Intro to RegEx FunctionsThere are times when we don’t know the exact characters we need to extract, replace, or search for in an existing text field but we know how to define the pattern of characters or text we need.When this happens, we can utilize Regular Expressions (RegEx) functions to help us work with text more efficiently and in a flexible manner.Later in the lesson we will demo how we can use the REGEXP_REPLACE() function to replace all occurrences of text which matches the regular expression pattern we define in the formula.This is useful for categorizing or cleaning campaign titles and URLs among others.In this chapter:→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/56-text-functions-lefttext-and-righttext","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()Just like in Google Sheets, LEFT_TEXT() & RIGHT_TEXT() allows us to extract a part of a text field according to the number of characters we indicate in the formula.These text functions are valuable when grouping campaigns or other dimension categories.In this chapter:→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/54-text-functions-length","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.4. Text Functions: LENGTH()LENGTH() function helps us determine the number of characters in a string of text. It’s one of the functions we can use to convert a dimension field to a metric field.In this lesson we will see how we can count the number of words of a dimension field like the search query using the LENGTH() function together with another function in Looker Studio.In this chapter:→ 5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()→ 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/53-text-functions-lower-upper","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.3. Text Functions: LOWER() & UPPER()In cases where we have to deal with mixed-case dimension values, we can use the LOWER() and UPPER() text functions to set text to uppercase or lowercase.These functions are useful for normalizing data, applying filters, and especially when dealing with case-sensitive functions.In this chapter:→ 5.4. Text Functions: LENGTH()→ 5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()→ 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/52-text-functions-concat","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.2. Text Functions in Looker Studio: CONCAT()CONCAT() function helps us concatenate or truncate two or more fields to create a new custom dimension in text format.We will see in this lesson how this is especially helpful when working with URL fields.In this chapter:→ 5.3. Text Functions: LOWER() & UPPER()→ 5.4. Text Functions: LENGTH()→ 5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()→ 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/511-additional-resources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.11. Additional ResourcesYou may refer to the following additional resources when working with text:Looker Studio Function ReferenceGoogle RE2 Regex Syntax ReferenceResources to learn and test RegExHere are some helpful websites we can visit to learn and test REGEX expressions:rubular.comregex101.comregextranlator.comregexr.comIn this chapter:→ 5.2. Text Functions: CONCAT()→ 5.3. Text Functions: LOWER() & UPPER()→ 5.4. Text Functions: LENGTH()→ 5.5. Text Functions: CONTAINS_TEXT(), STARTS_WITH(), and ENDS_WITH()→ 5.6. Text Functions: LEFT_TEXT() and RIGHT_TEXT()→ 5.7. Text Functions: REPLACE() and REGEXP_REPLACE()→ 5.8. REGEXP_EXTRACT()→ 5.9. REGEXP_MATCH()→ 5.10. Every Chart is a Table→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/510-every-chart-is-a-table","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.10. Every Chart is a TableOne of the fundamental concepts that can help us visualize data in Looker Studio is to think of every chart as a table.We will see in this lesson how this concept applies to a scorecard, time series chart, bar chart and every other visualization we have in Looker Studio.We will also discuss how the practice of creating tables first with the data we have before creating a chart makes data accuracy verification, data modeling, and data visualization easier and more efficient.In this chapter:→ 5.11. Additional ResourcesEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/51-clean-normalize-data-text-functions","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 5.1. Cleaning & Normalizing Data with Text FunctionsA prerequisite to visualizing fields in text format inside Looker Studio is cleaning and normalizing text.In the following lessons we will go over the basic functions and formulas we can use to clean and normalize our text data.These functions are:CONCAT()LOWER() & UPPER()LENGTH()CONTAINS_TEXT()STARTS_WITH() & ENDS_WITH()LEFT_TEXT() & RIGHT_TEXT()REPLACE()RegEx FunctionsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/47-scope-of-custom-fields-chart-vs-data-source","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.7. Scope of Custom Fields: Chart vs Data SourceShould we do our calculated fields at the chart level or at the data source level?In this lesson we will differentiate the behavior of chart level vs. data source level computed fields.We will learn how to centralize our custom fields and how this tactic can actually become a part of our ownership strategy.Next chapter:→ 5. Clean & Normalize Data with Text FunctionsEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/46-data-modeling-working-with-numbers","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.6. Working with Numbers in Looker StudioHow do we transform data fields inside Looker Studio to create a new field from existing metrics and dimensions?We can:Change MetricsCreate New MetricsClean & Normalize DataGroup & Categorize DataManipulate Data & TimeCreating New Metrics: Math FunctionsOne of the easiest ways to create a new metric using existing fields inside Looker Studio is to use mathematical functions.In this lesson we will see how we can use math functions to create a new metric by aggregating existing metrics or converting a dimension into a metric.Count & Count DistinctHow do we know how many event categories we have in Google Analytics? Or how many product categories our eCommerce client offers?In this lesson we differentiate count from COUNT_DISTINCT() function in Looker Studio and see how we can turn a dimension into a metric using COUNT_DISTINCT()Basic Math OperationsLet’s see how we can use basic math operations to create a new metric on chart level in Looker Studio.In particular, we will demo how to create monthly metrics such as average monthly ad spend and monthly sales using the existing fields and math operations.We will also cover how we can change the field type (such as applying a currency label) on a chart.Order of OperationsJust like writing formulas in Google Sheets, we can use parentheses to enforce the order of operations or how we want Looker Studio to execute our computed field that uses more than one math function.In this lesson we will also learn why it’s important to define our custom fields centrally so we can easily reuse them for any of our charts and edit them effortlessly when the desired formula changes.In this chapter:→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/45-auto-aggregation","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.5. What’s AUTO Aggregation in Looker Studio?Auto aggregation happens when Looker Studio, or the data connector, decides the aggregation that should be applied to a field.There are two instances when auto aggregation happens:When we use a data connector for a tool that has an API like Google AnalyticsWhen we use formulas that aggregate data on computed field level, Looker Studio applies auto aggregation on the resulting new field.Auto aggregation saves us time since we don’t need to decide on how data should work in the background. But at the same time this removes the flexibility of transforming data since we cannot edit the aggregation method of an auto aggregated field.We will be discussing some workarounds on auto aggregation in future lessons.In this chapter:→ 4.6. Data Modeling: Working with Numbers→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/44-aggregating-ratios-the-correct-method","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.4. Aggregating Ratios: The Correct MethodHave you ever had issues on a computed ratio field not showing the correct resulting data? This might be an aggregation issue.In this lesson we will understand the correct and wrong method of aggregating ratios in Looker Studio.In this chapter:→ 4.5. Auto Aggregation→ 4.6. Data Modeling: Working with Numbers→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/43-aggregation","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.3. Understanding Aggregation in Looker StudioAggregation is a fundamental data modeling function in Looker Studio.Aggregation is the act of reducing and summarizing data.In this lesson we will discuss the built-in aggregation methods available in Looker Studio and how we can utilize them to better answer our report users’ questions.Aggregation: Live DemoLet’s see how aggregation works in Looker Studio using a sample data source.In particular, we will cover:How aggregation works in a scorecardDifferent aggregation methods: Sum, Average, Minimum, Maximum, etc.How aggregation works for a dimensionAggregation per CategoryWe will cover how aggregation by category works in this demo.In addition, we will also discuss how the grand total field works differently in certain situations and when we apply aggregation by category.We will also discuss why renaming an aggregated field is a simple but important task to do to prevent confusion or data miscommunication with report users.In this chapter:→ 4.4. Aggregating Ratios: The Correct Method→ 4.5. Auto Aggregation→ 4.6. Data Modeling: Working with Numbers→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/42-all-about-data-sources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.2. Everything About Data Sources in Looker StudioThere are four types of field in Looker Studio:DimensionMetricCustom FieldParameterWe will discuss each field type and how we can easily tell the type of a field in the Data Source interface using their color, unique identifier, or legend.DimensionsDimensions describe and categorize an entity.They are usually in text format: such as the name of the landing pages on a website, job title of an employee, or the country from which a visit to a website happens.We will cover what makes a field a dimension and discuss the different forms of a dimension that we normally encounter in Looker Studio such as names, dates, boolean fields, geographic dimensions, etc.MetricsMetrics are numbers that measure dimensions.In this lesson we will discuss the different forms of metrics we can utilize in Looker Studio.Next In this chapter:→ 4.3. Aggregation→ 4.4. Aggregating Ratios: The Correct Method→ 4.5. Auto Aggregation→ 4.6. Data Modeling: Working with Numbers→ 4.7. Scope of Custom Fields: Chart vs Data SourceEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/41-introduction","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 4.1. Introduction to AggregationAfter learning the dashboard planning framework and understanding data connectors and data sources, we can now model (or transform) our data before visualization.In this chapter we will cover Data Modeling: how to shape, process, and clean data before we visualize and share it to others.Specifically, in this chapter we will discuss:Data SourcesAggregationWorking with NumbersScope of Custom FieldsData Modeling within Data Sources We learned in the previous lessons that the first place we can perform data modeling is at the source, such as setting a goal in Google Analytics or labeling campaigns in an Ad platform. And the second place we can perform data modeling on is at the Data Connector level.Modeling data at the source (the tool) and within the data connector (such as how it can be done in Dataddo, Supermetrics, or Funnel.io) are out of the scope of this course. Mainly because those are specific to the tool being used, and not the core functionalities of Looker Studio.In this chapter we will cover the third place where we can transform data to make it ready for visualization in Looker Studio, which is at the Data Source level.Every Chart is a TableIt’s fundamental to understand this concept: At its core, every chart or visualization is a table, with rows, and columns.When we perform data modeling, we do it while presenting data as a table. We will cover why in the next lessons."
"https://lookerstudiomasterclass.com/39-caching-data-freshness","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.9. Data Freshness & Caching in Looker StudioIn the data source interface, we can adjust the data freshness threshold of each data source we have for caching data and fetching data from cache.Caching in Looker StudioLooker Studio has caching capabilities to ensure faster data retrieval. Each data source has a data freshness setting, which determines how often data is fetched from the source.The default setting is usually 12 hours, but you can adjust it to one hour, four hours, or even one to 15 minutes for BigQuery. Each data source can have a unique caching and data fetching setting.How Caching WorksWhen a report loads, Looker Studio tries to extract fresh data if it's outside the data freshness threshold. However, if the data requested is the same as previously cached data and within the data freshness window, Looker Studio will use the cached data instead.For example, if you refresh a report multiple times within the 12-hour window without changing any settings, Looker Studio won't repeatedly request fresh data. But once the data freshness threshold is passed, it will fetch new data, even if the same data is being requested.Note: If you change any setting in the data requested (date range, segment, filter set, or fields), Looker Studio will need to fetch new data regardless of the data freshness setting.Identifying Cached DataWhen a report is powered by cached data within the data freshness setting, you'll see a lightning bolt icon. This icon indicates the last time fresh data was received from the data source. If the icon isn't present, it means the data was requested live from the underlying data source.Understanding data freshness and caching in Looker Studio helps you manage your data efficiently, ensuring your visualizations are both up-to-date and fast-loading.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/38-data-source-scope-embedded-vs-reusable","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.8. Embedded vs Reusable Data Sources in Looker StudioIf you’re using a number of data sources for different reports, knowing the difference between an Embedded data source and a Reusable data source and when to use each will not only be a time-saver, but also mitigates the risk of making some costly mistakes.In this lesson we will compare Embedded vs. Reusable data source in terms of location, accessibility, sharing controls, and conversion capabilities.Embedded Data SourcesFirst, let's discuss embedded data sources. These are created within a report. When you edit a report and want to connect to another data source, you create an embedded data source. Its scope is limited to the report in which it's created. It isn't shared with other reports.Embedded data sources are accessible within a single report, making it easier to manage permissions and access levels. When you duplicate or share a report, the embedded data source is copied or shared along with it.Note: You can convert an embedded data source to a reusable one if needed.Reusable Data SourcesNow, let's explore reusable data sources. These are the original data sources in Looker Studio, created from the homepage. Reusable data sources are global and accessible to all reports in your account.These are useful when you have a client with a specific business logic, and you want to apply it in a central place connected to their data source. Any report you create for that client can reference the same reusable data source, making updates and maintenance simpler.Changes to a reusable data source apply to any chart or visualization on any report referencing it. Moreover, you have more control over sharing, as reusable data sources are their own entities with separate ownership and sharing options.Note: Reusable data sources can NOT be converted back to embedded.Learning from MistakesUnderstanding the difference between embedded and reusable data sources can save you time and prevent costly mistakes. A personal story highlights this importance: after spending hours on data modeling for a client's reusable data source, the same data source was mistakenly used for another client. This resulted in confusion, wasted time, and damage to reputation.By knowing the difference between reusable and embedded data sources, you can avoid such issues and ensure your Looker Studio projects are efficient and effective.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/37-data-sources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.7. Data Sources in Looker StudioData sources play an important role in the backend of our reports since they contain the dimensions, metrics, parameters, and custom fields that we provide to our charts and visualizations.Understanding Data SourcesData sources are the backbone of Looker Studio, connecting data sets to charts and visualizations. They receive data from a Data Connector and contain fields (dimensions, metrics, and custom fields). You can perform data modeling, create custom fields, and perform aggregations within data sources.It's crucial to understand data sources, as they often play a role in any struggles you might encounter when working with data modeling, fields, and connector settings.Data Source PropertiesData sources have five properties:TitleOwnerData credentialsData freshnessScope (either embedded or reusable)Let's explore data credentials and how they control who can view data from connected data sources.Data Credentials: Owner vs. ViewerData credentials determine who can access the data in a secure dataset connected to a Looker Studio dashboard. When the data source is set to use the owner's credentials, the data flows into Looker Studio, and anyone viewing the report can see the data. To control access, you must manage who can view the report itself.However, there's another way to manage data access: viewer credentials. With viewer credentials, each individual viewer's credentials are used to authorize access to the data. If a viewer has access to the underlying dataset, they can see the data in the report. Otherwise, they can view the report, but the charts will be broken. This approach can be helpful in situations where you want to give access to data only to those who already have access to the underlying dataset.Understanding how data sources and credentials work in Looker Studio is vital for managing data access and ensuring the right people have access to the right data.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/36-partner-connectors","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.6. Looker Studio Partner ConnectorsThere are notable Partner connectors that you might want to consider when connecting your non-Google tools or datasets to Looker Studio.Notable Partner ConnectorsNot all data sources are hosted on Google tools or within the Google Marketing Platform. To bridge this gap, several partner connectors can be used to connect to other data sources. Here are four notable partner connectors:Supermetrics: Connects to over 70 different marketing analytics tools and data sets. Most of its connectors are live connections, although some use snapshot data or apply different levels of caching. Supermetrics can work around Universal GA sampling and provide fields not available in Google's built-in connector and also provide access to more fields in Google Analytics 4 than the built-in connector does. It can also perform data transformations, join data, and aggregate data from multiple accounts at once. Data can be sent to Looker Studio, Google Sheets, or BigQuery.Power My Analytics (PMA): Offers 40+ connections, with connectors using a data warehouse approach. This makes loading data quicker and faster compared to live connections. PMA can send data to Looker Studio, Google Sheets, and BigQuery as well.Funnel.io: A warehouse-based connector with many data sources available. It includes built-in data transformation features, allowing you to perform resource-intensive transformations before connecting to Looker Studio. Funnel.io supports additional destinations like BigQuery, Snowflake, and Tableau.Dataddo: A newer player in the market with 90+ connectors. It can be a live connection or use a snapshot feature for warehouse connections. Dataddo includes built-in drag-and-drop data transformation features and supports various data destinations, including Looker Studio, Redshift, Power BI, and Tableau.These partner connectors enable you to expand the range of data sources you can access and visualize within Looker Studio. By incorporating data from various marketing and analytics tools, you can create more comprehensive and insightful reports.Connecting Data SourcesConnecting data sources in Looker Studio using partner connectors is relatively simple:Choose the connector you want to use.Select the account and table within the marketing or analytics tool you want to connect to.Verify that you want to add the data source to your report.Looker Studio uses the connector to create a data source and places a table on the canvas.Understanding how to connect data sources and use partner connectors in Looker Studio can significantly enhance your data visualization capabilities. By incorporating diverse data sources, you can create more comprehensive reports and extract valuable insights from your data.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/35-google-connectors","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.5. Google Connectors in Looker StudioNotable Built-In ConnectorsGoogle offers several built-in connectors for Looker Studio. When selecting a Google connector, you'll be presented with various options. Some of the most notable connectors include:Universal Analytics and GA4: These connectors can access all data or a specific segment. For Universal Analytics, data sampling is applied, and the sample rate is shown.Google Ads: This connector can connect to a single customer account or an MCC account, supporting up to 50 accounts simultaneously.Google Search Console: With this connector, you can extract site impressions or URL impressions. It supports four different types of API requests: web data, image data, video data, and news data. You can create multiple data sources with different settings using the same connector.Google Sheets: A versatile connector that allows you to import data from other tools or even manual entries. It's quick and can connect to the entire sheet or a specific range.BigQuery: A fast and scalable petabyte-scale data warehouse managed by Google. You can connect to a single table or write a custom query to access multiple tables. It also features the BI Engine, which is only available for Looker Studio connections and enables sub-second queries and filtering.YouTube and Extract Data: YouTube allows you to access video data, while Extract Data is a special type of connector that can increase speed, security, and even de-aggregate pre-aggregated data. More details on Extract Data will be provided in future sessions.Google offers a variety of connectors to help you access and visualize data in Looker Studio. From Google Analytics to BigQuery, these connectors enable you to connect to different data sources and create versatile and comprehensive reports.We will discuss the functions, features, and limitations of these notable Google Connectors in detail.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/34-live-vs-warehoused-connectors","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.4. Live vs Warehoused Data Connectors in Looker StudioIn this lesson we will discuss the pros and cons of using a Live connector (such as Google connectors and Supermetrics) when it comes to data freshness, price, loading speed, reliability, and data transformation or modeling capability.Live ConnectorsLive connectors are all about real-time data. When a Looker Studio report loads, the data connector receives the settings from the data source, connects to the dataset through an API, and extracts data to provide it to Looker Studio. This process happens live, which means that data is fresh and up-to-date.Some pros of live connectors are:They're cheaper, as they're just lines of code that run when needed.They provide real-time data, so you always have the freshest information.However, live connectors have some cons as well:They're slower and less reliable because they depend on the dataset's API being available and quick.They usually don't involve data modeling, as it takes time and isn't very feasible.Most Google connectors are live connectors.Warehoused ConnectorsWarehoused connectors work differently. The creator of the connector sets up a data warehouse that extracts, transforms, and stores data on a schedule. This means that Looker Studio connects to a snapshot of the data in the data warehouse rather than directly to the dataset.Some benefits of warehoused connectors are:They're faster and more reliable, as they depend on the data warehouse's speed and availability.They allow for data modeling, as data can be processed and transformed within the data warehouse.However, there are drawbacks to warehoused connectors too:They're more expensive, as maintaining a data warehouse requires additional infrastructure.They're not real-time, as Looker Studio connects to snapshots of data rather than live data.Examples of warehoused connector providers include Supermetrics, Power My Analytics, and Dataddo.You can also create your own warehoused data connector using Google Sheets or BigQuery. Extract data to Google Sheets or BigQuery, transform and model it, and then connect it to Looker Studio for visualization. This approach can help create responsive, quick-to-load reports without the need for real-time data.Understanding data connectors is essential when working with Looker Studio. They are the key to connecting and visualizing data from various sources. By exploring the different types of connectors and their capabilities, you'll be better equipped to create dynamic and informative reports in Looker Studio.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/33-data-connectors","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.3. Looker Studio Data ConnectorsData connectors act as a pipeline for a report. They extract data from a dataset through an API. They can also be used to transform and aggregate data.The Role of Data ConnectorsData connectors play a crucial role in Looker Studio, as they bridge the gap between datasets (outside Looker Studio) and data sources (Inside Looker Studio). They extract data from the APIs of tools, databases, and datasets available over the internet. Some data connectors even transform and aggregate data before providing it to the data source, allowing for data modeling and transformation even before it reaches Looker Studio.Types of Data ConnectorsThere are two primary types of data connectors: Google connectors and Partner connectors.Google ConnectorsGoogle connectors are free and allow you to connect to various Google products like Google Analytics, Google Sheets, YouTube, Google BigQuery, and Google Search Console. They can also connect to databases and data warehouses such as MySQL, PostgreSQL, Amazon Redshift, and Microsoft SQL Server. Google connectors are live connectors (more on this soon).Partner connectorsPartner connectors are usually paid since developers need to spend time creating and maintaining them. These connectors are for non-Google tools and datasets that are accessible through APIs. Examples include Facebook Ads, Microsoft Ads, CRMs, Shopify, and MailChimp. Partner connectors can be either live or warehoused.When a partner connector is free, it's typically built and maintained by the tool itself, such as CallRail, a call tracking software. They offer their connector as an added value service for their product.Community ConnectorsCommunity connectors are like partner connectors but not available to the public yet. If there isn't a Google or partner connector available for a particular tool, dataset, or marketing service, you can use Google App Script to create your own connector. This custom connector will allow you to bring data into Looker Studio from ANY publicly accessible API to model and visualize.Creating a custom connector is relatively straightforward if you have access to development resources. You can even publish your connector as a partner connector, going through verification by Google and potentially monetizing it.Live vs. Warehoused ConnectorsNow that you know there are live and warehouse connections, let's briefly explain the difference:Live connectors retrieve data directly from the dataset whenever the report loads, providing up-to-date information.Warehoused connectors store a copy of the data in a separate location, such as a data warehouse, and connect to that storage for reporting purposes. This can be more efficient for larger datasets.If you want to create a connector for large amounts of data that doesn't reside in Google Sheets, you can use Google Cloud Functions or Compute Engine to create connectors between the dataset and a data warehouse like BigQuery. Then, use the free connector between Looker Studio and BigQuery provided by Google to connect to that dataset.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/32-bringing-in-your-data","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.2. Bringing in Your Data into Looker StudioData! We need data to create charts.This chapter is about providing data to our charts to present information in our Looker Studio reports.We will cover the different aspects and properties of data connectors and data sources to help us decide when to best use what kind of data connector or data source. We will tackle the dynamics of bringing data to Looker Studio.Connecting Your DataWhen creating a dashboard in Looker Studio, you'll need to bring in data to visualize. You might be wondering how much there is to say about data connectors and data sources. Well, there's actually quite a lot to explore, and today we'll dive deep into their various aspects and properties.Your Data's JourneyYour data typically resides in various datasets, such as data warehouses, databases, platforms, or marketing tools. Our goal is to bring this data into Looker Studio for visualization purposes. In Looker Studio, we have reports that can be broken down into pages, sections, and charts for data visualization.To bring in data from your datasets to Looker Studio, we use data connectors. These are scripts or pieces of code that extract data from a dataset accessible over the internet by connecting to its API.Data Connectors and Data SourcesIn Looker Studio, you'll also find data sources. A data source is a collection of settings and configurations for a data connector. It allows the data connector to use these configurations to extract data from a dataset and provide it to a chart in Looker Studio.Keep in mind that you can create multiple data sources using a single data connector. For example, you could have multiple data sources connecting to different Google Analytics accounts, all powered by a single Google Analytics data connector. Each data source contains different settings, such as which account to connect to, which credentials to use, which fields to extract, and how to cache data.Data Modeling in Looker StudioWithin a data source, you can perform data modeling, transforming, processing, and creating custom fields. Data modeling can be done outside Looker Studio, in a data warehouse or another tool like Google Analytics, but it can also be performed within Looker Studio, specifically within a data source.In summary, a data source contains settings for a data connector, uses the data connector to connect to an external dataset, and allows you to model, clean, and process data before it is provided to a chart in Looker Studio.The Data FlowThe data journey in Looker Studio can be summarized as follows: Dataset → Data Connector → Data source → Optional data modeling → and finally, the report. Understanding this flow will help you make better decisions when connecting and presenting your data in Looker Studio.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/311-assignment","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.11. Dashboard Planning Assignment Plan a dashboard using the Dashboard Plan Template.Plan a dashboard using the dashboard planning framework we’ve discussed in the previous lessons keeping in mind the following questions:What do you want to present?Who’s going to use the report?What topics are you going to talk about?How do you want to visualize data?What field are you going to visualize?What data sources are you going to use?Note: Full assignment details are indicated in the video.Data Connectors Assignment:Plan a Report & Discover Data ConnectorsResearch available Data Connectors for the tools and datasets that you work with.Are they free or paid? Live or warehoused?Do any of them have data modeling capabilities?Think how the availability of data connectors can affect your plans and priorities?Think if it is possible that a data connector, together with its modeling capabilities, be part of your ownership plan?In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/310-managing-your-data-sources","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.10. Managing Your Data SourcesIn this lesson we will go over the ways we can manage our data sources:Sharing a reusable data sourceReconnecting to a similar datasetDuplicating a data source, useful for templated data modelingConverting from Embedded to ReusableSharing Data SourcesData sources in Looker Studio can be shared with others, either individually or as part of a report. Share a reusable data source with your team members, allowing them to create their own reports using the same data source.Duplicating Data SourcesData sources, especially reusable ones, can be duplicated. When duplicating a data source, all settings, custom fields, calculations, and data modeling are duplicated as well. This is useful when working with similar datasets or projects that only require changes in the account being connected.For example, you can create a main data source with all the necessary calculations and processing, such as channel grouping or data cleaning. When working with new clients of the same type, duplicate the data source and connect it to a new account to save time.Reconnecting Data SourcesYou can reconnect a data source to a new account or the same account. This is helpful when there are issues with the connection or when using templates.Converting Data SourcesData sources can be converted from embedded to reusable, but not back to embedded.Naming ConventionSince Looker Studio doesn't have folders for reports and data sources, use a clear naming convention for easy management. Start with a 4-5 letter code for the client, followed by the name of the tool and connector being used. This helps identify the fields and behavior you can expect from the data source. Finally, include the specific entity being connected to (e.g., the name of the sheet, dataset, table, or ad account).Note: Clients or users with view-only access to your reports cannot view the title or fields within the data source. These details can only be viewed by people with edit access.By mastering these data source management techniques in Looker Studio, you can efficiently collaborate with your team and handle multiple projects with ease.In this chapter:→ 3.2. Bringing in Your Data→ 3.3. Data Connectors→ 3.4. Live vs Warehoused Connectors→ 3.5. Google Connectors→ 3.6. Partner Connectors→ 3.7. Data Sources→ 3.8. Data Source Scope: Embedded vs Reusable→ 3.9. Caching & Data Freshness→ 3.10. Managing your Data Sources→ 3.11. AssignmentEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/31-dashboard-planning-stqa-framework","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 3.1. Intro to Dashboard Planning - STQA FrameworkTo create a useful dashboard for our report viewers, we must plan its structure beforehand. Dashboard planning is thus essential for successful and efficient implementation.In this chapter, we will discuss how information hierarchy applicable to any business can be mapped to Looker Studio's hierarchy. This will enable us to plan and structure our dashboards more effectively.As an example we will go through a dashboard planning scenario following the information and dashboard hierarchy discussed in the lesson. Particularly, we will see the process of outlining and constructing a Website Usability & Engagement Report and a section that shows data about 404 Pages.In previous lessons, we created an e-commerce report and explored various built-in chart types. Today, let's talk about dashboard planning and data connectors. Later, we'll discuss data modeling, visualization, report interactions, sharing, security, and more.Planning Your DashboardWhen creating a dashboard, it's tempting to dive right in and start building. But if you want a truly useful and valuable dashboard, you should plan it in advance.To plan a dashboard, you need to understand two concepts: information hierarchy and dashboard hierarchy. We'll look at how information is structured in a client's business and how a dashboard in Looker Studio is organized.Information HierarchyWhen creating a dashboard, you usually have a main subject in mind, like website engagement. Within this subject, you have different topics, such as video engagement, scroll depth, and page visits. For each topic, you'll want to present data that answers specific questions. For example, for video engagement, you might ask:What was the percentage of video views?What were the top three videos viewed on our website?How many video views led to finishing the videos on the website?The information hierarchy consists of Subject, Topic, Question, and Answer (STQA).Dashboard HierarchyNow, let's map this information hierarchy to a Looker Studio dashboard.Subject maps to a ReportTopic maps to Pages within the reportQuestion maps to Sections on a pageAnswer maps to Charts within sectionsUse pages to declutter your dashboard and present one topic at a time. Create sections within pages to answer different types of questions about that topic. Finally, use charts within sections to answer specific questions.Example: Website Usability and Engagement ReportLet's say we're asked to create a Website Usability and Engagement Report. We can divide this subject into three topics: Engagement, Engagement by Source, and 404 Pages.Under Engagement, we'll have sections for Video Engagement and Scroll Engagement. Under Engagement by Source, we'll have a section for Micro Goals (engagement by traffic source). Under 404 Pages, we'll have sections for Total and Trend, and By URL.For each section, design charts to answer the questions you've identified. For example, in the 404 Pages topic, we could have a scorecard with conditional formatting to show the number of broken pages and how bad the situation is, and a time series chart to show the trend.Data and ChartsTo create charts, you need data. In the next part of this lesson, we'll talk about providing data to charts using data connectors.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/169-importing-google-analytics-data-to-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.9. Importing Google Analytics Data to BigQueryIn this advanced lesson, we'll explore how to import your Google Analytics data into BigQuery using a combination of Universal Analytics, Google Sheets, and Looker Studio.Using GA Add-on for SheetsFor Universal Analytics properties that don't offer free export, you can use the GA add-on for Sheets. This add-on is free and allows you to hit the API of Universal Analytics to extract data from it into a Google Sheet. This method will be useful for extracting historical data from your Universal properties and storing it alongside your G4 data.Keep in mind that this method requires manual setup and data modeling. Additionally, it involves selective replication, meaning you need to decide which dimensions and metrics you want to extract from Google Analytics to the Google Sheet.Limitations and ConsiderationsThere are some limitations when using this method:You may be restricted by the number of dimensions (7) and metrics (9) that can be requested with a single API request.You might need multiple Google Sheets and API requests to extract all your GA Universal data.The volume of data is limited by the capacity of the Google Sheet and the runtime timeout of Google App Script (90 minutes per day).Despite these limitations, this solution remains free. However, you will need to monitor and maintain your setup.G4 Data in BigQuery: Automatic & Real-timeWhen dealing with G4 data in BigQuery, things are much simpler:The process is automaticIt's close to real-timeIt's freeFull replication is availableWhatever exists in G4 will be replicated in BigQuery almost instantly. Even some fields or properties not accessible within the G4 interface will still be pushed to BigQuery.Overall, while importing Universal Analytics data into BigQuery requires more manual effort than working with G4 data, it can still be a helpful solution for managing historical data.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/168-importing-data-into-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.8 Importing Data into BigQueryWelcome to this exciting lesson on importing data into BigQuery! If you're eager to start using BigQuery and Looker Studio, you might be wondering how to bring your data (or your client's data) from different sources into BigQuery. Let's explore the various ways you can import data so you can access it, work with it, and connect it to Looker Studio.Google Analytics 4First off, Google Analytics 4 (GA4) offers free streaming export with full replication. This means that whatever you track in a GA4 property can be streamed into BigQuery in almost real-time. Before, this feature was only available for GA 360 customers who had to pay for it. Google has now made data export available in BigQuery for everyone to use, and for free.Google Sheets IntegrationBigQuery has a built-in integration with Google Sheets, making it super easy to bring your existing Google Sheet data into the platform. You can define your Google Sheet as an external table in BigQuery, so whenever you update your sheet, the data in the corresponding table will change as well. This creates a low-friction way of bringing your existing data into BigQuery and working with it.Third-Party Tools and DatabasesIf neither GA4 nor Google Sheets meets your needs, there are third-party tools that can extract data from various marketing analytics platforms and import them into BigQuery tables for you.Sometimes these tools don't have direct connectors to BigQuery; however, they may have connections to Google Sheets instead. In such cases, consider getting the required data from your tool of choice into a Google Sheet and then connecting that sheet as an external table in BigQuery.If neither of these options works for you, hiring someone skilled in app scripts or cloud functions could be a solution. They can use their knowledge of programming languages or cloud services to hit the API of your desired tool and extract data directly into BigQuery. This approach has been used successfully in the past, and with ample documentation available, developers can quickly make sense of it and help you with your data import needs.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/167-google-sheet-vs-bigquery-data-pipeline","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.7. Google Sheet vs BigQuery Data PipelineIn this lesson, we'll compare the Google Sheet-based data pipeline with the BigQuery data pipeline. We'll discuss their differences and explore why you might want to switch from one to the other in your Looker Studio projects.Traditional Google Sheet-Based Data PipelineThe traditional method of creating a data pipeline involves using multiple Google Sheets. Let's say you're working with Facebook data, Google Analytics data, and Google Ads data. You might use a connector like Supermetrics or the GA add-on for Sheets to import this information into separate sheets.Once you have all of your data in place, you would perform calculations, join tables, and manipulate the information within these sheets to create a master sheet. Finally, you'd connect this master sheet to Looker Studio for visualization and sharing with clients.The BigQuery Data PipelineThe concept behind the BigQuery data pipeline is similar but offers some key advantages in terms of efficiency and scalability.Instead of importing your Facebook, Google Analytics, and Google Ads data into separate sheets, you would import them into different BigQuery tables. From there, you'd perform your modeling and calculations within BigQuery itself.After all necessary transformations are complete, you would create a final table or view in BigQuery which can then be connected directly to Looker Studio for visualization and sharing purposes.Why Switch from Sheets to BigQuery?While both methods achieve similar results, BigQuery offers some distinct benefits over using multiple sheets:Improved performance: As your dataset grows larger or more complex over time, BigQuery can handle these increases in scale more efficiently than Sheets.Enhanced collaboration: Multiple team members can work on the same dataset simultaneously without causing conflicts.More powerful analysis: With advanced SQL capabilities at your disposal within BigQuery itself (and integration with other tools), it becomes easier to perform complex analyses with more accuracy and speed.By switching to a BigQuery data pipeline, you'll be able to harness these benefits for more efficient, powerful, and collaborative Looker Studio projects.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/166-when-should-we-consider-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.6. When Should we Consider BigQuery?The Right Time for BigQueryWhen should you consider using BigQuery with Looker Studio? It's a powerful and flexible tool, but knowing when to make the switch is important.From Google Sheets to BigQueryIf you've started with a Google Sheets-based data pipeline as your minimum viable product (MVP), you've likely tested its value and potential. Google Sheets offers less friction, making it quicker and easier to set up. However, when your proof of concept is in place and you're ready to scale, it may be time to consider BigQuery.Reaching the LimitsYou might reach the limits of Google Sheets in terms of volume or complexity. If your data modeling becomes too slow or intricate for Google Sheets, it's a sign that BigQuery could be a better fit.Complex Data ModelingSometimes the nature of the data modeling itself requires more advanced tools. For example, attribution modeling, complicated joins for data enrichment, or forecasting with machine learning are tasks that can be difficult in Google Sheets but are easier with BigQuery.Speed and User ExperienceIf report loading speed and user experience are important factors for your clients, they may benefit from switching to BigQuery. Faster load times can improve overall satisfaction with your reports.Ownership StrategyLastly, if you want to own and retain data modeling while keeping visualization in Looker Studio, using BigQuery allows you to maintain control over your ""secret sauce."" This way, you keep ownership of the data modeling layer without exposing it through visualization tools.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/165-how-fast-is-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.5. How Fast is BigQuery?BigQuery Speed in ActionLet's examine the execution details of a query I ran recently to understand how fast BigQuery can be. The query involved selecting everything from a table (using SELECT *). This table was just under 10 gigabytes in size and contained 19 million rows with 60 columns each.In total, I was working with 1,140,000,000 cells of data. The entire process took only one minute and 48 seconds for BigQuery to complete.Parallel Processing PowerDuring that brief time, BigQuery scaled in parallel and used multiple slots to process the query. Each slot represents one unit of virtual CPU processing power.Thanks to this parallel processing approach, it completed a task that would have taken a single CPU nearly 29 minutes in just under two minutes. In doing so, it shuffled through 33 gigabytes of data—far faster than what you could achieve using Google Sheets or APIs or even setting up your own server.And because this example fell within the free limits, it cost nothing!Scalability: A Real-World ExampleBigQuery's scalability is also impressive. I ran another query last week that took four hours and 26 minutes to complete. This particular query used more than 1,000 days' worth of CPU time and shuffled an astounding 85 terabytes of data.This ""impossible"" query cost $450—a price tag that underscores its value when compared to alternative methods like using your own computer or server (which likely couldn't handle such an immense task).In conclusion, BigQuery's ability to scale according to your needs while delivering results quickly makes it an invaluable tool for handling large datasets—especially if you're willing to pay for its capabilities.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/164-bigquery-pricing-explained","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.4. BigQuery Pricing ExplainedUnderstanding the cost of using BigQuery is essential for managing your budget and ensuring you're getting the most out of your data analysis. Let's break down the pricing structure.Storage PricingBigQuery offers two different pricing models: storage and analysis. For storage, you pay $0.02 per gigabyte per month, with a 50% discount if you keep the data for more than three months. Plus, you get the first 10 gigabytes per month free.10 gigabytes of text and tables is quite a lot, so if all your stored data is under this threshold, you won't pay for storage.Analysis PricingFor analysis, it's $5 per terabyte of query data processed. If you run a query that processes a terabyte of data (100 times a 10-gigabyte table), you'll pay $5 for that query. The first terabyte per month of analysis and processing is also free.To put it into perspective: if you have a 10-gigabyte table and query it 100 times per month (or about three times a day), it's entirely free.To give an example, consider Google Analytics 4 event data for Google Merchandise Store—a high-traffic website with publicly accessible BigQuery dataset—for 90 days; it comes in at less than four gigabytes in size.Businesses or sites with more traffic or larger datasets should be comfortable paying just 2 cents per gigabyte to store their data while retaining ownership.Now that we've covered pricing let's discuss how fast BigQuery processes queries in Looker Studio.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/162-why-do-we-need-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.2. Why Do We Need BigQuery?Volume of DataLet's begin with a pain point: the volume of data we can handle with our current data stack. A few years ago, I was working with a client who wanted to report and analyze transactional data. They had about 3,000 to 4,000 transactions daily, each with 50 columns of information. Even if we only kept one month of data in a Google Sheet, we were close to hitting the limit (5 million cells at that time). Now the limit is 10 million cells, but it's still not enough for larger datasets.Moreover, even at 100,000 or 200,000 cells, if you have calculations and functions to perform in the sheet, it becomes very slow.Speed of ETLETL stands for extract, transform, and load. It's the process of extracting data from a tool or source system, transforming it (modeling it or cleaning it), and loading it into another system or providing it to a visualization tool like Looker Studio.The speed of ETL matters because even if your tool can handle large amounts of data (like Google Sheets), processing that data might take a long time.Data Modeling CapabilitiesThe number of functions available in Google Sheets and Looker Studio are limited compared to what you have in SQL and BigQuery. BigQuery offers more flexibility and can handle more use cases for data analysis and data science.Lack of Data OwnershipWhen you connect Looker Studio to an external tool or API like Google Analytics or Facebook Ads API, you don't own your data anymore. You need a place where you can store your own dataset securely.Limited Ownership Over ModelingData modeling performed in Looker Studio is exposed to anyone using the report/dashboard. If you want to create an ownership strategy on your data modeling, you need a proper place to perform it.API LimitationsWhen working with APIs, there are several factors to consider:Volume of data: How many rows are you requesting? How quickly can the tool process your request?API speed: Some tools have slow APIs, which can slow down the entire process.API limits: Some APIs have limits on how much data you can request per call.Data Modeling Limitations in Looker StudioLooker Studio has limitations when it comes to data modeling capabilities compared to BigQuery or other data warehouses. For example, you can't blend more than five data sources together in Looker Studio, and the number of functions available is limited.Ownership of Modeling in Looker StudioWhen you create functions and processes in Looker Studio, anyone with access to the report/dashboard will be able to see how it's done behind the scenes. This makes it difficult to create an ownership strategy over your data modeling and processing.So, do you feel limited yet?Lack of Data OwnershipWe often spend a significant amount of time and resources collecting and cleaning quality data. This includes setting up cross-domain tracking, processing traffic sources, tagging websites, implementing user ID tracking, and more. However, once we collect this data, it often goes into marketing tools like Facebook or Google Analytics.These platforms store the data that we collect and dictate how we can access it, with what frequency, and under what limitations. This is an issue because our time and money have gone into data collection but then these platforms impose restrictions on our access to the data.Data RetentionData retention policies in some platforms may also limit how long you can keep your collected data. If you want to retain your collected data longer and have full control over its usage, analysis, and access permissions, you need a platform that allows for this flexibility.Reporting CapabilitiesThe reporting capabilities of each tool are imposed on us based on their built-in features or API limitations. For example, some clients may use an HR system that doesn't allow for easy API access or CSV exports. In extreme cases like this one mentioned earlier where clients must go through laborious processes to get their own data back from the tool they use.Limited ProcessingLimited processing capabilities in some tools can be another challenge when working with collected data. In cases where we want more freedom in processing our collected information or if we need to handle personally identifiable information (PII) securely while being legally compliant, it's essential to consider alternative platforms or solutions.In conclusion, owning your own dataset gives you more control over how it is processed and analyzed without being restricted by the limitations imposed by third-party tools or platforms. BigQuery can be an excellent solution for overcoming these challenges while providing advanced capabilities for handling large volumes of data at scaleEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1618-discussion-bigquery-and-bigquery-ml-use-cases","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.18. Discussion: BigQuery and BigQuery ML Use CasesVisualizing Recurring Revenue and Lifetime ValueClients in the product or info product space often generate revenue through recurring membership fees, which means their focus is on metrics like lifetime value, churn rates, and stick rates. While it might not be necessary to use machine learning for these calculations, BigQuery can still help create valuable visualizations.For instance, you can calculate a customer's lifetime value by simply summing up their purchases over time using SQL. If you want to calculate the number of transactions they made, just count the rows in your data.Machine Learning DimensionsIf you're interested in incorporating machine learning into this process, explore different models available within BigQuery ML. Some models are great for calculating probabilities of an event occurring (e.g., a customer churning), while others excel at time series forecasting (e.g., predicting sales volumes).For example, a linear regression model can help forecast future sales based on historical data while automatically accounting for seasonalities and holidays. This makes it easy to start with BigQuery ML - just provide your historical sales data and let the model do the rest.Effective Visualization TechniquesWhile there may not be any specific examples of interesting visualizations that come to mind immediately, it's important to focus on the sequence of creating value:Ask questions and define use casesModel data to obtain necessary numbersChoose appropriate visualizations based on who will consume the reportThe right visualization depends on who will use the report - some people might prefer tables while others need time series charts or other types of graphs.By following this sequence and considering your audience's needs, you'll create more effective reports that drive insights and decision-making within your organization using Looker Studio along with BigQuery and BigQuery ML.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1617-location-exploration-case-study-with-bigquery-and-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.17. Location Exploration Case Study with BigQuery and Looker StudioIn this advanced lesson, we'll explore a case study that demonstrates the power of using dynamic custom queries with Looker Studio and BigQuery. We will use parameters to obtain latitude and longitude data, allowing users to find people within a certain distance of their chosen coordinates.Dynamic Custom Queries in ActionImagine you have a business that wants to analyze the number of people living within a specific radius from given latitude and longitude coordinates. To accomplish this, you can create a dynamic query in Looker Studio that runs against BigQuery.First, let's define three parameters: latitude, longitude, and distance. Users will input these values in the Looker Studio interface.Next, incorporate the user-defined parameters into your custom query. This allows for real-time adjustments based on user input.For example, let's say you input 41 as the latitude value and 75 as the longitude value (it doesn't matter if it falls within the US or not). The dynamic query will then calculate how many people live within a 20-mile radius of these coordinates.Results and InsightsOnce your dynamic query returns results in Looker Studio, you can visualize them on an interactive map or chart. In our example above, we discovered that there are approximately 234,000 people within a 20-mile radius of our chosen point.By leveraging dynamic querying with BigQuery through Looker Studio, businesses can gain valuable insights into their target audience or potential customers based on location data.Without this powerful combination of tools, it would be nearly impossible to create such an interactive experience for users seeking location-based information.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1616-store-inventory-capacity-outlook-bigquery-and-looker-studio-case-study","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.16. Store Inventory Capacity Outlook: BigQuery and Looker Studio Case StudyIn this advanced lesson, we'll explore a case study where a business uses Looker Studio and BigQuery to optimize their marketing efforts by analyzing store inventory capacity.The Business ContextOur client operates around 30 stores across the United States. Each store has a specific capacity for the number of orders they can fulfill per day. The primary goal of their marketing strategy is to fill these capacities.To achieve this, they need an efficient way to allocate advertising resources based on each store's needs. That's where Looker Studio and BigQuery come into play.Custom Visualization for Store CapacityUsing Looker Studio, we've created a custom visualization that shows the remaining daily capacity for each store over the next eight weeks. This allows our client to see which stores still have unfulfilled capacity and adjust their ad budget accordingly.For example, if a store has fulfilled its entire order capacity for the week, it doesn't require any more advertisements. This information allows our client to reallocate ad resources to other stores that need more attention.Integrating Data with BigQuery and Looker StudioTo bring this data into Looker Studio, we use an SQL query that is dynamically executed from Looker Studio over the BigQuery instance. We have two main sources of data: inventory available in different stores and the number of orders placed for each day to be fulfilled from web data.By merging these two datasets together and running an SQL query against them, we can provide our custom visualization with all the necessary data it needs to show an overview of what's happening in our client's business operations.This enables our client to make informed decisions about where they should allocate their advertising budget, ultimately helping them optimize their marketing efforts based on store inventory capacities.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1615-shopify-klavyio-rfm-segmentation-with-bigquery-ml","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.15. Shopify, Klavyio RFM Segmentation with BigQuery MLIntroductionIn this lesson, we'll explore a real-life example of how to use Looker Studio and BigQuery ML to analyze customer segmentation for a Shopify store using Klaviyo data. The goal is to understand different customer segments based on Recency, Frequency, and Monetary (RFM) value.RFM Segmentation ConceptRFM segmentation is a method that helps businesses identify different types of customers based on their:Recency: How recently they made a purchaseFrequency: How often they make purchasesMonetary Value: How much they've spent over their lifetime with the businessUsing these three values, we can segment customers into various clusters like high-value spenders or frequent recent customers.Problem: Undefined Customer SegmentsIn our example, the business had about 40,000 customers in their database but didn't know how to define the segments or which types of people to target.Solution: K-means Clustering AlgorithmTo solve this problem, we used the K-means clustering algorithm available in BigQuery ML. This algorithm helps find similar clusters of entities within a dataset.The raw data available for this project included client ID, email address from Shopify, date of purchase, and transaction amount. Using this data:We created a list of all purchases for every client.Calculated RFM values for each customer.Created an intermediary table with these RFM values.Provided this table as input to the K-means clustering algorithm.This process allowed us to explore the data without prescribing specific segments beforehand.Results: Five Different Customer ClustersThe K-means clustering algorithm managed to find five distinct customer clusters based on their RFM values:More than six months since the last purchase, low spendersAt least 1.5 years since the last purchase, very low monetary valueRecent customers (about six months), high spenders with more than 11 purchases on averageLoyal customersChurning or close-to-churn customersWith these clusters identified and labeled, the business could export these lists and target each segment with a different marketing strategy.Conclusion: Accessible Machine Learning with BigQuery MLThis example demonstrates that machine learning algorithms like K-means clustering can be learned and implemented quickly using Looker Studio and BigQuery ML without hiring a data scientist. The processing cost was minimal, making this approach accessible for businesses of all sizes.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1614-bigquery-looker-studio-case-study-labor-performance","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.14. BigQuery & Looker Studio Case Study: Labor PerformanceThe Client's ChallengeOur client, a call center, needed a central place to monitor the performance of their employees and agents taking calls. They used Harvest for time tracking and RingCentral for managing calls and voiceover IP.Integrating Data SourcesTo bring all the necessary data together, we enlisted the help of a developer to extract data from RingCentral and stream it into BigQuery tables. This process was done manually using development skills and APIs from Harvest.Luckily, there was a data connector available through Stitch Data for Harvest integration. By subscribing to Stitch Data and connecting it to Harvest, we were able to extract daily data from employee timesheets and export it directly to BigQuery.Combining Datasets in BigQueryNow in BigQuery, we had three datasets: data from RingCentral, data from Harvest, and another dataset with revenue information related to calls made by agents. We combined these datasets to calculate key performance indicators like revenue generated per agent, payable hours worked, number of calls handled per day, billable versus non-billable calls, etc.Analyzing Performance Metrics in Looker StudioUsing Looker Studio connected with BigQuery allowed us to create insightful visualizations of the labor performance metrics we calculated. Managers could easily see different views of time spent by employees on various activities like breaks, lunches, personal meetings or technical issues.This level of detail provided managers with valuable insights into resource allocation and hiring decisions based on intraday call volumes during different days of the week or hours within a day.Delivering Value through Data-driven DecisionsThe integration between BigQuery and Looker Studio brought tremendous value to our client by providing them with actionable insights that they couldn't get anywhere else. This helped them optimize their labor force—scaling up or down as needed—and cut down costs by gaining visibility into their operations.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1613-bigquery-looker-studio-case-study-affiliate-performance-dashboard","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.13. BigQuery & Looker Studio Case Study: Affiliate Performance DashboardThe Challenge: Handling ClickBank DataA few years ago, I encountered a challenge that led me to dive into the world of BigQuery. We were working with affiliate performance data from ClickBank, which initially provided us with CSV exports of their daily transactions. I started by putting this data into a Google Sheet, but quickly hit its limitations.Solution: Connecting to ClickBank APITo overcome these limitations, we decided to explore BigQuery and learn how it could help us manage this data more effectively. We eventually hired someone who used Google Cloud functions to directly connect to the ClickBank API and extract all the information about how their affiliates were performing.Valuable Insights: Subscriber Value, Gross Sales, and MoreWith the data now in BigQuery and accessible through Looker Studio, we could provide valuable insights like:The value of each subscriberGross salesRe-bill subscriptionsChargebacksChargesOur client was particularly interested in identifying affiliates who employed questionable tactics that resulted in high refunds and chargebacks.Ongoing Success: Three Years and CountingThis solution has been running on BigQuery for three years now, still providing our client with valuable insights. They can filter the data by different vendors or affiliates as needed. It's important to note that this isn't web data; it is raw data coming from another service tool like ClickBank.By processing and modeling this raw data from ClickBank, we've equipped our client with crucial numbers they can use to grow their business more efficiently.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1612-connecting-looker-studio-to-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.12. Connecting Looker Studio to BigQueryConnecting Looker Studio to BigQuery is a piece of cake, and there are two main ways to do it: directly connecting to a table or writing a custom and dynamic query from within Looker Studio.Directly Connecting to a TableFirst, let's talk about directly connecting to an existing table in BigQuery. Just like connecting to a Google Sheet, you'll select BigQuery as the data connector. From there, choose your project (which is essentially your account), your dataset, and then the specific table within that dataset.Once you've made these selections, you can connect just like you would with any other tool. You'll see the fields and values for that table, and voilà - you have your data source!Writing a Custom QueryThe second way of connecting involves writing a custom query from within Looker Studio that runs against your project in BigQuery. Instead of performing data modeling in BigQuery itself and saving the result as a table, you're telling Looker Studio to run the query on your behalf.This approach gets particularly interesting when using parameters. Remember parameters? They allow us to get user input within the Looker Studio interface.For example, if you don't know what date range the viewer is interested in when creating a report, you can use parameters to get that information from them directly. Then dynamically update your query accordingly before running it against BigQuery.Leveraging BigQuery's PowerThink about how you can use all this power and flexibility provided by BigQuery for current or future client projects. With such low costs and easy access, learning how to harness its capabilities could add value to whatever work you're doing now.Ask yourself these questions:Can I build an owned data pipeline?Is it possible for me to create an ownership strategy for working with data in a unique way, using BigQuery?Consider how you and your clients use data within various tools and industries. Can you translate that knowledge into SQL, deploy it in BigQuery, and create a repeatable process that adds value to your business? Ponder these questions and see how leveraging BigQuery can make a difference.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1611-working-with-data-in-bigquery-with-sql","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.11. Working with Data in BigQuery with SQLIn this lesson, we will learn how to work with data in BigQuery using SQL.Why SQL for BigQuery?Think of BigQuery as a massive Google Sheet that allows you to use SQL to manipulate and analyze your data. You can query data, join multiple datasets together, clean, process, and even perform machine learning tasks using BigQuery ML. The best part is you don't need any knowledge of Python or R; it's as simple as writing SQL syntax.Learning SQLIf you're new to SQL or want to brush up on your skills, there are plenty of resources available online. One popular choice is the Super Cool Data learning platform.A Practical ExampleLet's consider an example where we have a table containing daily sales information for ebooks, workshops, and courses. We want to calculate the profit from only ebooks and courses for the first quarter (January-March).Our table consists of columns like date, product name, sales amount, cost of goods sold (COGS), and ad spend.Translating Requirements into SQLTo achieve our goal:We want to select the date and product name.Calculate profit based on sales amount minus COGS minus ad spend.Apply filters for specific date ranges (first quarter) and products (ebooks and courses).Here's our SQL query:CopySELECT
  date,
  product,
  sales - COGS - ad_spend AS profit
FROM
  table_name
WHERE
  product IN ('ebook', 'course')
  AND date < '2021-04-01'
ORDER BY
  product DESC;This query is quite readable:We select the required columns (date and product) along with our calculated column (profit).Specify which table to select data from.Apply filters on the product and date columns.Finally, sort the output by product in descending order.Comparing SQL with Looker StudioSimilar operations can be performed in Looker Studio, but SQL provides more power and flexibility and a more readable and easier-to-understand syntax. With practice, you will become proficient at writing SQL queries for your data analysis tasks in Looker Studio.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1610-importing-data-from-marketing-tools-into-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.10 Importing Data from Marketing Tools into BigQueryIt's essential to know how to import data from various marketing tools like Shopify, LinkedIn, or Facebook into BigQuery. This lesson will guide you through the process using third-party transfer services that make the task easier and more efficient.Choosing a Data Transfer ToolThere are many data transfer tools available that allow you to extract data from sources and push them to destinations such as BigQuery. These tools usually have an easy setup process and handle the task automatically.Examples of popular data transfer tools include FiveTran, Supermetrics, and Stitch. When choosing a tool, consider whether it offers complete data exports, allowing you to extract all available information from your marketing tool and replicate it in BigQuery.Setting Up Your Transfer ServiceSetting up a third-party transfer service is typically quite simple:Sign up for the toolSelect your accountAuthorize your account to provide data to the toolAuthorize access for BigQueryChoose your datasetOnce set up, the tool will start extracting data from your marketing platform and send it directly into your selected BigQuery dataset.Benefits of Using a Third-Party Transfer ServiceUsing one of these services comes with several advantages:Automation: The setup is automated, making it easy for you.Full ownership: You have complete control over your data.No maintenance: You pay for the service, so they are responsible for maintaining the tool and ensuring that everything works smoothly.Data modeling: Some platforms include built-in data modeling capabilities, allowing you to clean up and process your information before pushing it to BigQuery.By utilizing a third-party transfer service to import your marketing data into BigQuery, you can start with clean, ready-to-use information in Looker Studio without having to worry about maintenance or complex setup processes.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/161-introduction-to-bigquery","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 16.1. Introduction to BigQueryWelcome to the advanced Looker Studio course, where we'll dive into the world of BigQuery. This lesson will help you understand what BigQuery is, why it's interesting, and how it might fit into your business. By the end of this lesson, you'll be equipped with the knowledge to decide whether or not BigQuery is right for you and your organization.Why Consider BigQuery?Before we jump into the specifics of BigQuery, let's discuss why you might want to consider it in the first place. You may have heard about others using it and wondered if it's worth exploring for your own purposes.Limitations of Your Current Data StackEvery data stack has its limitations. Whether you're currently using Looker Studio or another tool, understanding these limitations can help you determine if BigQuery could be a valuable addition to your arsenal.What is BigQuery?BigQuery is a powerful tool that can help overcome some of these limitations. In this section, we'll explore what makes BigQuery unique and how it can benefit your data analysis process.When Should You Use BigQuery?Not every situation calls for using BigQuery. In this part of the lesson, we'll discuss when incorporating this tool might make sense for your business needs.Bringing Data into BigQueryIf you decide that utilizing BigQuery is a good move for your organization, you'll need to bring your data into it so that you can work with it effectively. We'll cover various methods for importing data into this platform.Working with Data within BigQueryOnce your data is inside BigQuery, there are numerous ways to manipulate and analyze it. We'll go over some key techniques for working with data within this environment.Connecting Looker Studio to BigQueryTo get even more value from using both tools together, we'll discuss how to connect Looker Studio to BigQuery. This connection will enable you to take full advantage of the capabilities offered by both platforms.Case StudiesFinally, we'll explore some real-life case studies that demonstrate the power and potential of combining Looker Studio and BigQuery. By examining these examples, you'll gain a better understanding of how these tools can work together to create valuable insights for your business.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/109-union-with-full-outer-join","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.9. UNION (with Full Outer Join)A UNION operation appends two tables with the same schema together. It's like taking the second table and appending it right at the bottom of the first table. The fields don't need to have the same name, but their types should match. Since Looker Studio does not have a built-in UNION operation, we can use a full outer join to recreate a similar result.How to Achieve Union Using Full Outer JoinImagine you have two tables containing landing page and session data from two different Google Analytics websites. Your goal is to combine these tables so that you can see the total sessions for each landing page.To achieve this, start with a full outer join. The resulting table will have all values from both the left and right tables, and then you can work around it to create a similar result to a UNION operation.Combining Landing PagesUse the coalesce function to combine the landing page columns. This will create a single column containing the actual landing page from either the left or right table.Combining SessionsWhen working with numbers, you can use the IFNULL function to handle null values. This function checks if a value is null, and if it is, it replaces it with a specified value (usually zero). By using IFNULL on the sessions columns from both tables, you can safely add them together without encountering issues with null values.Example: In Facebook ads data, if you don't have a cost for a day, it returns null. When you sum five values together, if one of them is null, the result will be null as well. Using the IFNULL function, you can replace null values with zeros and avoid this problem.Now you have a table that is similar to the result of a UNION operation, where you can see the combined landing page data and total sessions for each page, without losing any information from the original tables.Additional real-life example: You might have two separate e-commerce websites for different markets, both with the same structure and similar products. By performing a UNION-like operation using a full outer join, you can analyze the combined data to get insights into the performance of specific landing pages across both markets.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/108-full-outer-join","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.8. Full Outer Join in Looker StudioA full outer join is the opposite of an inner join. While an inner join drops any non-matching rows, a full outer join keeps everything, even if they don't match. In a full outer join, you don't want to lose any data, and for anything that cannot be matched, a null value will be returned.Full Outer Join ExampleSuppose you have two tables with date, customer revenue, and ad costs. You want to perform a full outer join to keep all values from both tables. To do this in Looker Studio, configure the full outer join by selecting the appropriate join condition and join operator. In this case, you're joining on dates.The resulting join will show all the dates, revenues, and ad costs from both tables. However, the table might not be in the format you desire, with duplicate date columns and null values.To clean up the table, you can use a function called coalesce. This function returns the first non-missing value found in the list of fields. By applying coalesce to the date columns, you can create a single date column containing the actual date from either the left or right table.Now, with the cleaned-up table, you can see the dates, revenues, and ad costs from both tables, even when some values are missing. Depending on the context, you might decide to keep null values or replace them with zeros and proper formatting.Additional real-life example: In a business scenario, you might have two separate datasets from different departments in your company. One dataset contains sales data, and the other dataset includes marketing campaign data. By performing a full outer join, you can keep all the data from both datasets while connecting them on a common attribute, such as the date or campaign ID.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/107-inner-join","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.7. Inner Join in Looker StudioInner join is an interesting and time-saving join type. It returns only rows that satisfy the join condition from both tables, meaning non-matching rows from both tables will be dropped. This can be helpful when you only care about the values that can be enriched and do not want to include any missing or null values.Example: Cross-Device AnalysisLet's consider a scenario where you're performing a cross-device analysis for a client. The client wants to know the total page views and number of users who visited the website from both desktop and mobile devices. You have a dataset that includes user IDs, devices, and the number of page views per user.In Data Studio, you can create two filtered views of the dataset: one for desktop devices and one for mobile devices. To join the two views together and only include users who visited from both desktop and mobile devices, you can use an inner join. By doing this, non-matching rows (users who visited from either desktop or mobile, but not both) will be dropped, leaving you with the desired results.Defining Inner Join in Looker StudioTo define an inner join in Data Studio, follow these steps:Select the tables you want to join together.Click the ""Blend data"" button.In the blending options, change the join type from ""Left outer"" to ""Inner.""By changing the join type to inner, you'll only have rows that satisfy the join condition from both tables in your final dataset. This can help you quickly answer questions like the total page views and distinct users who visited from both desktop and mobile devices.Full Outer JoinA full join (or full outer join) is another type of join that returns all rows from both tables, including those that do not have a match in the other table. When there's no match, the result will show null values for the missing columns. This can be helpful when you want to see all the data from both tables, regardless of whether there's a match or not.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/106-right-outer-join","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.6. Right Outer JoinNow, let's discuss the right outer join. It may seem complicated at first, but it's essentially the left outer join applied in the opposite direction. The principles are the same, but now we're focusing on expanding the right table instead of the left table.Understanding Right Outer JoinsA right outer join can be used to enrich the right table or look up values for the right table. However, in many cases, you can simply swap the tables and use a left outer join instead. This is especially true when working with just two tables.In a right outer join, if a value exists in the right data source but not the left data source, the left data source will return a null value. Conversely, if a value exists in the left table but not the right table, it will be dropped since the focus is on the right table.In summary, there's nothing particularly unique about a right outer join compared to a left outer join. Both serve similar purposes, but with a different focus on which table is being expanded or enriched.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/105-data-blending-de-aggregation","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.5. Data Blending: De-AggregationThis lesson will cover an exciting topic: using left join to de-aggregate auto-aggregated metrics. You might wonder why this would be useful, but let's start with a simple question that's difficult to answer: What was our average revenue for source medium from Google Analytics over the last date range (last month, last quarter, or last seven days)?Breaking Down Aggregated MetricsTo answer this question, we need to break down an already aggregated metric and then calculate the average. This is not possible with auto-aggregated metrics coming from a data connector like Google Analytics. When you apply revenue to a scorecard, the metric type is set to auto, and you can't choose to average it. The reason for this limitation is that Data Studio doesn't know the appropriate breakdown for calculating the average (e.g., source medium per day, user type, channel, device, browser).De-Aggregating Metrics with Data BlendingTo calculate the average, we first need to decide which dimension we want to de-aggregate by (e.g., source medium, day). One way to do this is by using data blending. In this example, we'll de-aggregate by source medium, as that's what the client asked for.We'll start with a table from Google Analytics showing only the source medium without a metric. This table will list all source mediums seen in the selected date range. We want to look up the actual revenue for each source medium using a left outer join. The right table should be the revenue per source medium.The blended table will show the revenue for each source medium that had revenue, and null values for those that didn't. The resulting blended table is no longer connected directly to Google Analytics, and the metric type will be set to sum instead of auto. This allows us to perform calculations on the individual values.Now that we have access to the breakdown, we can choose other types of aggregation, such as averaging the values. The final result will give us the average revenue per source medium during the selected date range.Alternative De-Aggregation Method: Extracted Data SourcesAnother way to de-aggregate auto-aggregated metrics is by using extracted data sources. This method is easier to implement and doesn't require creating a blend. With extracted data sources, Data Studio extracts and de-aggregates the data for you. However, this method only updates once a day, so it's not ideal for real-time data analysis.In summary, data blending is a powerful technique for de-aggregating metrics when working with live connections, while extracted data sources are a convenient alternative when you can accept a one-day delay in your data.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/104-data-blending-paid-ads-cost","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.4. Data Blending: Paid Ads CostIn this lesson, you'll learn how to blend data from multiple sources to find the total ad cost and visualize the trend. Let's assume you have cost data from Facebook Ads, Google Ads, and ad management, and you want to analyze the total cost and trend.Data SourcesYour data sources include:Facebook Ads cost per day, fetched using Supermetrics in a Google Sheet.Google Ads cost per day, fetched using Supermetrics in another Google Sheet.Ad management cost, manually entered into a Google Sheet with the first date of each month.Blending the DataTo blend the data, perform left joins on the date column. The resulting blend should display the ad costs from Facebook, Google, and ad management for each day.Italic: To make the blend more meaningful, you could create a daily ad management cost instead of using monthly costs. This would give you daily ad management costs across the chart, along with Google Ads and Facebook Ads costs.Now, to answer the question of what the total ad cost is, including ad management and the trend, create a chart with a trend line. The trend line will help visualize the story of your ad spending across different platforms.Displaying the Total Ad CostTo display the total ad cost in a single number, you can create a custom field that adds Facebook Ads cost and Google Ads cost. Then, use a scorecard to display the total ad cost across all platforms.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/103-data-blending-data-enrichment","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.3. Data Blending: Data EnrichmentImagine you have an online business that acquires leads, and those leads later become customers. You use Google Analytics for web tracking and a CRM to track customer data. When a lead is captured through a form on your landing page, you store two additional pieces of information: the Google Analytics Client ID and the source medium for that session. This information is then passed to the CRM.In Google Analytics, you have data on the number of sessions, transactions, and revenue for each client. You want to blend this data with your CRM data to understand how much revenue and how many transactions you're getting from each original source medium.Blending Data for EnrichmentTo blend the data, you perform a simple left join on the Client ID. This process enriches the left table by adding the name, email, and lead source medium from the CRM table.Italic: You could have dropped the unnecessary columns (username and email) from the blend table and only kept the source medium column. This is just for demonstration purposes.Now that you have this data, you can create a table that answers the question, ""How much revenue and how many transactions did we get from each lead source medium?""By removing the unnecessary columns (username, email, and client ID) from the table, the data will automatically aggregate based on the metric aggregation types (sum).Adding Revenue per UserSuppose you want to add a column for revenue per user. You'll need to create a new custom field that calculates the sum of revenue divided by the count distinct of Client IDs. This will provide you with the revenue per user for each lead source medium.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/102-left-outer-join-in-looker-studio","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.2. Left Outer Join in Looker StudioIn this section, we will explore the left outer join in Looker Studio with a real-life example.Left Outer Join RecapA Looker Studio Left Outer Join returns all rows from the left table and the matching rows from the right table. If there is no match in the right table, NULL values will be returned for the right table columns. The primary goal of a left outer join is to enrich, widen, or add to the left table.Example: Sales Performance by Sales ManagerLet's consider a company with sales managers, each responsible for a specific city. The company wants to analyze the sales performance of its sales managers per million population in their cities. To do this, we need to blend two tables:The left table contains sales data, including the city, sales manager, and sales amount.The right table contains population data for each city and state.Our goal is to calculate the sales per million population for each sales manager by dividing the sales amount by the city population.Blending the Tables in Looker StudioIn Looker Studio, use data blending to create a blended data source by configuring the left table (sales data) and the right table (population data). Ensure that the left outer join is selected and that the join condition is based on the city value in both tables. Once the blend data source is configured, the resulting table will include columns for the city, state, sales manager, sales amount, and population.Create a calculated field called ""Sales per Million Population"" using the formula: SUM(sales) / (SUM(population) / 1,000,000). This field is now available in the blended data source.With the blended data source prepared, you can visualize the sales performance of each sales manager per million population. Remove unnecessary columns (city, state, sales amount, and population) to focus on the sales manager and sales per million population.Customize the table visualization by displaying the sales per million population as a bar chart with compact numbers and a target value representing the desired sales performance for each sales manager.Now, the company can easily assess the sales performance of its sales managers, taking into account the population of their respective cities.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/1010-cross-join","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.10. Cross Join in Looker StudioCross join is the final type of join we'll discuss. In essence, a cross join returns every possible combination of rows from the left and right tables. This is different from a full outer join, which only returns all the rows.For instance, let's say we have two small tables, each with three rows and three values. With a cross join, the result would contain nine rows, as it produces every possible combination (3 x 3). This can be particularly useful when working with datasets such as dates or different categories.Creating a Basic Table with Cross JoinImagine we have a set of dates for the year (365 dates) and different stores, geographic areas, or sales managers. We want to create a basic table with every date repeated for each value in the second category.For example, if we have three dates and three products, the table would have each date repeated three times for each product, like this:CopyJanuary 1st: A, B, C
January 2nd: A, B, C
January 3rd: A, B, CA cross join can be a good candidate for a complete left join when using left outer join. Let's say we have three different types of campaigns and dates per year. We run campaigns on Facebook, Microsoft, and Google, but on some days, we don't have a campaign in Google or Facebook. And we only started Microsoft ads from the middle of the year.None of the three data sources have a list of all different dates and campaigns. In this case, we can start with a table of all dates (365) and all campaigns. The cross join of these two will give us a complete dataset with all different combinations of dates and campaign names. Then, we can add data sources with left joins.This is one of the few instances where cross joins are incredibly useful.Blending Data with Cross JoinsLooker Studio automatically uses cross joins for blending two datasets together, as it produces every single value from every different combination of the two values. For example, when we choose two different scorecards and blend them together, the result will be a cross join.Cross joins do not have a join key or join condition because they grab all the values and return all the different combinations of the two datasets. As a result, there's no join condition needed. In the resulting blended dataset, we have access to both metrics.In this lesson, we've explored various join types in Looker Studio, starting with left join, right join, inner join, cross join, and full outer join. We've also seen how they can be applied in real-life scenarios for data enrichment, metric re-aggregation, and multi-channel cost reporting.In this chapter:→ 10.2. Left Outer Join in Looker Studio→ 10.3. Data Blending: Data Enrichment→ 10.4. Data Blending: Paid Ads Cost→ 10.5. Data Blending: De-Aggregation→ 10.6. Right Outer Join→ 10.7. Inner Join→ 10.8. Full Outer Join→ 10.9. UNION (with Full Outer Join)→ 10.10. Cross JoinEnroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
"https://lookerstudiomasterclass.com/101-intro-limitations-of-old-data-blending","200","OK","🌐The Most Complete and Advanced Looker Studio Training Course Online. 10.1. Intro & Limitations of Old Data BlendingWelcome to the advanced course on data modeling and data blending in Looker Studio! In our last session, we explored the foundations of data blending and discussed the left outer join. Today, we'll dive deeper into the rest of the join types available in Looker Studio, starting with some examples of the left join.Data Blending: A RefresherRemember, in Looker Studio, we can only use one data source per chart. However, we can blend data sources based on specific criteria and join keys, essentially creating a single blended data source. This allows us to connect multiple data sources to a single chart.Initially, data blending had some limitations:A maximum of five data sources could be blended.Only left outer join was supported.The same join key needed to be present in all data sources.While the limitation of blending up to five data sources still exists, we now have access to multiple join types and keys across different joins.Expanded Join TypesIn addition to the left outer join, Looker Studio now offers right, inner, full outer, and cross join types. This provides greater flexibility in how you can mix and match different join types between tables. For example, you might want a left join between the first and second tables, a full outer join between the second and third tables, and a cross join for the final table.Understanding Join Types with Venn DiagramsVenn diagrams are often used to illustrate different join types. These overlapping circles show how data from different tables is combined based on the join type being used.Let's take a closer look at the various join types in Looker Studio and how they can be applied in real-life scenarios.Enroll in the updated & extended Looker Studio Masterclass 2024 →📩  Receive my weekly Looker Studio tips🎥  Subscribe to my YouTube channel🖇  Connect with me on LinkedIn"
